<!-- SVG Heartbeat Message Flow Diagram -->
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1400 900" width="1400" height="900">
  <defs>
    <!-- Define gradients -->
    <linearGradient id="agentGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4a90e2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2e6cb8;stop-opacity:1" />
    </linearGradient>

    <linearGradient id="serverGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#50c878;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#3a9460;stop-opacity:1" />
    </linearGradient>

    <linearGradient id="dbGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ff9500;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#cc7700;stop-opacity:1" />
    </linearGradient>

    <!-- Define arrows -->
    <marker id="arrowhead" markerWidth="10" markerHeight="10" refX="9" refY="5" orient="auto">
      <polygon points="0 0, 10 5, 0 10" fill="#333" />
    </marker>

    <!-- Define shadows -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="2" stdDeviation="3" flood-opacity="0.3"/>
    </filter>
  </defs>

  <!-- Background -->
  <rect width="1400" height="900" fill="#f8f9fa"/>

  <!-- Title -->
  <text x="700" y="40" text-anchor="middle" font-family="Arial, sans-serif" font-size="28" font-weight="bold" fill="#2c3e50">
    SysManage Heartbeat Message Flow
  </text>

  <!-- Agent Side Container -->
  <g id="agent-side">
    <rect x="50" y="80" width="600" height="780" fill="white" stroke="#4a90e2" stroke-width="2" rx="10" filter="url(#shadow)"/>
    <rect x="50" y="80" width="600" height="50" fill="url(#agentGradient)" rx="10 10 0 0"/>
    <text x="350" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="white">
      SysManage Agent
    </text>

    <!-- Step 1: Timer triggers heartbeat -->
    <g id="step1">
      <rect x="80" y="160" width="220" height="80" fill="#e8f4fd" stroke="#4a90e2" stroke-width="2" rx="5"/>
      <text x="190" y="190" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        1. Timer Event
      </text>
      <text x="190" y="210" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#555">
        message_sender() loop
      </text>
      <text x="190" y="225" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#666">
        (ping_interval from config)
      </text>
    </g>

    <!-- Step 2: Create heartbeat message -->
    <g id="step2">
      <rect x="80" y="270" width="220" height="100" fill="#e8f4fd" stroke="#4a90e2" stroke-width="2" rx="5"/>
      <text x="190" y="300" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        2. Create Heartbeat
      </text>
      <text x="190" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        create_heartbeat_message()
      </text>
      <text x="190" y="335" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • agent_status: "healthy"
      </text>
      <text x="190" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • hostname, IPv4/IPv6
      </text>
      <text x="190" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • timestamp, is_privileged
      </text>
    </g>

    <!-- Step 3: Queue in SQLite -->
    <g id="step3">
      <rect x="80" y="400" width="220" height="100" fill="#fff3e0" stroke="#ff9500" stroke-width="2" rx="5"/>
      <text x="190" y="430" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        3. Queue Message
      </text>
      <text x="190" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        message_handler.
      </text>
      <text x="190" y="465" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        queue_outbound_message()
      </text>
      <text x="190" y="485" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        SQLite: agent.db
      </text>
    </g>

    <!-- Agent SQLite Database -->
    <g id="agent-db">
      <ellipse cx="450" cy="450" rx="80" ry="40" fill="url(#dbGradient)" stroke="#cc7700" stroke-width="2"/>
      <text x="450" y="445" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
        SQLite DB
      </text>
      <text x="450" y="460" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
        (agent.db)
      </text>
      <text x="450" y="475" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
        MessageQueue
      </text>
    </g>

    <!-- Step 4: Background thread picks up -->
    <g id="step4">
      <rect x="80" y="530" width="220" height="100" fill="#e8f4fd" stroke="#4a90e2" stroke-width="2" rx="5"/>
      <text x="190" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        4. Process Queue
      </text>
      <text x="190" y="580" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        process_outbound_queue()
      </text>
      <text x="190" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        Background thread
      </text>
      <text x="190" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        Priority: HIGH
      </text>
    </g>

    <!-- Step 5: Send via WebSocket -->
    <g id="step5">
      <rect x="80" y="660" width="220" height="90" fill="#e8f4fd" stroke="#4a90e2" stroke-width="2" rx="5"/>
      <text x="190" y="690" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        5. Send WebSocket
      </text>
      <text x="190" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        send_message_directly()
      </text>
      <text x="190" y="730" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        via websocket.send()
      </text>
    </g>
  </g>

  <!-- Server Side Container -->
  <g id="server-side">
    <rect x="750" y="80" width="600" height="780" fill="white" stroke="#50c878" stroke-width="2" rx="10" filter="url(#shadow)"/>
    <rect x="750" y="80" width="600" height="50" fill="url(#serverGradient)" rx="10 10 0 0"/>
    <text x="1050" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="white">
      SysManage Server
    </text>

    <!-- Step 6: Receive WebSocket -->
    <g id="step6">
      <rect x="780" y="160" width="220" height="80" fill="#e8fce8" stroke="#50c878" stroke-width="2" rx="5"/>
      <text x="890" y="190" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        6. Receive Message
      </text>
      <text x="890" y="210" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        websocket_endpoint()
      </text>
      <text x="890" y="225" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        FastAPI WebSocket
      </text>
    </g>

    <!-- Step 7: Route message -->
    <g id="step7">
      <rect x="780" y="270" width="220" height="90" fill="#e8fce8" stroke="#50c878" stroke-width="2" rx="5"/>
      <text x="890" y="300" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        7. Route Message
      </text>
      <text x="890" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        _route_message()
      </text>
      <text x="890" y="340" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        Type: HEARTBEAT
      </text>
    </g>

    <!-- Step 8: Queue in PostgreSQL -->
    <g id="step8">
      <rect x="780" y="390" width="220" height="110" fill="#fff3e0" stroke="#ff9500" stroke-width="2" rx="5"/>
      <text x="890" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        8. Queue in DB
      </text>
      <text x="890" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        server_queue_manager.
      </text>
      <text x="890" y="455" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        enqueue_message()
      </text>
      <text x="890" y="475" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        Direction: INBOUND
      </text>
      <text x="890" y="490" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        PostgreSQL
      </text>
    </g>

    <!-- Server PostgreSQL Database -->
    <g id="server-db">
      <ellipse cx="1150" cy="445" rx="80" ry="40" fill="url(#dbGradient)" stroke="#cc7700" stroke-width="2"/>
      <text x="1150" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
        PostgreSQL
      </text>
      <text x="1150" y="455" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
        MessageQueue
      </text>
      <text x="1150" y="470" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
        Table
      </text>
    </g>

    <!-- Step 9: Background processor -->
    <g id="step9">
      <rect x="780" y="530" width="220" height="100" fill="#e8fce8" stroke="#50c878" stroke-width="2" rx="5"/>
      <text x="890" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        9. Process Queue
      </text>
      <text x="890" y="580" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        MessageProcessor.
      </text>
      <text x="890" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        process_inbound_queue()
      </text>
      <text x="890" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        Background service
      </text>
    </g>

    <!-- Step 10: Handle heartbeat -->
    <g id="step10">
      <rect x="780" y="660" width="220" height="110" fill="#e8fce8" stroke="#50c878" stroke-width="2" rx="5"/>
      <text x="890" y="690" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
        10. Process Heartbeat
      </text>
      <text x="890" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#555">
        handle_heartbeat()
      </text>
      <text x="890" y="730" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Update last_access
      </text>
      <text x="890" y="745" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Set status = "up"
      </text>
      <text x="890" y="760" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Send ACK
      </text>
    </g>

    <!-- Update Host table -->
    <g id="host-table">
      <rect x="1080" y="680" width="140" height="70" fill="#fff3e0" stroke="#ff9500" stroke-width="2" rx="5"/>
      <text x="1150" y="705" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#2c3e50">
        Host Table
      </text>
      <text x="1150" y="725" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        last_access
      </text>
      <text x="1150" y="740" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#666">
        status = "up"
      </text>
    </g>
  </g>

  <!-- Arrows showing flow -->
  <g id="arrows">
    <!-- Agent side flow -->
    <path d="M 190 240 L 190 270" stroke="#4a90e2" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 190 370 L 190 400" stroke="#4a90e2" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 300 450 L 370 450" stroke="#ff9500" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 450 490 L 450 530 L 300 530 L 300 550" stroke="#ff9500" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 190 630 L 190 660" stroke="#4a90e2" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>

    <!-- WebSocket connection -->
    <path d="M 300 705 L 780 705 L 780 200" stroke="#e74c3c" stroke-width="3" stroke-dasharray="10,5" marker-end="url(#arrowhead)" fill="none"/>
    <text x="540" y="695" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#e74c3c">
      WebSocket (mTLS)
    </text>

    <!-- Server side flow -->
    <path d="M 890 240 L 890 270" stroke="#50c878" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 890 360 L 890 390" stroke="#50c878" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 1000 445 L 1070 445" stroke="#ff9500" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 1150 485 L 1150 530 L 1000 530 L 1000 550" stroke="#ff9500" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 890 630 L 890 660" stroke="#50c878" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
    <path d="M 1000 715 L 1080 715" stroke="#ff9500" stroke-width="2" marker-end="url(#arrowhead)" fill="none"/>
  </g>

  <!-- Timing annotations -->
  <g id="timing">
    <rect x="320" y="190" width="140" height="30" fill="#fffacd" stroke="#ffd700" stroke-width="1" rx="5"/>
    <text x="390" y="208" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#333">
      Every ping_interval
    </text>

    <rect x="1030" y="570" width="160" height="30" fill="#fffacd" stroke="#ffd700" stroke-width="1" rx="5"/>
    <text x="1110" y="588" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#333">
      Async background task
    </text>
  </g>

  <!-- Heartbeat Monitor Service -->
  <g id="monitor-service">
    <rect x="780" y="800" width="280" height="40" fill="#ffe4e1" stroke="#dc143c" stroke-width="2" rx="5"/>
    <text x="920" y="825" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#dc143c">
      Heartbeat Monitor Service (every 60s)
    </text>
  </g>

  <!-- Monitor arrow -->
  <path d="M 1150 750 L 1150 800 L 1060 800" stroke="#dc143c" stroke-width="2" marker-end="url(#arrowhead)" fill="none" stroke-dasharray="5,5"/>
  <text x="1105" y="790" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#dc143c">
    Check timeout
  </text>
</svg>