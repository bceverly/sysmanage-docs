{
  "site": {
    "title": "SysManage - Modern System Management Platform",
    "description": "Modern system management platform for comprehensive infrastructure monitoring and automation"
  },
  "nav": {
    "features": "Features",
    "getting_started": "Getting Started",
    "documentation": "Documentation",
    "config_builder": "Configuration Builder",
    "github": "GitHub"
  },
  "hero": {
    "title": "Modern System Management Made Simple",
    "subtitle": "Centralized monitoring, management, and automation for your entire infrastructure. Support for Linux, Windows, macOS, FreeBSD, and OpenBSD.",
    "get_started": "Get Started",
    "view_github": "View on GitHub"
  },
  "features": {
    "title": "Key Features",
    "cross_platform": {
      "title": "Cross-Platform Support",
      "description": "Manage Linux, Windows, macOS, FreeBSD, and OpenBSD systems from a single interface."
    },
    "real_time": {
      "title": "Real-Time Monitoring",
      "description": "WebSocket-based real-time communication for instant system updates and monitoring."
    },
    "security": {
      "title": "Enterprise Security",
      "description": "JWT authentication, mTLS, role-based access control, and comprehensive security scanning."
    },
    "package_management": {
      "title": "Package Management",
      "description": "Remote software installation, updates, and management across all supported platforms."
    },
    "multilingual": {
      "title": "Multi-Language Support",
      "description": "Native support for 14 languages including English, Spanish, French, German, and more."
    },
    "modern_ui": {
      "title": "Modern Web UI",
      "description": "Responsive React-based interface with real-time dashboards and comprehensive reporting."
    },
    "osVersionUpgrades": {
      "title": "‚¨ÜÔ∏è OS Version Upgrades",
      "majorVersionDetection": {
        "title": "Major Version Detection",
        "description": "Automatic detection of available OS major version upgrades"
      },
      "multiPlatformSupport": {
        "title": "Multi-Platform Support",
        "description": "Ubuntu LTS upgrades, Fedora version upgrades, macOS updates, Windows feature updates"
      },
      "bsdSupport": {
        "title": "BSD Support",
        "description": "OpenBSD sysupgrade and FreeBSD version upgrades"
      },
      "opensuseIntegration": {
        "title": "OpenSUSE Integration",
        "description": "Distribution upgrade detection and management"
      },
      "safetyFeatures": {
        "title": "Safety Features",
        "description": "Dry-run capabilities and upgrade validation before deployment"
      },
      "rebootManagement": {
        "title": "Reboot Management",
        "description": "Automatic reboot scheduling for OS upgrades requiring system restart"
      }
    }
  },
  "quick_start": {
    "title": "Quick Start",
    "step1": {
      "title": "Install Server",
      "description": "Deploy the SysManage server on your infrastructure",
      "link": "Server Installation Guide ‚Üí"
    },
    "step2": {
      "title": "Deploy Agents",
      "description": "Install agents on systems you want to manage",
      "link": "Agent Installation Guide ‚Üí"
    },
    "step3": {
      "title": "Start Managing",
      "description": "Access the web interface and approve your agents",
      "link": "Getting Started Guide ‚Üí"
    }
  },
  "architecture": {
    "title": "Architecture Overview",
    "server_components": "Server Components",
    "agent_features": "Agent Features"
  },
  "docs": {
    "webui_overview": {
      "title": "Web Interface Overview",
      "subtitle": "Explore the SysManage web interface with detailed screenshots and feature explanations."
    },
    "architecture": {
      "title": "Architecture Documentation",
      "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
      "message_flow": {
        "title": "Message Flow & State Management",
        "subtitle": "Comprehensive overview of how messages are passed, queued, and processed between SysManage agents and the backend server.",
        "overview": {
          "title": "Architecture Overview",
          "description": "SysManage uses a sophisticated message-passing architecture that ensures reliable, ordered communication between distributed agents and the central server. The system employs persistent message queues on both sides with automatic retry logic, priority handling, and state tracking."
        },
        "communication": {
          "title": "Communication Protocol",
          "websocket": {
            "title": "WebSocket Layer",
            "description": "All real-time communication between agents and the server occurs over WebSocket connections secured with mutual TLS (mTLS). The WebSocket layer provides:"
          },
          "queuing": {
            "title": "Persistent Message Queuing",
            "description": "Both agents and server maintain persistent message queues to ensure no data is lost during network interruptions or system restarts:"
          }
        },
        "states": {
          "title": "Message States & Lifecycle"
        },
        "types": {
          "title": "Message Types"
        },
        "priority": {
          "title": "Priority & Scheduling",
          "description": "Messages are processed according to priority levels, ensuring critical operations are handled first:"
        },
        "reliability": {
          "title": "Reliability Features"
        },
        "performance": {
          "title": "Performance Characteristics"
        },
        "monitoring": {
          "title": "Monitoring & Observability",
          "description": "The message flow system provides comprehensive monitoring capabilities:"
        }
      },
      "testing_excellence": {
        "title": "Testing Excellence: Revolutionary Dual Conftest Architecture",
        "subtitle": "Revolutionary dual conftest testing architecture achieving 100% coverage with enterprise-grade reliability.",
        "achievement": {
          "title": "Enterprise-Grade Testing Achievement",
          "python_tests": "Python Tests",
          "typescript_tests": "TypeScript Tests",
          "total_runtime": "Total Runtime",
          "flaky_tests": "Flaky Tests",
          "pass_status": "100% Pass",
          "lightning_fast": "Lightning Fast",
          "rock_solid": "Rock Solid",
          "seconds": "seconds"
        },
        "challenge": {
          "title": "The Challenge We Solved",
          "intro": "Most enterprise applications face an impossible testing trilemma:",
          "option1": "Production Database Testing ‚Üí Accurate but slow, complex setup required",
          "option2": "SQLite Testing ‚Üí Fast but prone to schema drift and compatibility issues",
          "option3": "Mock Everything ‚Üí Fast but misses real database integration bugs",
          "solution": "We pioneered a Dual Conftest Architecture that delivers the best of all worlds: production accuracy with development speed."
        },
        "solution": {
          "title": "Our Revolutionary Solution",
          "layer1_title": "Layer 1: Integration Testing Foundation",
          "layer1_subtitle": "Main Conftest (/tests/conftest.py)",
          "layer1_purpose": "Purpose: Complex integration tests with full production schema fidelity",
          "layer1_innovation": "Innovation: Automatic PostgreSQL ‚Üî SQLite synchronization via Alembic migrations",
          "layer1_feature1": "Single source of truth: production Alembic migrations",
          "layer1_feature2": "Zero manual schema maintenance",
          "layer1_feature3": "Perfect schema parity with production PostgreSQL",
          "layer1_feature4": "Ideal for multi-model integration tests",
          "layer2_title": "Layer 2: High-Speed API Testing",
          "layer2_subtitle": "API Conftest (/tests/api/conftest.py)",
          "layer2_purpose": "Purpose: Ultra-fast, focused API endpoint testing",
          "layer2_innovation": "Innovation: Surgical model replacement with SQLite-optimized definitions",
          "layer2_feature1": "Monkey-patches production models during test execution",
          "layer2_feature2": "10x faster than traditional database testing approaches",
          "layer2_feature3": "Complete isolation between test runs",
          "layer2_feature4": "Perfect for rapid development cycles"
        },
        "performance": {
          "title": "Performance Metrics That Matter",
          "before_title": "Before Our Architecture",
          "after_title": "After Implementation",
          "before_runtime": "Test suite runtime: 5-10 minutes",
          "before_flaky": "Flaky tests: 15-20%",
          "before_drift": "Schema drift issues: Weekly",
          "before_confidence": "Developer confidence: Low",
          "before_reliability": "CI/CD reliability: Poor",
          "after_runtime": "Test suite runtime: <60 seconds ‚ö°",
          "after_flaky": "Flaky tests: 0% üéØ",
          "after_drift": "Schema drift issues: Never ‚ú®",
          "after_confidence": "Developer confidence: Absolute üí™",
          "after_reliability": "CI/CD reliability: Perfect üöÄ"
        },
        "impact": {
          "title": "Business Impact",
          "fearless_dev": "Fearless Development",
          "fearless_desc": "With 100% test coverage and zero flaky tests, developers refactor with complete confidence. Every edge case is tested, every API endpoint validated, every database operation verified.",
          "rapid_iteration": "Rapid Iteration",
          "rapid_desc": "Sub-60-second test runs mean developers actually run tests during development. No more 'I'll test before I push' ‚Äî tests run continuously.",
          "prod_reliability": "Production Reliability",
          "prod_desc": "Automatic schema synchronization means test database always matches production. Zero 'works in tests but fails in production' scenarios.",
          "scalable_excellence": "Scalable Excellence",
          "scalable_desc": "As the application grows, the testing infrastructure scales effortlessly. New models auto-sync, new endpoints get drop-in fixtures, new requirements are instantly covered."
        },
        "quality": {
          "title": "Quality Metrics",
          "code_quality": "Code Quality",
          "pylint_score": "Pylint Score: 10.00/10",
          "eslint": "ESLint: 0 errors, 0 warnings",
          "type_coverage": "Type Coverage: 100%",
          "security_scan": "Security Scan: 0 vulnerabilities",
          "test_coverage": "Test Coverage",
          "line_coverage": "Line Coverage: 100%",
          "branch_coverage": "Branch Coverage: 100%",
          "api_endpoints": "API Endpoints: 100%",
          "database_models": "Database Models: 100%",
          "reliability": "Reliability",
          "test_stability": "Test Stability: 100%",
          "ci_success": "CI Success Rate: 100%",
          "zero_failed_merges": "Zero Failed Merges",
          "zero_rollbacks": "Zero Rollbacks"
        },
        "implementation": {
          "title": "Implementation Guidelines",
          "adding_models": "Adding New Models",
          "step1": "Create Alembic Migration: alembic revision --autogenerate -m \"Add YourModel\"",
          "step2": "Update API Conftest: Add SQLite-compatible model definition if needed",
          "step3": "Verify Compatibility: Use Integer not BigInteger for auto-increment",
          "step4": "Test Integration: Run both test suites to ensure compatibility",
          "compatibility_title": "SQLite Compatibility Rules",
          "rule1": "‚úÖ Integer primary keys (auto-increment supported)",
          "rule2": "‚ùå BigInteger primary keys (no auto-increment)",
          "rule3": "‚úÖ String instead of Text for performance",
          "rule4": "‚úÖ DateTime without timezone info",
          "rule5": "‚úÖ Simple foreign key relationships"
        },
        "advantage": {
          "title": "The Competitive Advantage",
          "intro": "Our dual conftest architecture isn't just technical excellence ‚Äî it's a competitive business advantage:",
          "ship_confidence": "Ship with Confidence: Every release thoroughly validated",
          "refactor_fear": "Refactor Without Fear: Tests catch any regression instantly",
          "scale_limits": "Scale Without Limits: Infrastructure grows with your needs",
          "develop_rapid": "Develop Rapidly: Fast tests enable quick iteration"
        },
        "footer": {
          "title": "This is Modern Testing Excellence",
          "description": "We've achieved what many said was impossible: enterprise-grade testing that's fast, maintainable, and comprehensive. Our dual conftest architecture represents the gold standard for modern application testing.",
          "tagline": "This is what confidence looks like. This is SysManage."
        }
      }
    }
  },
  "administration": {
    "title": "Administration",
    "subtitle": "Comprehensive system administration guides and procedures",
    "user_management": {
      "title": "User Management",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "overview": "Overview",
      "user_account_management": "User Account Management",
      "creating_user_accounts": "Creating User Accounts",
      "web_interface": "Web Interface",
      "api_example": "API Example",
      "modifying_user_accounts": "Modifying User Accounts",
      "profile_updates": "Profile Updates",
      "administrative_updates": "Administrative Updates",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deactivation": "Account Deactivation",
      "account_deletion": "Account Deletion",
      "roles_permissions": "Roles and Permissions",
      "built_in_roles": "Built-in Roles",
      "administrator": "Administrator",
      "operator": "Operator",
      "viewer": "Viewer",
      "auditor": "Auditor",
      "permission_matrix": "Permission Matrix",
      "custom_roles": "Custom Roles",
      "creating_custom_roles": "Creating Custom Roles",
      "authentication_methods": "Authentication Methods",
      "local_authentication": "Local Authentication",
      "password_policy_configuration": "Password Policy Configuration",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "supported_mfa_methods": "Supported MFA Methods",
      "mfa_configuration": "MFA Configuration",
      "external_authentication": "External Authentication",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "saml_integration": "SAML 2.0 Integration",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "session_configuration": "Session Configuration",
      "active_session_monitoring": "Active Session Monitoring",
      "common_user_workflows": "Common User Management Workflows",
      "new_employee_onboarding": "New Employee Onboarding",
      "role_change_process": "Role Change Process",
      "employee_offboarding": "Employee Offboarding",
      "security_incident_response": "Security Incident Response",
      "security_best_practices": "Security Best Practices",
      "account_security": "Account Security",
      "authentication_security": "Authentication Security",
      "compliance_considerations": "Compliance Considerations",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "login_problems": "Login Problems",
      "permission_issues": "Permission Issues",
      "integration_issues": "Integration Issues"
    },
    "host_management": {
      "title": "Host Management",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "overview": "Overview",
      "key_concepts": "Key Concepts",
      "host_registration_approval": "Host Registration and Approval",
      "registration_process": "Registration Process",
      "approval_workflow": "Approval Workflow",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "approval_criteria": "Approval Criteria",
      "host_organization": "Host Organization",
      "host_groups": "Host Groups",
      "group_types": "Group Types",
      "creating_host_groups": "Creating Host Groups",
      "dynamic_group_assignment": "Dynamic Group Assignment",
      "tagging_metadata": "Tagging and Metadata",
      "common_tag_categories": "Common Tag Categories",
      "tag_management": "Tag Management",
      "agent_lifecycle_management": "Agent Lifecycle Management",
      "agent_deployment": "Agent Deployment",
      "deployment_methods": "Deployment Methods",
      "deployment_best_practices": "Deployment Best Practices",
      "agent_updates": "Agent Updates",
      "update_strategy": "Update Strategy",
      "update_process": "Update Process",
      "agent_troubleshooting": "Agent Troubleshooting",
      "common_issues": "Common Issues",
      "diagnostic_tools": "Diagnostic Tools",
      "inventory_management": "Infrastructure Inventory Management",
      "hardware_inventory": "Hardware Inventory",
      "collected_information": "Collected Information",
      "inventory_reports": "Inventory Reports",
      "software_inventory": "Software Inventory",
      "software_tracking": "Software Tracking",
      "software_reports": "Software Reports",
      "bulk_operations": "Bulk Operations",
      "mass_actions": "Mass Management Actions",
      "available_bulk_operations": "Available Bulk Operations",
      "bulk_operation_process": "Bulk Operation Process",
      "automation_integration": "Automation Integration",
      "configuration_management": "Configuration Management",
      "cloud_integration": "Cloud Integration",
      "best_practices": "Host Management Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "operational_practices": "Operational Best Practices",
      "security_practices": "Security Best Practices"
    },
    "monitoring": {
      "title": "Monitoring & Alerts",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "overview": "Overview",
      "monitoring_capabilities": "Monitoring Capabilities",
      "metrics_collection": "Metrics Collection",
      "system_performance_metrics": "System Performance Metrics",
      "cpu_metrics": "CPU Metrics",
      "memory_metrics": "Memory Metrics",
      "storage_metrics": "Storage Metrics",
      "network_metrics": "Network Metrics",
      "application_service_metrics": "Application and Service Metrics",
      "service_monitoring": "Service Monitoring",
      "database_monitoring": "Database Monitoring",
      "web_server_monitoring": "Web Server Monitoring",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "api_integration": "API Integration",
      "alerting_system": "Alerting System",
      "alert_configuration": "Alert Configuration",
      "alert_types": "Alert Types",
      "threshold_configuration": "Threshold Configuration",
      "notification_channels": "Notification Channels",
      "supported_channels": "Supported Channels",
      "channel_configuration": "Channel Configuration",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "alert_suppression": "Alert Suppression",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_types": "Dashboard Types",
      "executive_dashboards": "Executive Dashboards",
      "operations_dashboards": "Operations Dashboards",
      "application_dashboards": "Application Dashboards",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "dashboard_customization": "Dashboard Customization",
      "widget_types": "Widget Types",
      "layout_options": "Layout Options",
      "access_control": "Access Control",
      "health_checks": "Health Check Configuration",
      "system_health": "System Health Checks",
      "core_system_checks": "Core System Checks",
      "service_health_checks": "Service Health Checks",
      "custom_health_checks": "Custom Health Checks",
      "performance_optimization": "Monitoring Performance Optimization",
      "data_retention": "Data Retention Policies",
      "retention_strategies": "Retention Strategies",
      "storage_optimization": "Storage Optimization",
      "collection_optimization": "Collection Optimization",
      "collection_intervals": "Collection Intervals",
      "agent_performance": "Agent Performance",
      "monitoring_best_practices": "Monitoring Best Practices",
      "alert_design": "Alert Design Best Practices",
      "dashboard_design": "Dashboard Design Best Practices",
      "operational_practices": "Operational Best Practices"
    }
  },
  "api": {
    "title": "API Reference",
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "authentication": {
      "title": "Authentication API",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "overview": "Overview",
      "authentication_flow": "Authentication Flow",
      "login": "Login",
      "refresh_token": "Refresh Token",
      "password_reset": "Password Reset",
      "reset_password": "Reset Password",
      "validate_reset_token": "Validate Reset Token",
      "path_parameters": "Path Parameters",
      "request_body": "Request Body",
      "response": "Response",
      "error_responses": "Error Responses",
      "example": "Example",
      "using_auth_tokens": "Using Authentication Tokens",
      "token_expiration": "Token Expiration",
      "security_best_practices": "Security Best Practices"
    },
    "hosts": {
      "title": "Host Management API",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "overview": "Overview",
      "fleet_management": "Fleet Management",
      "host_operations": "Host Operations",
      "hardware_system_info": "Hardware and System Information",
      "software_package_info": "Software and Package Information",
      "bulk_operations": "Bulk Operations",
      "important_notes": "Important Notes",
      "authentication_required": "Authentication Required"
    },
    "packages": {
      "title": "Package Management API",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "overview": "Overview",
      "package_discovery": "Package Discovery",
      "package_search": "Package Search",
      "package_installation": "Package Installation",
      "package_updates": "Package Updates",
      "os_upgrades": "OS Upgrades",
      "package_cache_management": "Package Cache Management",
      "query_parameters": "Query Parameters",
      "important_notes": "Important Notes"
    }
  },
  "getting_started": {
    "title": "Getting Started",
    "subtitle": "Step-by-step guides to get you up and running with SysManage quickly",
    "quick_start": {
      "title": "Quick Start Guide",
      "subtitle": "Get SysManage up and running in minutes with Docker Compose. Perfect for evaluation, development, and small-scale deployments.",
      "overview": "Overview",
      "setup_time": "Setup Time",
      "requirements": "Requirements",
      "infrastructure": "Infrastructure",
      "functionality": "Functionality",
      "prerequisites": "Prerequisites",
      "system_requirements": "System Requirements",
      "software_requirements": "Software Requirements",
      "network_requirements": "Network Requirements",
      "installing_docker": "Installing Docker (if needed)",
      "installation_steps": "Installation Steps",
      "clone_repository": "Clone the Repository",
      "configure_environment": "Configure Environment",
      "key_config_options": "Key Configuration Options",
      "generate_ssl_certificates": "Generate SSL Certificates",
      "start_sysmanage": "Start SysManage",
      "create_admin_user": "Create Admin User",
      "access_web_interface": "Access the Web Interface",
      "certificate_warning": "Certificate Warning",
      "verify_installation": "Verify Installation",
      "health_checks": "Health Checks",
      "service_status": "Service Status",
      "api_health_check": "API Health Check",
      "database_connection": "Database Connection",
      "web_interface": "Web Interface",
      "quick_troubleshooting": "Quick Troubleshooting",
      "container_wont_start": "Container Won't Start",
      "cant_access_web": "Can't Access Web Interface",
      "ssl_cert_issues": "SSL Certificate Issues",
      "next_steps": "Next Steps",
      "explore_interface": "Explore the Interface",
      "install_first_agent": "Install Your First Agent",
      "basic_management": "Basic Management",
      "production_deployment": "Production Deployment",
      "common_post_install": "Common Post-Installation Tasks",
      "configure_email": "Configure Email Notifications",
      "create_additional_users": "Create Additional Users",
      "setup_host_groups": "Set Up Host Groups",
      "configure_monitoring": "Configure Monitoring Thresholds",
      "useful_commands": "Useful Commands",
      "docker_compose_ops": "Docker Compose Operations",
      "backup_maintenance": "Backup and Maintenance",
      "log_management": "Log Management"
    }
  },
  "architecture": {
    "title": "Architecture Documentation",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "title": "System Overview",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "architecture_overview": "Architecture Overview",
      "high_level_architecture": "High-Level Architecture",
      "core_components": "Core Components",
      "sysmanage_server": "SysManage Server",
      "sysmanage_agents": "SysManage Agents",
      "web_interface": "Web Interface",
      "rest_api": "REST API",
      "key_features": "Key Features",
      "data_flow_architecture": "Data Flow Architecture",
      "agent_server_communication": "Agent-to-Server Communication",
      "user_request_processing": "User Request Processing",
      "security_architecture": "Security Architecture",
      "certificate_based_auth": "Certificate-Based Authentication",
      "network_security": "Network Security",
      "transport_layer": "Transport Layer",
      "application_layer": "Application Layer",
      "data_layer": "Data Layer",
      "scalability_design": "Scalability Design",
      "horizontal_scaling": "Horizontal Scaling",
      "server_scaling": "Server Scaling",
      "agent_scaling": "Agent Scaling",
      "performance_characteristics": "Performance Characteristics",
      "agent_capacity": "Agent Capacity",
      "response_times": "Response Times",
      "resource_usage": "Resource Usage",
      "deployment_patterns": "Deployment Patterns",
      "single_instance": "Single Instance Deployment",
      "high_availability": "High Availability Deployment",
      "multi_region": "Multi-Region Deployment",
      "use_cases": "Use Cases",
      "architecture": "Architecture",
      "technology_stack": "Technology Stack",
      "backend_technologies": "Backend Technologies",
      "frontend_technologies": "Frontend Technologies",
      "communication_security": "Communication & Security",
      "devops_deployment": "DevOps & Deployment",
      "integration_points": "Integration Points",
      "external_system_integration": "External System Integration",
      "authentication_systems": "Authentication Systems",
      "monitoring_alerting": "Monitoring & Alerting",
      "automation_orchestration": "Automation & Orchestration",
      "package_repositories": "Package Repositories",
      "next_steps": "Next Steps"
    }
  },
  "security": {
    "title": "Security Documentation",
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "authentication": {
      "title": "Authentication & Authorization",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "overview": "Authentication Overview",
      "auth_architecture": "Authentication Architecture",
      "jwt_authentication": "JWT Authentication",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "token_generation_process": "Token Generation Process",
      "jwt_configuration": "JWT Configuration",
      "token_rotation_security": "Token Rotation & Security",
      "automatic_rotation": "Automatic Rotation",
      "token_blacklisting": "Token Blacklisting",
      "token_validation_flow": "Token Validation Flow",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "default_roles": "Default Roles",
      "admin": "Admin",
      "operator": "Operator",
      "viewer": "Viewer",
      "auditor": "Auditor",
      "permission_system": "Permission System",
      "permission_examples": "Permission Examples",
      "rbac_implementation": "RBAC Implementation",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "mfa_implementation": "MFA Implementation",
      "supported_mfa_methods": "Supported MFA Methods",
      "totp": "TOTP (Time-based OTP)",
      "email_otp": "Email OTP",
      "recovery_codes": "Recovery Codes",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_configuration": "MFA Configuration",
      "session_management": "Session Management",
      "session_architecture": "Session Architecture",
      "session_features": "Session Features",
      "token_based_sessions": "Token-Based Sessions",
      "session_security": "Session Security",
      "session_monitoring": "Session Monitoring",
      "session_configuration": "Session Configuration",
      "password_policies": "Password Policies",
      "password_requirements": "Password Requirements",
      "default_password_policy": "Default Password Policy",
      "password_policy_configuration": "Password Policy Configuration",
      "security_monitoring": "Authentication Security Monitoring",
      "security_events": "Security Events",
      "monitored_events": "Monitored Events",
      "authentication_events": "Authentication Events",
      "suspicious_activities": "Suspicious Activities",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "integration_examples": "Integration Examples",
      "external_auth_providers": "External Authentication Providers",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "saml_integration": "SAML 2.0 Integration",
      "troubleshooting": "Troubleshooting Authentication",
      "common_issues": "Common Issues",
      "token_expired_errors": "Token Expired Errors",
      "mfa_setup_problems": "MFA Setup Problems",
      "rbac_permission_errors": "RBAC Permission Errors",
      "external_auth_integration": "External Auth Integration",
      "diagnostic_commands": "Diagnostic Commands",
      "next_steps": "Next Steps"
    }
  },
  "footer": {
    "description": "Modern system management platform for comprehensive infrastructure monitoring and automation.",
    "documentation": "Documentation",
    "server_docs": "Server Docs",
    "agent_docs": "Agent Docs",
    "api_reference": "API Reference",
    "security": "Security",
    "community": "Community",
    "github_repo": "GitHub Repository",
    "issue_tracker": "Issue Tracker",
    "discussions": "Discussions",
    "license": "License",
    "licensed_under": "Licensed under AGPLv3",
    "view_license": "View License",
    "copyright": "¬© 2024 SysManage. All rights reserved."
  },
  "installation": {
    "title": "Installation Guide",
    "system_requirements": "System Requirements",
    "prerequisites": "Prerequisites",
    "installation_steps": "Installation Steps",
    "troubleshooting": "Troubleshooting"
  },
  "configuration": {
    "title": "Configuration Guide",
    "basic_config": "Basic Configuration",
    "security_config": "Security Configuration",
    "advanced_features": "Advanced Features"
  },
  "security_page": {
    "title": "Security Documentation",
    "overview": "Security Overview",
    "features": "Security Features",
    "vulnerability_reporting": "Vulnerability Reporting"
  },
  "platforms": {
    "opensuse": {
      "title": "openSUSE Leap/Tumbleweed",
      "package_notes": "Package Manager Notes",
      "leap_note": "Uses stable packages, may need manual Rust installation",
      "tumbleweed_note": "Rolling release, Rust available via zypper",
      "python_versions": "Leap ships with Python 3.9+, Tumbleweed with latest stable"
    },
    "sles": {
      "title": "SUSE Linux Enterprise Server (SLES)",
      "enterprise_considerations": "Enterprise Considerations",
      "sles12_note": "May require Software Collections (SCL) for newer Python",
      "sles15_note": "Python 3.6+ included, but 3.9+ recommended",
      "firewall_note": "SuSEfirewall2 or firewalld may block agent ports",
      "selinux_note": "May require policy adjustments if enabled",
      "subscription_note": "Some packages require active SLES subscription",
      "service_notes": "SUSE Enterprise Notes",
      "firewall_config": "Open required ports via YaST or firewall-cmd",
      "apparmor_note": "SUSE uses AppArmor instead of SELinux by default",
      "logging_note": "Logs available via journalctl or /var/log/messages"
    }
  },
  "server_docs": {
    "title": "Server Documentation - SysManage",
    "description": "Complete documentation for SysManage server installation, configuration, and management.",
    "section_title": "Server",
    "header": {
      "title": "Server Documentation",
      "subtitle": "Complete guide for installing, configuring, and managing the SysManage server."
    },
    "overview": {
      "title": "Overview",
      "description": "The SysManage server is a modern web application built with FastAPI (Python) backend and React (TypeScript) frontend. It provides a centralized platform for managing multiple systems through lightweight agents.",
      "components_title": "Server Components",
      "backend_api": "Backend API - FastAPI with async support, JWT authentication, and WebSocket communication",
      "frontend_ui": "Frontend UI - React with TypeScript, Material-UI components, and real-time updates",
      "database": "Database - PostgreSQL with SQLAlchemy ORM and Alembic migrations",
      "authentication": "Authentication - JWT with token rotation and role-based access control",
      "communication": "Communication - WebSocket for real-time updates and REST API for operations",
      "monitoring": "Monitoring - Comprehensive metrics, logging, and health monitoring"
    },
    "quick_links": {
      "title": "Quick Links",
      "installation": "Server Installation",
      "configuration": "Configuration",
      "deployment": "Deployment",
      "testing": "Testing",
      "troubleshooting": "Troubleshooting"
    },
    "reports": {
      "title": "Reports & PDF Generation",
      "subtitle": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation capabilities.",
      "overview": "Overview",
      "overview_description": "SysManage includes a powerful reporting system that generates comprehensive reports about your infrastructure. The system supports both real-time HTML viewing and professional PDF generation for documentation and compliance purposes.",
      "realtime_html": "Real-time HTML Reports",
      "pdf_generation": "Professional PDF Generation",
      "multi_format": "Multiple Export Formats"
    },
    "testing": {
      "title": "Testing",
      "subtitle": "Comprehensive testing strategy including unit tests, integration tests, and end-to-end testing with Playwright.",
      "overview": "Testing Overview",
      "unit_tests": "Unit Tests",
      "integration_tests": "Integration Tests",
      "e2e_testing": "End-to-End Testing",
      "playwright": "Playwright Testing",
      "test_coverage": "Test Coverage",
      "ci_cd": "CI/CD Integration"
    },
    "deployment": {
      "title": "Deployment Guide",
      "subtitle": "Complete guide for deploying SysManage in production environments with high availability and scalability considerations.",
      "overview": "Deployment Overview",
      "production_deployment": "Production Deployment",
      "high_availability": "High Availability",
      "scalability": "Scalability",
      "load_balancing": "Load Balancing",
      "security_considerations": "Security Considerations",
      "monitoring": "Monitoring & Observability"
    },
    "features": {
      "title": "Features Overview",
      "subtitle": "Comprehensive overview of all SysManage features including system monitoring, package management, user administration, and security features.",
      "overview": "Features Overview",
      "system_monitoring": "System Monitoring",
      "package_management": "Package Management",
      "user_management": "User Management",
      "security_features": "Security Features",
      "reporting": "Reporting & Analytics",
      "multi_platform": "Multi-Platform Support"
    },
    "troubleshooting": {
      "title": "Troubleshooting Guide",
      "subtitle": "Comprehensive troubleshooting guide for common issues, diagnostic procedures, and problem resolution strategies.",
      "overview": "Troubleshooting Overview",
      "common_issues": "Common Issues",
      "diagnostic_procedures": "Diagnostic Procedures",
      "log_analysis": "Log Analysis",
      "performance_issues": "Performance Issues",
      "connectivity_problems": "Connectivity Problems",
      "database_issues": "Database Issues"
    }
  },
  "docs": {
    "title": "Documentation - SysManage",
    "description": "Complete documentation for SysManage server and agent components.",
    "header": {
      "title": "Documentation",
      "subtitle": "Comprehensive guides for deploying, configuring, and managing SysManage."
    },
    "server": {
      "title": "Server Documentation",
      "description": "Complete guide for installing, configuring, and managing the SysManage server.",
      "installation": "Installation Guide",
      "configuration": "Configuration",
      "deployment": "Deployment",
      "features": "Features",
      "reports": "Reports & PDF Generation",
      "testing": "Testing & Playwright",
      "troubleshooting": "Troubleshooting",
      "view_docs": "View Server Docs ‚Üí"
    },
    "agent": {
      "title": "Agent Documentation",
      "description": "Setup and management guide for SysManage agents across all platforms.",
      "installation": "Installation Guide",
      "configuration": "Configuration",
      "privileged_execution": "Privileged Execution",
      "cross_platform": "Cross-Platform Support",
      "troubleshooting": "Troubleshooting",
      "view_docs": "View Agent Docs ‚Üí"
    },
    "api": {
      "title": "API Reference",
      "description": "Complete REST API documentation for integrating with SysManage.",
      "authentication": "Authentication",
      "hosts": "Host Management",
      "packages": "Package Management & Uninstallation",
      "websockets": "WebSocket API",
      "monitoring": "Monitoring",
      "view_docs": "View API Docs ‚Üí"
    },
    "security": {
      "title": "Security",
      "description": "Security features, best practices, and vulnerability reporting.",
      "authentication": "Authentication & Authorization",
      "mtls": "Mutual TLS (mTLS)",
      "scanning": "Security Scanning",
      "best_practices": "Best Practices",
      "reporting": "Vulnerability Reporting",
      "view_docs": "View Security Docs ‚Üí"
    },
    "getting_started": {
      "title": "Getting Started",
      "description": "Quick start guides and tutorials for new users.",
      "quick_start": "Quick Start",
      "webui_overview": "Web Interface Overview",
      "first_deployment": "First Deployment",
      "agent_approval": "Agent Approval",
      "basic_management": "Basic Management",
      "tutorials": "Tutorials",
      "view_docs": "Get Started ‚Üí"
    },
    "administration": {
      "title": "Administration",
      "description": "Administrative guides for managing users, hosts, and system settings.",
      "user_management": "User Management",
      "host_management": "Host Management",
      "monitoring": "Monitoring & Alerts",
      "backup": "Backup & Recovery",
      "maintenance": "Maintenance",
      "view_docs": "View Admin Docs ‚Üí"
    },
    "architecture": {
      "title": "Architecture",
      "description": "Technical architecture documentation including system design, message flow, and component interactions.",
      "message_flow": "Message Flow & Queuing",
      "testing_excellence": "Testing Excellence",
      "system_overview": "System Overview",
      "performance_metrics": "Performance & Scalability",
      "database_schema": "Database Design",
      "websocket_protocol": "Communication Protocols",
      "view_docs": "View Architecture ‚Üí"
    },
    "additional_resources": {
      "title": "Additional Resources",
      "github_repo": "GitHub Repository",
      "issue_tracker": "Issue Tracker",
      "community_discussions": "Community Discussions",
      "agent_repo": "Agent Repository"
    }
  },
  "server_docs": {
    "title": "Server Documentation - SysManage",
    "description": "Complete documentation for SysManage server installation, configuration, and management.",
    "section_title": "Server",
    "header": {
      "title": "Server Documentation",
      "subtitle": "Complete guide for installing, configuring, and managing the SysManage server."
    },
    "overview": {
      "title": "Overview",
      "description": "The SysManage server is a modern web application built with FastAPI (Python) backend and React (TypeScript) frontend. It provides a centralized platform for managing multiple systems through lightweight agents.",
      "components_title": "Server Components",
      "backend_api": "<strong>Backend API</strong> - FastAPI with async support, JWT authentication, and WebSocket communication",
      "frontend_ui": "<strong>Frontend UI</strong> - React with TypeScript, Material-UI components, and real-time updates",
      "database": "<strong>Database</strong> - PostgreSQL with Alembic migrations and comprehensive data models",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning"
    },
    "installation": {
      "title": "üöÄ Installation",
      "description": "Step-by-step installation guide for setting up the SysManage server on your infrastructure.",
      "requirements": "System requirements and prerequisites",
      "methods": "Docker and traditional installation methods",
      "database": "Database setup and configuration",
      "ssl": "SSL certificate configuration",
      "link": "Installation Guide ‚Üí"
    },
    "configuration": {
      "title": "‚öôÔ∏è Configuration",
      "description": "Comprehensive configuration options for customizing your SysManage deployment.",
      "file_structure": "Configuration file structure",
      "database_settings": "Database connection settings",
      "security_options": "Security and authentication options",
      "websocket_api": "WebSocket and API configuration",
      "link": "Configuration Guide ‚Üí"
    },
    "deployment": {
      "title": "üèóÔ∏è Deployment",
      "description": "Production deployment strategies and best practices for scalable infrastructure.",
      "checklist": "Production deployment checklist",
      "scaling": "Load balancing and scaling",
      "monitoring": "Monitoring and logging setup",
      "backup": "Backup and disaster recovery",
      "link": "Deployment Guide ‚Üí"
    },
    "features": {
      "title": "‚ú® Features",
      "description": "Detailed overview of all server features and capabilities.",
      "host_management": "Host and agent management",
      "package_management": "Package management across platforms",
      "monitoring": "Real-time monitoring and alerts",
      "user_management": "User management and RBAC",
      "link": "Features Overview ‚Üí"
    },
    "reports": {
      "title": "üìã Reports & PDF Generation",
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "inventory": "Host inventory and system reports",
      "security": "User management and security reports",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "link": "Reports Documentation ‚Üí"
    },
    "testing": {
      "title": "üß™ Testing",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "unit_integration": "Unit and integration testing",
      "e2e": "End-to-end testing with Playwright",
      "coverage": "Test coverage and reporting",
      "cicd": "CI/CD testing pipeline",
      "link": "Testing Documentation ‚Üí"
    },
    "troubleshooting": {
      "title": "üîß Troubleshooting",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "debugging": "Log analysis and debugging",
      "performance": "Performance optimization",
      "maintenance": "Database maintenance",
      "link": "Troubleshooting Guide ‚Üí"
    },
    "security": {
      "title": "üîê Security",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "auth": "Authentication and authorization",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation ‚Üí"
    },
    "navigation": {
      "title": "Quick Navigation",
      "agent": "‚Üê Agent Documentation",
      "api": "API Reference ‚Üí"
    }
  },
  "agent_docs": {
    "title": "Agent Documentation - SysManage",
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "section_title": "Agent",
    "header": {
      "title": "Agent Documentation",
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms."
    },
    "overview": {
      "title": "Overview",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "platforms_title": "Supported Platforms",
      "platform_linux": "üêß Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_windows": "ü™ü Windows (10, 11, Server 2019/2022)",
      "platform_macos": "üçé macOS (Intel and Apple Silicon)",
      "platform_freebsd": "üîí FreeBSD",
      "platform_openbsd": "üõ°Ô∏è OpenBSD",
      "features_title": "Key Features",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies"
    },
    "installation": {
      "title": "üöÄ Installation",
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "prerequisites": "Prerequisites and system requirements",
      "methods": "Installation methods (source, packages)",
      "venv": "Virtual environment setup",
      "service": "Service configuration",
      "link": "Installation Guide ‚Üí"
    },
    "configuration": {
      "title": "‚öôÔ∏è Configuration",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "auto_discovery": "Auto-discovery setup (recommended)",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "logging": "Logging and internationalization",
      "link": "Configuration Guide ‚Üí"
    },
    "privileged": {
      "title": "üîê Privileged Execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "cross_platform": "Cross-platform privileged execution",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "scripts": "Automated privilege scripts",
      "link": "Privileged Execution ‚Üí"
    },
    "cross_platform": {
      "title": "üåç Cross-Platform Support",
      "description": "Platform-specific features, package managers, and system integration details.",
      "linux": "Linux distributions and package managers",
      "windows": "Windows service integration",
      "macos": "macOS launchd configuration",
      "bsd": "BSD-specific considerations",
      "link": "Cross-Platform Guide ‚Üí"
    },
    "troubleshooting": {
      "title": "üîß Troubleshooting",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "connection": "Connection and network issues",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "debugging": "Log analysis and debugging",
      "link": "Troubleshooting Guide ‚Üí"
    },
    "security": {
      "title": "üîí Security",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "mtls": "Mutual TLS (mTLS) authentication",
      "certificates": "Certificate management",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "link": "Security Documentation ‚Üí"
    },
    "architecture": {
      "title": "Agent Architecture",
      "description": "The agent operates as a persistent service with the following workflow:",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity"
    },
    "navigation": {
      "title": "Quick Navigation",
      "server": "‚Üê Server Documentation",
      "api": "API Reference ‚Üí"
    }
  },
  "server_installation": {
    "title": "Server Installation Guide - SysManage",
    "description": "Complete installation guide for SysManage server including prerequisites, database setup, and configuration.",
    "breadcrumb_installation": "Installation",
    "header": {
      "title": "Server Installation Guide",
      "subtitle": "Complete step-by-step installation guide for setting up the SysManage server on your infrastructure."
    },
    "requirements": {
      "title": "System Requirements",
      "required": "Required",
      "supported": "Supported",
      "python": {
        "title": "üêç Python",
        "version": "3.11 or 3.12",
        "note": "Note: Python 3.13 is NOT yet supported due to package compatibility issues"
      },
      "nodejs": {
        "title": "üü¢ Node.js",
        "version": "20.x or higher",
        "description": "For building the React frontend"
      },
      "postgresql": {
        "title": "üêò PostgreSQL",
        "version": "14 or higher",
        "description": "Primary database for all application data"
      },
      "os": {
        "title": "üíª Operating System",
        "platforms": "Linux, macOS, Windows, FreeBSD, OpenBSD",
        "description": "Cross-platform deployment"
      }
    },
    "prerequisites": {
      "title": "Platform-Specific Prerequisites",
      "ubuntu_debian": "Ubuntu/Debian",
      "ubuntu25": "Ubuntu 25.04+",
      "centos_rhel": "CentOS/RHEL",
      "macos": "macOS",
      "windows": "Windows",
      "freebsd": "FreeBSD",
      "openbsd": "OpenBSD",
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10 (Recommended)"
      },
      "ubuntu25": {
        "title": "Ubuntu 25.04+ (Python 3.12 from Source)",
        "note": "Ubuntu 25.04+ only ships with Python 3.13, which is not yet compatible. You must build Python 3.12 from source:"
      },
      "centos": {
        "title": "CentOS/RHEL/Fedora"
      },
      "macos": {
        "title": "macOS"
      },
      "windows": {
        "title": "Windows"
      },
      "freebsd": {
        "title": "FreeBSD"
      },
      "openbsd": {
        "title": "OpenBSD"
      }
    },
    "installation_steps": {
      "title": "Installation Steps",
      "step1": {
        "title": "Step 1: Clone and Setup"
      },
      "step2": {
        "title": "Step 2: Install Backend Dependencies"
      },
      "step3": {
        "title": "Step 3: Database Setup",
        "description": "Create PostgreSQL database and user:",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "openbsd": "OpenBSD",
        "windows": "Windows",
        "security_notes": {
          "title": "‚ö†Ô∏è Security Notes",
          "dev_password": "Development password <code>abc123</code> matches <code>sysmanage-dev.yaml</code>",
          "never_production": "NEVER use this password in production",
          "change_password": "Change password in both PostgreSQL AND your configuration file"
        }
      },
      "step4": {
        "title": "Step 4: Test Database Connection"
      },
      "step5": {
        "title": "Step 5: Install Frontend Dependencies"
      },
      "step6": {
        "title": "Step 6: Configuration",
        "description": "Create configuration file at:",
        "config_generator": {
          "title": "üí° Configuration Generator Available",
          "description": "Use the interactive",
          "link": "Configuration Builder Tool"
        },
        "linux_macos_bsd": "Linux/macOS/BSD:",
        "windows_path": "Windows:",
        "security_steps": {
          "title": "üîê Required Security Steps",
          "generate_secrets": "Generate new secrets: <code>openssl rand -base64 32</code>",
          "strong_passwords": "Use strong passwords (12+ characters)",
          "file_permissions": "Set proper file permissions: <code>chmod 600 /etc/sysmanage.yaml</code>",
          "never_commit": "Never commit configuration files to version control"
        }
      },
      "step7": {
        "title": "Step 7: Run Secure Installation Script",
        "security_note": {
          "title": "üîê REQUIRED for New Installations",
          "description": "The secure installation script must be run to create the initial admin user and configure unique security tokens for your installation."
        },
        "features": {
          "title": "What this script does:",
          "admin_user": "Creates the initial administrative user account",
          "jwt_secret": "Generates unique JWT secret for authentication",
          "password_salt": "Generates unique password salt for secure password hashing",
          "config_hardening": "Applies security hardening to configuration files",
          "prevents_defaults": "Prevents use of default/example security tokens"
        },
        "warning": {
          "title": "‚ö†Ô∏è Important Security Notes",
          "required": "This step is REQUIRED",
          "required_desc": "the application will not function securely without it",
          "unique_tokens": "Each installation gets unique security tokens to prevent credential reuse",
          "run_once": "Only run this script once per installation",
          "backup_config": "Backup your configuration file after running this script"
        }
      },
      "step8": {
        "title": "Step 8: Start the Application",
        "access_description": "Access the application at:",
        "https": "HTTPS:",
        "https_url": "https://sysmanage.org:7443 (if SSL certs exist)",
        "http": "HTTP:",
        "http_url": "http://localhost:3000 (fallback)"
      }
    },
    "ssl": {
      "title": "SSL Certificates (Optional)",
      "description": "For HTTPS development, place your SSL certificates in:",
      "fallback": "If certificates are not found, the system automatically falls back to HTTP on localhost."
    },
    "troubleshooting": {
      "title": "Troubleshooting",
      "package_errors": {
        "title": "Package Build Errors",
        "missing_libpq": "Missing libpq-fe.h:",
        "install_libpq": "Install <code>libpq-dev</code> (Ubuntu) or <code>postgresql-devel</code> (RHEL)",
        "httptools_errors": "httptools build errors:",
        "install_libuv": "Install <code>libuv1-dev</code> (Ubuntu) or <code>libuv-devel</code> (RHEL)",
        "python313_issues": "Python 3.13 issues:",
        "use_older_python": "Use Python 3.11 or 3.12 instead"
      },
      "db_issues": {
        "title": "Database Connection Issues",
        "verify_postgresql": "Verify PostgreSQL is running: <code>sudo systemctl status postgresql</code>",
        "check_credentials": "Check credentials match configuration file",
        "test_connection": "Test connection with psql command shown above"
      },
      "port_conflicts": {
        "title": "Port Conflicts",
        "ensure_ports": "Ensure ports 6443 (API) and 7443 (frontend) are available",
        "check_services": "Check for existing services: <code>netstat -tlnp | grep :6443</code>",
        "modify_ports": "Modify ports in configuration if needed"
      },
      "permission_issues": {
        "title": "Permission Issues",
        "set_config_permissions": "Set configuration file permissions: <code>chmod 600 /etc/sysmanage.yaml</code>",
        "ensure_ownership": "Ensure proper ownership of directories",
        "check_venv": "Check virtual environment activation"
      }
    },
    "navigation": {
      "server_docs": "‚Üê Server Documentation",
      "config_guide": "Configuration Guide ‚Üí"
    },
    "note": "Note"
  },
  "api_docs": {
    "title": "API Reference - SysManage",
    "description": "Complete REST API documentation for integrating with SysManage.",
    "section_title": "API Reference",
    "header": {
      "title": "API Reference",
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically."
    },
    "overview": {
      "title": "Overview",
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features"
    }
  },
  "security_docs": {
    "title": "Security Documentation - SysManage",
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "section_title": "Security",
    "header": {
      "title": "Security Documentation",
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments."
    },
    "database_security": {
      "title": "üóÑÔ∏è Database Security",
      "description": "UUID-based primary keys and secure database design patterns for enhanced security.",
      "uuid_keys": "UUID-based primary keys prevent ID enumeration attacks",
      "replay_protection": "Non-sequential identifiers prevent replay attacks",
      "information_leakage": "Eliminates predictable resource URL patterns",
      "privacy_enhanced": "Enhanced privacy through non-correlatable identifiers",
      "gdpr_compliance": "GDPR compliance support for data anonymization",
      "secure_installation": "Secure installation script with unique tokens",
      "link": "Database Security ‚Üí"
    }
  },
  "server_configuration": {
    "title": "Server Configuration Guide - SysManage",
    "description": "Complete configuration guide for SysManage server including security settings, database configuration, and advanced features.",
    "breadcrumb": {
      "server": "Server",
      "configuration": "Configuration"
    },
    "header": {
      "title": "Server Configuration Guide",
      "description": "Comprehensive configuration options for customizing your SysManage server deployment."
    },
    "file_locations": {
      "title": "Configuration File Locations",
      "linux_macos_bsd": "üêß Linux/macOS/BSD",
      "windows": "ü™ü Windows",
      "development": "üõ†Ô∏è Development"
    },
    "basic": {
      "title": "Basic Configuration",
      "api_server": {
        "title": "API Server Settings",
        "notes": {
          "title": "üìù Notes",
          "host_binding": "<strong>Host binding:</strong> Use <code>0.0.0.0</code> for external access, <code>localhost</code> for local only",
          "ssl_certificates": "<strong>SSL certificates:</strong> If not provided, server falls back to HTTP",
          "port_selection": "<strong>Port selection:</strong> Ensure the port is not in use by other services"
        }
      },
      "database": {
        "title": "Database Configuration",
        "security_warning": {
          "title": "‚ö†Ô∏è Security Warning",
          "description": "The example password <code>abc123</code> is for development only. <strong>Always use strong passwords in production!</strong>"
        }
      },
      "webui": {
        "title": "Web UI Settings"
      }
    },
    "security": {
      "title": "Security Configuration",
      "core": {
        "title": "Core Security Settings",
        "generating_values": {
          "title": "üîê Generating Secure Values"
        }
      },
      "password_policy": {
        "title": "Password Policy Configuration",
        "notes": {
          "title": "üìù Password Policy Notes",
          "realtime_validation": "<strong>Real-time validation:</strong> Policies are enforced in both frontend and backend",
          "multilanguage": "<strong>Multi-language:</strong> Error messages available in all 14 supported languages",
          "flexible_requirements": "<strong>Flexible requirements:</strong> Adjust policies to meet your organization's needs"
        }
      }
    },
    "email": {
      "title": "Email Configuration",
      "smtp": {
        "title": "SMTP Settings",
        "providers": {
          "title": "üìß Common SMTP Configurations",
          "gmail": "Gmail",
          "office365": "Office 365",
          "exchange": "Exchange",
          "postfix": "Postfix",
          "gmail_note": "<strong>Note:</strong> Requires 2FA and App Password. Visit <a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Google App Passwords</a> for setup."
        }
      }
    },
    "certificates": {
      "title": "Certificate Management",
      "storage": {
        "title": "Certificate Storage",
        "permissions": {
          "title": "üîí Required Permissions",
          "directory": "<strong>Certificate directory:</strong> <code>0755</code> (owner rwx, group/others rx)",
          "private_keys": "<strong>Private keys:</strong> <code>0600</code> (owner read/write only)",
          "certificates": "<strong>Certificates:</strong> <code>0644</code> (owner rw, others read)"
        }
      },
      "mtls": {
        "title": "mTLS Configuration",
        "description": "Mutual TLS settings are automatically managed by the server. When hosts are approved, client certificates are generated and stored in the certificate directory.",
        "workflow": {
          "title": "üîÑ mTLS Workflow",
          "step1": "<strong>Host Registration:</strong> Agent registers with pending status",
          "step2": "<strong>Manual Approval:</strong> Administrator approves host in web interface",
          "step3": "<strong>Certificate Generation:</strong> Server generates unique client certificate",
          "step4": "<strong>Secure Authentication:</strong> Subsequent connections use mTLS"
        }
      }
    },
    "advanced": {
      "title": "Advanced Features",
      "discovery": {
        "title": "Agent Discovery Service",
        "service": {
          "title": "üì° Discovery Service",
          "description": "Allows agents to automatically discover and configure themselves with available servers on the network."
        }
      },
      "logging": {
        "title": "Logging Configuration"
      },
      "performance": {
        "title": "Performance Tuning"
      }
    },
    "permissions": {
      "title": "File Permissions and Security",
      "directory": {
        "title": "Required Directory Structure"
      },
      "security_checklist": {
        "title": "üõ°Ô∏è Security Checklist",
        "config_file": "‚úÖ Configuration file is readable only by service user",
        "cert_directory": "‚úÖ Certificate directory has restricted access",
        "private_keys": "‚úÖ Private keys are protected with 0600 permissions",
        "strong_passwords": "‚úÖ Strong passwords and secrets are used",
        "jwt_rotation": "‚úÖ JWT secrets are regularly rotated",
        "db_credentials": "‚úÖ Database credentials are unique and strong"
      }
    },
    "environment": {
      "title": "Environment Variables",
      "description": "Configuration can also be set via environment variables (overrides YAML file):"
    },
    "testing": {
      "title": "Testing Configuration",
      "validation": {
        "title": "Validation Steps",
        "syntax": "<strong>Configuration Syntax:</strong>",
        "database": "<strong>Database Connection:</strong>",
        "email": "<strong>Email Configuration:</strong>",
        "ssl": "<strong>SSL Certificates:</strong>"
      }
    },
    "navigation": {
      "installation": "‚Üê Installation Guide",
      "deployment": "Deployment Guide ‚Üí"
    }
  },
  "server_deployment": {
    "title": "Deployment Guide - SysManage Server",
    "description": "Production deployment strategies and best practices for scalable SysManage infrastructure.",
    "breadcrumb": {
      "server": "Server",
      "deployment": "Deployment"
    },
    "header": {
      "title": "Deployment Guide",
      "description": "Production deployment strategies and best practices for scalable, secure, and reliable SysManage infrastructure."
    },
    "overview": {
      "title": "Deployment Overview",
      "description": "SysManage can be deployed in various configurations depending on your infrastructure requirements, from single-server setups to highly available multi-node clusters.",
      "strategies": {
        "single": {
          "title": "üñ•Ô∏è Single Server Deployment",
          "description": "Ideal for small to medium environments (up to 100 hosts)",
          "features": {
            "components": "Single server hosts all components",
            "database": "PostgreSQL database on same server",
            "configuration": "Simple configuration and maintenance",
            "resources": "Lower resource requirements"
          }
        },
        "ha": {
          "title": "üîÑ High Availability Deployment",
          "description": "Production environments requiring zero downtime",
          "features": {
            "servers": "Multiple application servers",
            "load_balancer": "Load balancer with SSL termination",
            "clustering": "Database clustering with failover",
            "redundancy": "Redundant network and storage"
          }
        },
        "cloud": {
          "title": "‚òÅÔ∏è Cloud Deployment",
          "description": "Scalable cloud-native deployment options",
          "features": {
            "orchestration": "Container orchestration (Kubernetes)",
            "scaling": "Auto-scaling capabilities",
            "database": "Managed database services",
            "availability": "Multi-region availability"
          }
        }
      }
    },
    "checklist": {
      "title": "Production Checklist",
      "pre_deployment": {
        "title": "Pre-Deployment",
        "hardware": "Server hardware/VM specifications meet requirements",
        "network": "Network connectivity and firewall rules configured",
        "ssl": "SSL certificates obtained and validated",
        "dns": "DNS records configured",
        "database": "PostgreSQL database server prepared",
        "monitoring": "Backup and monitoring systems in place"
      },
      "security": {
        "title": "Security Configuration",
        "https": "HTTPS/TLS enabled and enforced",
        "passwords": "Strong password policies configured",
        "jwt": "JWT token settings optimized",
        "database": "Database access restricted to application",
        "firewall": "Firewall rules limiting access to required ports",
        "logs": "Log file permissions and rotation configured"
      },
      "performance": {
        "title": "Performance Optimization",
        "pooling": "Database connection pooling configured",
        "assets": "Frontend assets minified and compressed",
        "caching": "Caching headers configured",
        "limits": "Resource limits set for application processes",
        "logging": "Log levels set appropriately for production"
      }
    },
    "single_server": {
      "title": "Single Server Deployment",
      "requirements": {
        "title": "System Requirements",
        "component": "Component",
        "minimum": "Minimum",
        "recommended": "Recommended"
      },
      "installation": {
        "title": "Installation Steps"
      },
      "config": {
        "title": "Production Configuration"
      }
    },
    "ha": {
      "title": "High Availability Deployment",
      "architecture": {
        "title": "Architecture Overview"
      },
      "load_balancer": {
        "title": "Load Balancer Configuration",
        "nginx": {
          "title": "Nginx Configuration"
        }
      },
      "database": {
        "title": "Database Clustering",
        "replication": {
          "title": "PostgreSQL Streaming Replication"
        }
      }
    },
    "container": {
      "title": "Container Deployment",
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetes Deployment"
      }
    },
    "monitoring": {
      "title": "Monitoring & Logging",
      "system": {
        "title": "System Monitoring",
        "prometheus": {
          "title": "Prometheus Configuration"
        },
        "health": {
          "title": "Health Check Endpoint"
        }
      },
      "logs": {
        "title": "Log Management"
      }
    },
    "backup": {
      "title": "Backup & Disaster Recovery",
      "database": {
        "title": "Database Backup"
      },
      "disaster": {
        "title": "Disaster Recovery Plan",
        "step1": "<strong>Assessment:</strong> Determine scope of failure and affected systems",
        "step2": "<strong>Communication:</strong> Notify stakeholders and users of the incident",
        "step3": "<strong>Isolation:</strong> Isolate failed components to prevent further damage",
        "step4": "<strong>Recovery:</strong> Restore from backups or failover to standby systems",
        "step5": "<strong>Verification:</strong> Test restored systems and verify functionality",
        "step6": "<strong>Post-mortem:</strong> Document incident and improve procedures"
      }
    },
    "performance": {
      "title": "Performance Optimization",
      "database": {
        "title": "Database Tuning"
      },
      "application": {
        "title": "Application Tuning"
      },
      "caching": {
        "title": "Caching Strategy",
        "redis": "<strong>Redis:</strong> Session storage and temporary data caching",
        "cdn": "<strong>CDN:</strong> Static asset delivery and geographic distribution",
        "application": "<strong>Application Cache:</strong> Database query result caching",
        "browser": "<strong>Browser Cache:</strong> Client-side asset caching with appropriate headers"
      }
    },
    "security": {
      "title": "Security Hardening",
      "network": {
        "title": "Network Security"
      },
      "application": {
        "title": "Application Security",
        "https": "<strong>HTTPS Only:</strong> Enforce TLS for all connections",
        "hsts": "<strong>HSTS:</strong> HTTP Strict Transport Security headers",
        "csp": "<strong>CSP:</strong> Content Security Policy implementation",
        "rate_limiting": "<strong>Rate Limiting:</strong> API endpoint rate limiting",
        "input_validation": "<strong>Input Validation:</strong> Comprehensive input sanitization",
        "audit_logging": "<strong>Audit Logging:</strong> Log all administrative actions"
      }
    },
    "maintenance": {
      "title": "Maintenance & Updates",
      "procedure": {
        "title": "Update Procedure",
        "step1": "<strong>Backup:</strong> Create full system backup before updates",
        "step2": "<strong>Testing:</strong> Test updates in staging environment",
        "step3": "<strong>Maintenance Window:</strong> Schedule maintenance with user notification",
        "step4": "<strong>Update:</strong> Apply updates following documented procedures",
        "step5": "<strong>Verification:</strong> Verify all systems function correctly",
        "step6": "<strong>Rollback Plan:</strong> Have rollback procedures ready if needed"
      },
      "tasks": {
        "title": "Maintenance Tasks",
        "daily": {
          "title": "Daily",
          "monitoring": "Monitor system health and performance",
          "logs": "Review application logs for errors",
          "backup": "Verify backup completion"
        },
        "weekly": {
          "title": "Weekly",
          "security": "Review security logs and alerts",
          "packages": "Update system packages",
          "restore_test": "Test backup restoration procedures"
        },
        "monthly": {
          "title": "Monthly",
          "security": "Security vulnerability assessment",
          "performance": "Performance analysis and optimization",
          "capacity": "Capacity planning review"
        }
      }
    }
  },
  "getting_started": {
    "title": "Getting Started - SysManage",
    "description": "Quick start guides and tutorials to get up and running with SysManage for infrastructure monitoring and automation.",
    "breadcrumb": "Getting Started",
    "header": {
      "title": "Getting Started",
      "description": "Quick start guides and tutorials to get up and running with SysManage for infrastructure monitoring and automation."
    },
    "welcome": {
      "title": "Welcome to SysManage",
      "description": "SysManage is a comprehensive infrastructure monitoring and automation platform that helps you manage hosts, packages, and system health across your entire infrastructure. Whether you're managing a few servers or thousands of hosts, SysManage provides the tools you need to maintain and monitor your systems effectively."
    },
    "journey": {
      "title": "Your Journey Starts Here",
      "description": "Follow these guided steps to get SysManage up and running in your environment:",
      "steps": {
        "quick_start": {
          "title": "Quick Start",
          "description": "Get SysManage installed and running in minutes"
        },
        "deployment": {
          "title": "First Deployment",
          "description": "Deploy your first SysManage server instance"
        },
        "agents": {
          "title": "Agent Setup",
          "description": "Install and approve your first agents"
        },
        "management": {
          "title": "Basic Management",
          "description": "Learn essential management tasks"
        }
      }
    },
    "cards": {
      "quick_start": {
        "title": "üöÄ Quick Start",
        "description": "Get SysManage up and running quickly with our streamlined installation guide. Perfect for evaluation and small deployments.",
        "features": {
          "requirements": "System requirements and prerequisites",
          "docker": "Installation with Docker Compose",
          "config": "Initial configuration and setup",
          "login": "First login and basic navigation"
        },
        "link": "Quick Start Guide ‚Üí"
      },
      "webui": {
        "title": "üåê Web Interface Overview",
        "description": "Comprehensive tour of the SysManage web interface and its key features for monitoring and management.",
        "features": {
          "dashboard": "Dashboard overview and navigation",
          "hosts": "Host management interface",
          "packages": "Package management features",
          "monitoring": "Monitoring and alerts"
        },
        "link": "Web Interface Guide ‚Üí"
      }
    },
    "prerequisites": {
      "title": "Before You Begin",
      "system": {
        "title": "System Requirements",
        "server": {
          "title": "Server Requirements"
        },
        "platforms": {
          "title": "Supported Platforms"
        }
      },
      "knowledge": {
        "title": "Required Knowledge"
      },
      "needed": {
        "title": "What You'll Need"
      }
    },
    "use_cases": {
      "title": "Common Use Cases",
      "small": {
        "title": "üè¢ Small Business"
      },
      "medium": {
        "title": "üè≠ Medium Enterprise"
      },
      "large": {
        "title": "üåê Large Organization"
      }
    },
    "learning_path": {
      "title": "Recommended Learning Path"
    },
    "help": {
      "title": "Getting Help",
      "docs": {
        "title": "üìñ Documentation",
        "description": "Comprehensive guides covering all aspects of SysManage"
      },
      "community": {
        "title": "üí¨ Community",
        "description": "Connect with other SysManage users and contributors"
      },
      "troubleshooting": {
        "title": "üîß Troubleshooting",
        "description": "Common issues and their solutions"
      }
    },
    "navigation": {
      "title": "Quick Navigation",
      "docs_home": "‚Üê Documentation Home",
      "quick_start": "Quick Start ‚Üí"
    }
  },
  "common": {
    "overview": "Overview",
    "features": "Features",
    "installation": "Installation",
    "configuration": "Configuration",
    "troubleshooting": "Troubleshooting",
    "security": "Security",
    "next": "Next",
    "previous": "Previous",
    "back_to_top": "Back to Top",
    "read_more": "Read More",
    "learn_more": "Learn More",
    "download": "Download",
    "github": "GitHub",
    "documentation": "Documentation"
  },
  "testing": {
    "overview": {
      "title": "Testing Strategy Overview",
      "description": "SysManage employs a multi-layered testing approach to ensure reliability, security, and functionality across all components:",
      "unit": {
        "title": "Unit Tests",
        "description": "Comprehensive unit testing for individual components and functions",
        "backend": "Backend:",
        "backend.count": "1,432 Python tests using pytest",
        "frontend": "Frontend:",
        "frontend.count": "63 TypeScript tests using Vitest",
        "coverage": "Coverage:",
        "coverage.value": "100% test coverage for both backend and frontend"
      },
      "integration": {
        "title": "Integration Tests",
        "description": "Testing interactions between different system components",
        "api": "API endpoint testing",
        "database": "Database integration testing",
        "websocket": "WebSocket communication testing",
        "auth": "Authentication and authorization flow testing"
      },
      "e2e": {
        "title": "End-to-End (E2E) Tests",
        "description": "Complete user workflow testing using Playwright",
        "journey": "Full user journey testing",
        "crossbrowser": "Cross-browser compatibility",
        "realworld": "Real-world scenario validation",
        "ui": "UI interaction and workflow testing"
      },
      "msw": {
        "title": "Mock Service Worker (MSW)",
        "description": "API mocking for isolated and reliable frontend testing",
        "isolation": "Complete test isolation from backend dependencies",
        "speed": "Faster test execution without network requests",
        "reliability": "Consistent and predictable test behavior",
        "realistic": "Realistic API response simulation"
      }
    },
    "running": {
      "title": "Running Tests",
      "all": {
        "title": "All Tests"
      },
      "backend": {
        "title": "Backend Tests (Python/pytest)"
      },
      "frontend": {
        "title": "Frontend Tests (TypeScript/Vitest with MSW)",
        "description": "Frontend tests automatically use Mock Service Worker for API mocking:",
        "msw": {
          "title": "MSW Behavior",
          "description": "When running frontend tests:",
          "automatic": "MSW automatically intercepts all API requests",
          "logging": "Request logs appear in console output",
          "isolation": "Each test runs in complete isolation",
          "realistic": "Realistic API responses are provided automatically"
        }
      },
      "e2e": {
        "title": "End-to-End Tests (Playwright)"
      }
    },
    "msw": {
      "title": "Mock Service Worker (MSW) Frontend Testing",
      "overview": {
        "title": "Overview",
        "description": "Mock Service Worker (MSW) is a powerful API mocking library that intercepts HTTP requests at the network level, providing realistic API responses for frontend testing. SysManage uses MSW extensively to ensure frontend components can be tested in isolation without requiring a running backend server."
      },
      "benefits": {
        "title": "Why MSW?",
        "isolation": "Test Isolation: Frontend tests run independently of backend availability",
        "speed": "Performance: No network latency, tests execute faster",
        "reliability": "Reliability: Consistent responses eliminate flaky tests",
        "development": "Development: Work on frontend features before backend APIs are ready",
        "cicd": "CI/CD: No need to spin up backend services in test environments"
      },
      "installation": {
        "title": "Installation & Configuration",
        "description": "MSW is already installed and configured in the SysManage frontend. The setup includes:"
      },
      "implementation": {
        "title": "Implementation Architecture"
      },
      "handlers": {
        "title": "Request Handlers",
        "description": "MSW handlers are defined in /src/mocks/handlers.ts and provide comprehensive API coverage:"
      },
      "server": {
        "title": "Test Server Setup",
        "description": "The MSW server is configured for Node.js test environments in /src/mocks/node.ts:"
      },
      "integration": {
        "title": "Test Integration",
        "description": "MSW is automatically configured for all tests in /src/setupTests.ts with proper lifecycle management:"
      },
      "features": {
        "title": "Key Features",
        "dynamic": {
          "title": "Dynamic Path Handling",
          "description": "MSW uses broad pattern matching with dynamic path resolution:",
          "wildcard": "Wildcard patterns catch all /api/* requests",
          "parsing": "URL parsing extracts specific endpoint paths",
          "fallback": "Graceful fallback for unmatched endpoints"
        },
        "realistic": {
          "title": "Realistic Response Simulation",
          "description": "MSW provides comprehensive mock data that mirrors real API responses:",
          "hosts": "Complete host information with hardware details",
          "users": "User authentication and profile data",
          "packages": "Software package data with search functionality",
          "operations": "Package installation/uninstallation operations"
        },
        "ci": {
          "title": "CI/CD Integration",
          "description": "MSW includes special handling for continuous integration environments:"
        }
      },
      "usage": {
        "title": "Usage in Tests",
        "automatic": {
          "title": "Automatic API Mocking",
          "description": "Most tests automatically benefit from MSW without additional configuration:"
        },
        "custom": {
          "title": "Custom Handler Overrides",
          "description": "Tests can override specific handlers for custom scenarios:"
        }
      },
      "compatibility": {
        "title": "React 19 Compatibility",
        "description": "SysManage includes special compatibility fixes for React 19 in the test environment:"
      },
      "bestpractices": {
        "title": "Best Practices",
        "isolation": "Test Isolation: MSW automatically resets handlers between tests",
        "realistic": "Realistic Data: Use mock data that closely matches production API responses",
        "coverage": "API Coverage: Ensure all API endpoints used by components are mocked",
        "errors": "Error Scenarios: Test both success and error responses",
        "logging": "Request Logging: Use MSW logging to debug unexpected API calls"
      },
      "debugging": {
        "title": "Debugging MSW",
        "description": "If tests fail due to API issues, check:",
        "console": "Console output for MSW request logs",
        "unhandled": "Warnings about unhandled requests",
        "handlers": "Handler patterns match actual API calls",
        "setup": "MSW server is properly started in test setup"
      }
    }
  },
  "database_security": {
    "title": "Database Security - SysManage",
    "description": "Comprehensive database security documentation for SysManage including UUID-based primary keys, secure installation, and database hardening.",
    "breadcrumb": "Database Security",
    "header": {
      "title": "Database Security",
      "subtitle": "Advanced database security features including UUID-based primary keys, secure installation procedures, and database hardening techniques."
    },
    "uuid_architecture": {
      "title": "UUID-Based Primary Key Architecture",
      "description": "SysManage implements UUID-based primary keys across all database tables instead of traditional sequential integer IDs. This architectural decision provides significant security advantages and prevents common attack vectors.",
      "benefits": {
        "title": "Security Benefits",
        "enumeration": {
          "title": "üõ°Ô∏è ID Enumeration Attack Prevention",
          "description": "Sequential IDs (1, 2, 3...) allow attackers to easily enumerate resources. UUIDs eliminate this vulnerability by using non-predictable identifiers."
        },
        "replay": {
          "title": "üîÑ Replay Attack Protection",
          "description": "Non-sequential identifiers prevent attackers from predicting valid resource IDs for replay attacks or automated scanning."
        },
        "information_leakage": {
          "title": "üîí Information Leakage Prevention",
          "description": "Sequential IDs can reveal business metrics (number of users, hosts, etc.). UUIDs prevent this information disclosure."
        },
        "privacy": {
          "title": "üïµÔ∏è Enhanced Privacy Protection",
          "description": "UUIDs provide non-correlatable identifiers that enhance user privacy and prevent cross-system tracking."
        },
        "gdpr": {
          "title": "üìã GDPR Compliance Support",
          "description": "UUIDs support data anonymization requirements by providing identifiers that cannot be easily correlated across systems."
        },
        "distributed": {
          "title": "üåê Distributed System Security",
          "description": "UUIDs are globally unique, preventing ID conflicts in distributed systems and reducing attack surface in multi-tenant environments."
        }
      }
    },
    "examples": {
      "vulnerable": "‚ùå Vulnerable (Sequential):",
      "secure": "‚úÖ Secure (UUID):"
    },
    "secure_installation": {
      "title": "Secure Installation Script",
      "description": "SysManage includes a mandatory secure installation script that must be run on new installations to establish proper security foundations.",
      "script_location": {
        "title": "Script Location",
        "path": "scripts/sysmanage_secure_installation"
      },
      "features": {
        "title": "Security Features Implemented",
        "admin_user": {
          "title": "üë§ Initial Admin User Creation",
          "secure_password": "Prompts for secure administrator password",
          "password_validation": "Enforces password complexity requirements",
          "no_defaults": "Prevents use of default or example credentials"
        },
        "jwt_security": {
          "title": "üîê JWT Security Token Generation",
          "unique_secret": "Generates cryptographically secure unique JWT secret",
          "entropy": "Uses high-entropy random data for token generation",
          "prevents_reuse": "Prevents credential reuse across installations"
        },
        "password_salt": {
          "title": "üßÇ Password Salt Generation",
          "unique_salt": "Creates unique password salt for each installation",
          "rainbow_protection": "Prevents rainbow table attacks",
          "secure_hashing": "Enhances password hashing security"
        },
        "config_hardening": {
          "title": "‚öôÔ∏è Configuration File Hardening",
          "file_permissions": "Sets restrictive file permissions (600)",
          "ownership": "Ensures proper file ownership",
          "validation": "Validates configuration security settings"
        }
      },
      "requirements": {
        "title": "‚ö†Ô∏è Security Requirements",
        "mandatory": "Mandatory execution:",
        "mandatory_desc": "The script MUST be run before first use",
        "run_once": "Run once only:",
        "run_once_desc": "Execute only once per installation",
        "backup": "Configuration backup:",
        "backup_desc": "Backup configuration file after script execution",
        "no_defaults": "No default credentials:",
        "no_defaults_desc": "System will not function with default security tokens"
      }
    },
    "implementation": {
      "title": "Implementation Details",
      "database_schema": {
        "title": "Database Schema Design",
        "description": "All primary keys in SysManage use UUID version 4 (random) for maximum security:",
        "example_title": "Example Table Definitions:"
      },
      "api_security": {
        "title": "API Security Considerations",
        "validation": {
          "title": "UUID Validation",
          "format": "All UUID inputs are validated for proper format",
          "pydantic": "Pydantic models enforce UUID typing",
          "rejection": "Invalid UUIDs are immediately rejected"
        },
        "authorization": {
          "title": "Authorization Checks",
          "resource_ownership": "Resource ownership validated before UUID resolution",
          "rbac": "Role-based access control applied to UUID-referenced resources",
          "no_enumeration": "No information disclosure even for invalid UUIDs"
        }
      }
    },
    "best_practices": {
      "title": "Database Security Best Practices",
      "production": {
        "title": "üè≠ Production Deployment",
        "encryption": "Enable database encryption at rest",
        "ssl": "Use SSL/TLS for database connections",
        "credentials": "Store database credentials securely",
        "network": "Restrict database network access",
        "monitoring": "Implement database activity monitoring"
      },
      "backup": {
        "title": "üíæ Backup and Recovery",
        "encrypted": "Use encrypted database backups",
        "secure_storage": "Store backups in secure locations",
        "access_control": "Implement backup access controls",
        "testing": "Regularly test backup restoration",
        "retention": "Follow data retention policies"
      },
      "maintenance": {
        "title": "üîß Maintenance and Updates",
        "patches": "Apply security patches promptly",
        "migration_testing": "Test database migrations in staging",
        "schema_review": "Review schema changes for security implications",
        "audit_logs": "Maintain comprehensive audit logs",
        "performance": "Monitor database performance and security metrics"
      }
    },
    "migration": {
      "title": "Migration from Sequential IDs",
      "description": "SysManage has been fully migrated from sequential integer IDs to UUIDs using a comprehensive migration strategy.",
      "process": {
        "title": "Migration Process",
        "step1": {
          "title": "Step 1: Schema Migration",
          "description": "Alembic migrations converted all primary keys and foreign keys from integers to UUIDs"
        },
        "step2": {
          "title": "Step 2: Data Migration",
          "description": "Existing data was migrated with new UUID identifiers while preserving relationships"
        },
        "step3": {
          "title": "Step 3: API Updates",
          "description": "All API endpoints updated to handle UUID parameters and responses"
        },
        "step4": {
          "title": "Step 4: Frontend Updates",
          "description": "Frontend components updated to work with UUID identifiers"
        }
      },
      "benefits": {
        "title": "Post-Migration Security Benefits",
        "attack_surface": "Dramatically reduced attack surface",
        "enumeration": "Eliminated ID enumeration vulnerabilities",
        "information_disclosure": "Prevented information disclosure through predictable IDs",
        "compliance": "Enhanced regulatory compliance posture",
        "future_proof": "Future-proofed against sequential ID-based attacks"
      }
    },
    "navigation": {
      "security_docs": "‚Üê Security Documentation",
      "best_practices": "Security Best Practices ‚Üí"
    }
  }
}