{
  "site": {
    "title": "SysManage - Modern System Management Platform",
    "description": "Modern system management platform for comprehensive infrastructure monitoring and automation"
  },
  "nav": {
    "features": "Features",
    "getting_started": "Getting Started",
    "documentation": "Documentation",
    "github": "GitHub"
  },
  "hero": {
    "title": "Modern System Management Made Simple",
    "subtitle": "Centralized monitoring, management, and automation for your entire infrastructure. Support for Linux, Windows, macOS, FreeBSD, and OpenBSD.",
    "get_started": "Get Started",
    "view_github": "View on GitHub"
  },
  "features": {
    "title": "Key Features",
    "cross_platform": {
      "title": "Cross-Platform Support",
      "description": "Manage Linux, Windows, macOS, FreeBSD, and OpenBSD systems from a single interface."
    },
    "real_time": {
      "title": "Real-Time Monitoring",
      "description": "WebSocket-based real-time communication for instant system updates and monitoring."
    },
    "security": {
      "title": "Enterprise Security",
      "description": "JWT authentication, mTLS, role-based access control, and comprehensive security scanning."
    },
    "package_management": {
      "title": "Package Management",
      "description": "Remote software installation, updates, and management across all supported platforms."
    },
    "multilingual": {
      "title": "Multi-Language Support",
      "description": "Native support for 14 languages including English, Spanish, French, German, and more."
    },
    "modern_ui": {
      "title": "Modern Web UI",
      "description": "Responsive React-based interface with real-time dashboards and comprehensive reporting."
    },
    "osVersionUpgrades": {
      "title": "‚¨ÜÔ∏è OS Version Upgrades",
      "majorVersionDetection": {
        "title": "Major Version Detection",
        "description": "Automatic detection of available OS major version upgrades"
      },
      "multiPlatformSupport": {
        "title": "Multi-Platform Support",
        "description": "Ubuntu LTS upgrades, Fedora version upgrades, macOS updates, Windows feature updates"
      },
      "bsdSupport": {
        "title": "BSD Support",
        "description": "OpenBSD sysupgrade and FreeBSD version upgrades"
      },
      "opensuseIntegration": {
        "title": "OpenSUSE Integration",
        "description": "Distribution upgrade detection and management"
      },
      "safetyFeatures": {
        "title": "Safety Features",
        "description": "Dry-run capabilities and upgrade validation before deployment"
      },
      "rebootManagement": {
        "title": "Reboot Management",
        "description": "Automatic reboot scheduling for OS upgrades requiring system restart"
      }
    }
  },
  "quick_start": {
    "title": "Quick Start",
    "step1": {
      "title": "Install Server",
      "description": "Deploy the SysManage server on your infrastructure",
      "link": "Server Installation Guide ‚Üí"
    },
    "step2": {
      "title": "Deploy Agents",
      "description": "Install agents on systems you want to manage",
      "link": "Agent Installation Guide ‚Üí"
    },
    "step3": {
      "title": "Start Managing",
      "description": "Access the web interface and approve your agents",
      "link": "Getting Started Guide ‚Üí"
    }
  },
  "architecture": {
    "title": "Architecture Overview",
    "server_components": "Server Components",
    "agent_features": "Agent Features"
  },
  "docs": {
    "webui_overview": {
      "title": "Web Interface Overview",
      "subtitle": "Explore the SysManage web interface with detailed screenshots and feature explanations."
    },
    "architecture": {
      "title": "Architecture Documentation",
      "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
      "message_flow": {
        "title": "Message Flow & State Management",
        "subtitle": "Comprehensive overview of how messages are passed, queued, and processed between SysManage agents and the backend server.",
        "overview": {
          "title": "Architecture Overview",
          "description": "SysManage uses a sophisticated message-passing architecture that ensures reliable, ordered communication between distributed agents and the central server. The system employs persistent message queues on both sides with automatic retry logic, priority handling, and state tracking."
        },
        "communication": {
          "title": "Communication Protocol",
          "websocket": {
            "title": "WebSocket Layer",
            "description": "All real-time communication between agents and the server occurs over WebSocket connections secured with mutual TLS (mTLS). The WebSocket layer provides:"
          },
          "queuing": {
            "title": "Persistent Message Queuing",
            "description": "Both agents and server maintain persistent message queues to ensure no data is lost during network interruptions or system restarts:"
          }
        },
        "states": {
          "title": "Message States & Lifecycle"
        },
        "types": {
          "title": "Message Types"
        },
        "priority": {
          "title": "Priority & Scheduling",
          "description": "Messages are processed according to priority levels, ensuring critical operations are handled first:"
        },
        "reliability": {
          "title": "Reliability Features"
        },
        "performance": {
          "title": "Performance Characteristics"
        },
        "monitoring": {
          "title": "Monitoring & Observability",
          "description": "The message flow system provides comprehensive monitoring capabilities:"
        }
      },
      "testing_excellence": {
        "title": "Testing Excellence: Revolutionary Dual Conftest Architecture",
        "subtitle": "Revolutionary dual conftest testing architecture achieving 100% coverage with enterprise-grade reliability.",
        "achievement": {
          "title": "Enterprise-Grade Testing Achievement",
          "python_tests": "Python Tests",
          "typescript_tests": "TypeScript Tests",
          "total_runtime": "Total Runtime",
          "flaky_tests": "Flaky Tests",
          "pass_status": "100% Pass",
          "lightning_fast": "Lightning Fast",
          "rock_solid": "Rock Solid",
          "seconds": "seconds"
        },
        "challenge": {
          "title": "The Challenge We Solved",
          "intro": "Most enterprise applications face an impossible testing trilemma:",
          "option1": "Production Database Testing ‚Üí Accurate but slow, complex setup required",
          "option2": "SQLite Testing ‚Üí Fast but prone to schema drift and compatibility issues",
          "option3": "Mock Everything ‚Üí Fast but misses real database integration bugs",
          "solution": "We pioneered a Dual Conftest Architecture that delivers the best of all worlds: production accuracy with development speed."
        },
        "solution": {
          "title": "Our Revolutionary Solution",
          "layer1_title": "Layer 1: Integration Testing Foundation",
          "layer1_subtitle": "Main Conftest (/tests/conftest.py)",
          "layer1_purpose": "Purpose: Complex integration tests with full production schema fidelity",
          "layer1_innovation": "Innovation: Automatic PostgreSQL ‚Üî SQLite synchronization via Alembic migrations",
          "layer1_feature1": "Single source of truth: production Alembic migrations",
          "layer1_feature2": "Zero manual schema maintenance",
          "layer1_feature3": "Perfect schema parity with production PostgreSQL",
          "layer1_feature4": "Ideal for multi-model integration tests",
          "layer2_title": "Layer 2: High-Speed API Testing",
          "layer2_subtitle": "API Conftest (/tests/api/conftest.py)",
          "layer2_purpose": "Purpose: Ultra-fast, focused API endpoint testing",
          "layer2_innovation": "Innovation: Surgical model replacement with SQLite-optimized definitions",
          "layer2_feature1": "Monkey-patches production models during test execution",
          "layer2_feature2": "10x faster than traditional database testing approaches",
          "layer2_feature3": "Complete isolation between test runs",
          "layer2_feature4": "Perfect for rapid development cycles"
        },
        "performance": {
          "title": "Performance Metrics That Matter",
          "before_title": "Before Our Architecture",
          "after_title": "After Implementation",
          "before_runtime": "Test suite runtime: 5-10 minutes",
          "before_flaky": "Flaky tests: 15-20%",
          "before_drift": "Schema drift issues: Weekly",
          "before_confidence": "Developer confidence: Low",
          "before_reliability": "CI/CD reliability: Poor",
          "after_runtime": "Test suite runtime: <60 seconds ‚ö°",
          "after_flaky": "Flaky tests: 0% üéØ",
          "after_drift": "Schema drift issues: Never ‚ú®",
          "after_confidence": "Developer confidence: Absolute üí™",
          "after_reliability": "CI/CD reliability: Perfect üöÄ"
        },
        "impact": {
          "title": "Business Impact",
          "fearless_dev": "Fearless Development",
          "fearless_desc": "With 100% test coverage and zero flaky tests, developers refactor with complete confidence. Every edge case is tested, every API endpoint validated, every database operation verified.",
          "rapid_iteration": "Rapid Iteration",
          "rapid_desc": "Sub-60-second test runs mean developers actually run tests during development. No more 'I'll test before I push' ‚Äî tests run continuously.",
          "prod_reliability": "Production Reliability",
          "prod_desc": "Automatic schema synchronization means test database always matches production. Zero 'works in tests but fails in production' scenarios.",
          "scalable_excellence": "Scalable Excellence",
          "scalable_desc": "As the application grows, the testing infrastructure scales effortlessly. New models auto-sync, new endpoints get drop-in fixtures, new requirements are instantly covered."
        },
        "quality": {
          "title": "Quality Metrics",
          "code_quality": "Code Quality",
          "pylint_score": "Pylint Score: 10.00/10",
          "eslint": "ESLint: 0 errors, 0 warnings",
          "type_coverage": "Type Coverage: 100%",
          "security_scan": "Security Scan: 0 vulnerabilities",
          "test_coverage": "Test Coverage",
          "line_coverage": "Line Coverage: 100%",
          "branch_coverage": "Branch Coverage: 100%",
          "api_endpoints": "API Endpoints: 100%",
          "database_models": "Database Models: 100%",
          "reliability": "Reliability",
          "test_stability": "Test Stability: 100%",
          "ci_success": "CI Success Rate: 100%",
          "zero_failed_merges": "Zero Failed Merges",
          "zero_rollbacks": "Zero Rollbacks"
        },
        "implementation": {
          "title": "Implementation Guidelines",
          "adding_models": "Adding New Models",
          "step1": "Create Alembic Migration: alembic revision --autogenerate -m \"Add YourModel\"",
          "step2": "Update API Conftest: Add SQLite-compatible model definition if needed",
          "step3": "Verify Compatibility: Use Integer not BigInteger for auto-increment",
          "step4": "Test Integration: Run both test suites to ensure compatibility",
          "compatibility_title": "SQLite Compatibility Rules",
          "rule1": "‚úÖ Integer primary keys (auto-increment supported)",
          "rule2": "‚ùå BigInteger primary keys (no auto-increment)",
          "rule3": "‚úÖ String instead of Text for performance",
          "rule4": "‚úÖ DateTime without timezone info",
          "rule5": "‚úÖ Simple foreign key relationships"
        },
        "advantage": {
          "title": "The Competitive Advantage",
          "intro": "Our dual conftest architecture isn't just technical excellence ‚Äî it's a competitive business advantage:",
          "ship_confidence": "Ship with Confidence: Every release thoroughly validated",
          "refactor_fear": "Refactor Without Fear: Tests catch any regression instantly",
          "scale_limits": "Scale Without Limits: Infrastructure grows with your needs",
          "develop_rapid": "Develop Rapidly: Fast tests enable quick iteration"
        },
        "footer": {
          "title": "This is Modern Testing Excellence",
          "description": "We've achieved what many said was impossible: enterprise-grade testing that's fast, maintainable, and comprehensive. Our dual conftest architecture represents the gold standard for modern application testing.",
          "tagline": "This is what confidence looks like. This is SysManage."
        }
      }
    }
  },
  "footer": {
    "description": "Modern system management platform for comprehensive infrastructure monitoring and automation.",
    "documentation": "Documentation",
    "server_docs": "Server Docs",
    "agent_docs": "Agent Docs",
    "api_reference": "API Reference",
    "security": "Security",
    "community": "Community",
    "github_repo": "GitHub Repository",
    "issue_tracker": "Issue Tracker",
    "discussions": "Discussions",
    "license": "License",
    "licensed_under": "Licensed under AGPLv3",
    "view_license": "View License",
    "copyright": "¬© 2024 SysManage. All rights reserved."
  },
  "installation": {
    "title": "Installation Guide",
    "system_requirements": "System Requirements",
    "prerequisites": "Prerequisites",
    "installation_steps": "Installation Steps",
    "troubleshooting": "Troubleshooting"
  },
  "configuration": {
    "title": "Configuration Guide",
    "basic_config": "Basic Configuration",
    "security_config": "Security Configuration",
    "advanced_features": "Advanced Features"
  },
  "security_page": {
    "title": "Security Documentation",
    "overview": "Security Overview",
    "features": "Security Features",
    "vulnerability_reporting": "Vulnerability Reporting"
  },
  "platforms": {
    "opensuse": {
      "title": "openSUSE Leap/Tumbleweed",
      "package_notes": "Package Manager Notes",
      "leap_note": "Uses stable packages, may need manual Rust installation",
      "tumbleweed_note": "Rolling release, Rust available via zypper",
      "python_versions": "Leap ships with Python 3.9+, Tumbleweed with latest stable"
    },
    "sles": {
      "title": "SUSE Linux Enterprise Server (SLES)",
      "enterprise_considerations": "Enterprise Considerations",
      "sles12_note": "May require Software Collections (SCL) for newer Python",
      "sles15_note": "Python 3.6+ included, but 3.9+ recommended",
      "firewall_note": "SuSEfirewall2 or firewalld may block agent ports",
      "selinux_note": "May require policy adjustments if enabled",
      "subscription_note": "Some packages require active SLES subscription",
      "service_notes": "SUSE Enterprise Notes",
      "firewall_config": "Open required ports via YaST or firewall-cmd",
      "apparmor_note": "SUSE uses AppArmor instead of SELinux by default",
      "logging_note": "Logs available via journalctl or /var/log/messages"
    }
  },
  "server_docs": {
    "reports": {
      "title": "Reports & PDF Generation",
      "subtitle": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation capabilities.",
      "overview": "Overview",
      "overview_description": "SysManage includes a powerful reporting system that generates comprehensive reports about your infrastructure. The system supports both real-time HTML viewing and professional PDF generation for documentation and compliance purposes.",
      "realtime_html": "Real-time HTML Reports",
      "pdf_generation": "Professional PDF Generation",
      "multi_format": "Multiple Export Formats"
    },
    "testing": {
      "title": "Testing",
      "subtitle": "Comprehensive testing strategy including unit tests, integration tests, and end-to-end testing with Playwright.",
      "overview": "Testing Overview",
      "unit_tests": "Unit Tests",
      "integration_tests": "Integration Tests",
      "e2e_testing": "End-to-End Testing",
      "playwright": "Playwright Testing",
      "test_coverage": "Test Coverage",
      "ci_cd": "CI/CD Integration"
    },
    "deployment": {
      "title": "Deployment Guide",
      "subtitle": "Complete guide for deploying SysManage in production environments with high availability and scalability considerations.",
      "overview": "Deployment Overview",
      "production_deployment": "Production Deployment",
      "high_availability": "High Availability",
      "scalability": "Scalability",
      "load_balancing": "Load Balancing",
      "security_considerations": "Security Considerations",
      "monitoring": "Monitoring & Observability"
    },
    "features": {
      "title": "Features Overview",
      "subtitle": "Comprehensive overview of all SysManage features including system monitoring, package management, user administration, and security features.",
      "overview": "Features Overview",
      "system_monitoring": "System Monitoring",
      "package_management": "Package Management",
      "user_management": "User Management",
      "security_features": "Security Features",
      "reporting": "Reporting & Analytics",
      "multi_platform": "Multi-Platform Support"
    },
    "troubleshooting": {
      "title": "Troubleshooting Guide",
      "subtitle": "Comprehensive troubleshooting guide for common issues, diagnostic procedures, and problem resolution strategies.",
      "overview": "Troubleshooting Overview",
      "common_issues": "Common Issues",
      "diagnostic_procedures": "Diagnostic Procedures",
      "log_analysis": "Log Analysis",
      "performance_issues": "Performance Issues",
      "connectivity_problems": "Connectivity Problems",
      "database_issues": "Database Issues"
    }
  },
  "common": {
    "overview": "Overview",
    "features": "Features",
    "installation": "Installation",
    "configuration": "Configuration",
    "troubleshooting": "Troubleshooting",
    "security": "Security",
    "next": "Next",
    "previous": "Previous",
    "back_to_top": "Back to Top",
    "read_more": "Read More",
    "learn_more": "Learn More",
    "download": "Download",
    "github": "GitHub",
    "documentation": "Documentation"
  }
}