{
  "site": {
    "title": "SysManage - モダンシステム管理プラットフォーム",
    "description": "包括的なインフラストラクチャ監視と自動化のためのモダンシステム管理プラットフォーム"
  },
  "nav": {
    "features": "機能",
    "getting_started": "開始方法",
    "documentation": "ドキュメント",
    "github": "GitHub"
  },
  "hero": {
    "title": "モダンシステム管理を簡単に",
    "subtitle": "インフラストラクチャ全体の集中監視、管理、自動化。Linux、Windows、macOS、FreeBSD、OpenBSDをサポート。",
    "get_started": "開始方法",
    "view_github": "GitHubで表示"
  },
  "features": {
    "title": "主な機能",
    "cross_platform": {
      "title": "クロスプラットフォームサポート",
      "description": "単一のインターフェースからLinux、Windows、macOS、FreeBSD、OpenBSDシステムを管理。"
    },
    "real_time": {
      "title": "リアルタイム監視",
      "description": "WebSocketベースのリアルタイム通信による即座のシステム更新と監視。"
    },
    "security": {
      "title": "エンタープライズセキュリティ",
      "description": "JWT認証、mTLS、ロールベースのアクセス制御、包括的なセキュリティスキャン。"
    },
    "package_management": {
      "title": "パッケージ管理",
      "description": "サポートされているすべてのプラットフォームでのリモートソフトウェアインストール、更新、管理。"
    },
    "multilingual": {
      "title": "多言語サポート",
      "description": "英語、スペイン語、フランス語、ドイツ語などを含む14言語のネイティブサポート。"
    },
    "modern_ui": {
      "title": "モダンWebインターフェース",
      "description": "リアルタイムダッシュボードと包括的レポート機能を備えたReactベースのレスポンシブインターフェース。"
    },
    "osVersionUpgrades": {
      "title": "⬆️ OSバージョンアップグレード",
      "majorVersionDetection": {
        "title": "メジャーバージョン検出",
        "description": "利用可能なOSメジャーバージョンアップグレードの自動検出"
      },
      "multiPlatformSupport": {
        "title": "マルチプラットフォームサポート",
        "description": "Ubuntu LTSアップグレード、Fedoraバージョンアップグレード、macOSアップデート、Windows機能アップデート"
      },
      "bsdSupport": {
        "title": "BSDサポート",
        "description": "OpenBSD sysupgradeとFreeBSDバージョンアップグレード"
      },
      "opensuseIntegration": {
        "title": "OpenSUSE統合",
        "description": "ディストリビューションアップグレードの検出と管理"
      },
      "safetyFeatures": {
        "title": "安全機能",
        "description": "ドライラン機能とデプロイ前のアップグレード検証"
      },
      "rebootManagement": {
        "title": "再起動管理",
        "description": "システム再起動が必要なOSアップグレードの自動再起動スケジューリング"
      }
    }
  },
  "quick_start": {
    "title": "クイックスタート",
    "step1": {
      "title": "サーバーのインストール",
      "description": "インフラストラクチャにSysManageサーバーをデプロイ",
      "link": "サーバーインストールガイド →"
    },
    "step2": {
      "title": "エージェントのデプロイ",
      "description": "管理したいシステムにエージェントをインストール",
      "link": "エージェントインストールガイド →"
    },
    "step3": {
      "title": "管理開始",
      "description": "Webインターフェースにアクセスしてエージェントを承認",
      "link": "開始ガイド →"
    }
  },
  "architecture": {
    "title": "アーキテクチャ概要",
    "server_components": "サーバーコンポーネント",
    "agent_features": "エージェント機能",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "agent_capacity": "Agent Capacity",
      "agent_scaling": "Agent Scaling",
      "agent_server_communication": "Agent-to-Server Communication",
      "application_layer": "Application Layer",
      "architecture": "Architecture",
      "architecture_overview": "Architecture Overview",
      "authentication_systems": "Authentication Systems",
      "automation_orchestration": "Automation & Orchestration",
      "backend_technologies": "Backend Technologies",
      "certificate_based_auth": "Certificate-Based Authentication",
      "communication_security": "Communication & Security",
      "core_components": "Core Components",
      "data_flow_architecture": "Data Flow Architecture",
      "data_layer": "Data Layer",
      "deployment_patterns": "Deployment Patterns",
      "devops_deployment": "DevOps & Deployment",
      "external_system_integration": "External System Integration",
      "frontend_technologies": "Frontend Technologies",
      "high_availability": "High Availability Deployment",
      "high_level_architecture": "High-Level Architecture",
      "horizontal_scaling": "Horizontal Scaling",
      "integration_points": "Integration Points",
      "key_features": "Key Features",
      "monitoring_alerting": "Monitoring & Alerting",
      "multi_region": "Multi-Region Deployment",
      "network_security": "Network Security",
      "next_steps": "Next Steps",
      "package_repositories": "Package Repositories",
      "performance_characteristics": "Performance Characteristics",
      "resource_usage": "Resource Usage",
      "response_times": "Response Times",
      "rest_api": "REST API",
      "scalability_design": "Scalability Design",
      "security_architecture": "Security Architecture",
      "server_scaling": "Server Scaling",
      "single_instance": "Single Instance Deployment",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "sysmanage_agents": "SysManage Agents",
      "sysmanage_server": "SysManage Server",
      "technology_stack": "Technology Stack",
      "title": "System Overview",
      "transport_layer": "Transport Layer",
      "use_cases": "Use Cases",
      "user_request_processing": "User Request Processing",
      "web_interface": "Web Interface"
    }
  },
  "docs": {
    "title": "ドキュメント - SysManage",
    "description": "SysManageサーバーおよびエージェントコンポーネントの完全なドキュメント。",
    "header": {
      "title": "ドキュメント",
      "subtitle": "SysManageのデプロイ、設定、管理のための包括的なガイド。"
    },
    "server": {
      "title": "サーバードキュメント",
      "description": "SysManageサーバーのインストール、設定、管理の完全ガイド。",
      "installation": "インストールガイド",
      "configuration": "設定",
      "deployment": "デプロイメント",
      "features": "機能",
      "reports": "レポート & PDF生成",
      "testing": "テスト & Playwright",
      "troubleshooting": "トラブルシューティング",
      "view_docs": "サーバードキュメントを表示 →"
    },
    "agent": {
      "title": "エージェントドキュメント",
      "description": "全プラットフォームでのSysManageエージェントのセットアップと管理ガイド。",
      "installation": "インストールガイド",
      "configuration": "設定",
      "privileged_execution": "特権実行",
      "cross_platform": "クロスプラットフォームサポート",
      "troubleshooting": "トラブルシューティング",
      "view_docs": "エージェントドキュメントを表示 →"
    },
    "api": {
      "title": "APIリファレンス",
      "description": "SysManageとの統合のための完全なREST APIドキュメント。",
      "authentication": "認証",
      "hosts": "ホスト管理",
      "packages": "パッケージ管理・アンインストール",
      "websockets": "WebSocket API",
      "monitoring": "監視",
      "view_docs": "APIドキュメントを表示 →"
    },
    "security": {
      "title": "セキュリティ",
      "description": "セキュリティ機能、ベストプラクティス、脆弱性レポート。",
      "authentication": "認証・認可",
      "mtls": "相互TLS (mTLS)",
      "scanning": "セキュリティスキャン",
      "best_practices": "ベストプラクティス",
      "reporting": "脆弱性レポート",
      "view_docs": "セキュリティドキュメントを表示 →"
    },
    "getting_started": {
      "title": "始めましょう",
      "description": "新規ユーザー向けのクイックスタートガイドとチュートリアル。",
      "quick_start": "クイックスタート",
      "webui_overview": "Webインターフェース概要",
      "first_deployment": "初回デプロイメント",
      "agent_approval": "エージェント承認",
      "basic_management": "基本管理",
      "tutorials": "チュートリアル",
      "view_docs": "始めましょう →"
    },
    "administration": {
      "title": "管理",
      "description": "ユーザー、ホスト、システム設定を管理するための管理ガイド。",
      "user_management": "ユーザー管理",
      "host_management": "ホスト管理",
      "monitoring": "監視・アラート",
      "backup": "バックアップ・復旧",
      "maintenance": "メンテナンス",
      "view_docs": "管理ドキュメントを表示 →"
    },
    "architecture": {
      "title": "アーキテクチャ",
      "description": "システム設計、メッセージフロー、コンポーネント間相互作用を含む技術アーキテクチャドキュメント。",
      "message_flow": "メッセージフロー・キュー",
      "testing_excellence": "テスト優秀性",
      "system_overview": "システム概要",
      "performance_metrics": "パフォーマンス・スケーラビリティ",
      "database_schema": "データベース設計",
      "websocket_protocol": "通信プロトコル",
      "view_docs": "アーキテクチャを表示 →"
    },
    "additional_resources": {
      "title": "追加リソース",
      "github_repo": "GitHubリポジトリ",
      "issue_tracker": "イシュートラッカー",
      "community_discussions": "コミュニティディスカッション",
      "agent_repo": "エージェントリポジトリ"
    },
    "webui_overview": {
      "title": "Webインターフェース概要",
      "subtitle": "詳細なスクリーンショットと機能説明を通してSysManage Webインターフェースを探索する。"
    },
    "architecture_old": {
      "title": "アーキテクチャドキュメント",
      "subtitle": "SysManageのシステムアーキテクチャ、デザインパターン、コンポーネント相互作用をカバーする技術文書。",
      "message_flow": {
        "title": "メッセージフローと状態管理",
        "subtitle": "SysManageエージェントとバックエンドサーバー間でメッセージがどのように送信、キューイング、処理されるかの包括的概要。",
        "overview": {
          "title": "アーキテクチャ概要",
          "description": "SysManageは、分散エージェントと中央サーバー間の信頼性が高く順序付けられた通信を保証する洗練されたメッセージパッシングアーキテクチャを使用します。システムは、自動リトライロジック、優先度処理、状態追跡を備えた両側の永続メッセージキューを採用しています。"
        },
        "communication": {
          "title": "通信プロトコル",
          "websocket": {
            "title": "WebSocketレイヤー",
            "description": "エージェントとサーバー間のすべてのリアルタイム通信は、相互TLS（mTLS）で保護されたWebSocket接続を介して行われます。WebSocketレイヤーは以下を提供します："
          },
          "queuing": {
            "title": "永続メッセージキューイング",
            "description": "エージェントとサーバーの両方が永続メッセージキューを維持し、ネットワーク中断やシステム再起動時にデータが失われないことを保証します："
          }
        },
        "states": {
          "title": "メッセージ状態とライフサイクル"
        },
        "types": {
          "title": "メッセージタイプ"
        },
        "priority": {
          "title": "優先度とスケジューリング",
          "description": "メッセージは優先度レベルに従って処理され、重要な操作が最初に処理されることを保証します："
        },
        "reliability": {
          "title": "信頼性機能"
        },
        "performance": {
          "title": "パフォーマンス特性"
        },
        "monitoring": {
          "title": "監視と可観測性",
          "description": "メッセージフローシステムは包括的な監視機能を提供します："
        }
      },
      "testing_excellence": {
        "title": "テスト・エクセレンス：革命的デュアルConfestアーキテクチャ",
        "subtitle": "エンタープライズグレードの信頼性で100％カバレッジを達成する革命的デュアルconftestテストアーキテクチャ。",
        "achievement": {
          "title": "エンタープライズグレード・テスト成果",
          "python_tests": "Pythonテスト",
          "typescript_tests": "TypeScriptテスト",
          "total_runtime": "総実行時間",
          "flaky_tests": "不安定テスト",
          "pass_status": "100％合格",
          "lightning_fast": "電光石火",
          "rock_solid": "盤石",
          "seconds": "秒"
        },
        "solution": {
          "title": "Our Revolutionary Solution",
          "layer1_title": "Layer 1: Integration Testing Foundation",
          "layer1_subtitle": "Main Conftest (/tests/conftest.py)",
          "layer1_purpose": "Purpose: Complex integration tests with full production schema fidelity",
          "layer1_innovation": "Innovation: Automatic PostgreSQL ↔ SQLite synchronization via Alembic migrations"
        },
        "performance": {
          "title": "Performance Metrics That Matter",
          "before_title": "Before Our Architecture",
          "after_title": "After Implementation",
          "before_runtime": "Test suite runtime: 5-10 minutes",
          "after_runtime": "Test suite runtime: <60 seconds ⚡"
        },
        "footer": {
          "title": "This is Modern Testing Excellence",
          "description": "We've achieved what many said was impossible: enterprise-grade testing that's fast, maintainable, and comprehensive.",
          "tagline": "This is what confidence looks like. This is SysManage."
        }
      }
    }
  },
  "footer": {
    "description": "包括的なインフラストラクチャ監視と自動化のためのモダンシステム管理プラットフォーム。",
    "documentation": "ドキュメント",
    "server_docs": "サーバードキュメント",
    "agent_docs": "エージェントドキュメント",
    "api_reference": "APIリファレンス",
    "security": "セキュリティ",
    "community": "コミュニティ",
    "github_repo": "GitHubリポジトリ",
    "issue_tracker": "課題トラッカー",
    "discussions": "ディスカッション",
    "license": "ライセンス",
    "licensed_under": "AGPLv3の下でライセンス",
    "view_license": "ライセンスを表示",
    "copyright": "© 2024 SysManage. 全著作権所有。"
  },
  "installation": {
    "title": "インストールガイド",
    "system_requirements": "システム要件",
    "prerequisites": "前提条件",
    "installation_steps": "インストール手順",
    "troubleshooting": "トラブルシューティング"
  },
  "configuration": {
    "title": "設定ガイド",
    "basic_config": "基本設定",
    "security_config": "セキュリティ設定",
    "advanced_features": "高度な機能"
  },
  "security_page": {
    "title": "セキュリティドキュメント",
    "overview": "セキュリティ概要",
    "features": "セキュリティ機能",
    "vulnerability_reporting": "脆弱性レポート"
  },
  "platforms": {
    "opensuse": {
      "title": "openSUSE Leap/Tumbleweed",
      "package_notes": "パッケージマネージャーの注意事項",
      "leap_note": "安定したパッケージを使用、手動でのRustインストールが必要な場合があります",
      "tumbleweed_note": "ローリングリリース、zypperでRustが利用可能",
      "python_versions": "LeapはPython 3.9+を搭載、Tumbleweedは最新の安定版を搭載"
    },
    "sles": {
      "title": "SUSE Linux Enterprise Server (SLES)",
      "enterprise_considerations": "エンタープライズの考慮事項",
      "sles12_note": "より新しいPythonにはSoftware Collections (SCL)が必要な場合があります",
      "sles15_note": "Python 3.6+が含まれていますが、3.9+を推奨",
      "firewall_note": "SuSEfirewall2またはfirewalldがエージェントポートをブロックする可能性があります",
      "selinux_note": "有効な場合、ポリシーの調整が必要な場合があります",
      "subscription_note": "一部のパッケージにはアクティブなSLESサブスクリプションが必要です",
      "service_notes": "SUSE Enterprise の注意事項",
      "firewall_config": "YaSTまたはfirewall-cmdで必要なポートを開く",
      "apparmor_note": "SUSEはデフォルトでSELinuxの代わりにAppArmorを使用",
      "logging_note": "ログはjournalctlまたは/var/log/messagesで利用可能"
    }
  },
  "server_docs": {
    "title": "サーバードキュメント - SysManage",
    "description": "SysManageサーバーのインストール、設定、管理に関する完全なドキュメント。",
    "section_title": "サーバー",
    "header": {
      "title": "サーバードキュメント",
      "subtitle": "SysManageサーバーのインストール、設定、管理に関する完全なガイド。"
    },
    "overview": {
      "title": "概要",
      "description": "SysManageサーバーは、FastAPI（Python）バックエンドとReact（TypeScript）フロントエンドで構築された現代的なWebアプリケーションです。軽量なエージェントを通じて複数のシステムを管理するための集中プラットフォームを提供します。",
      "components_title": "サーバーコンポーネント",
      "backend_api": "バックエンドAPI - 非同期サポート、JWT認証、WebSocket通信を備えたFastAPI",
      "frontend_ui": "フロントエンドUI - TypeScript、Material-UIコンポーネント、リアルタイム更新を備えたReact",
      "database": "データベース - SQLAlchemy ORMとAlembicマイグレーションを備えたPostgreSQL",
      "authentication": "認証 - トークンローテーションとロールベースアクセス制御を備えたJWT",
      "communication": "通信 - リアルタイム更新用WebSocketと操作用REST API",
      "monitoring": "監視 - 包括的なメトリクス、ログ記録、ヘルス監視",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents"
    },
    "quick_links": {
      "title": "クイックリンク",
      "installation": "サーバーインストール",
      "configuration": "設定",
      "deployment": "デプロイメント",
      "testing": "テスト",
      "troubleshooting": "トラブルシューティング"
    },
    "reports": {
      "title": "レポートとPDF生成",
      "subtitle": "リアルタイムHTML表示とプロフェッショナルPDF生成機能を備えた包括的なレポートシステム。",
      "overview": "概要",
      "overview_description": "SysManageにはインフラストラクチャに関する包括的なレポートを生成する強力なレポートシステムが含まれています。このシステムはリアルタイムHTML表示とドキュメントおよびコンプライアンス目的のプロフェッショナルPDF生成の両方をサポートしています。",
      "realtime_html": "リアルタイムHTMLレポート",
      "pdf_generation": "プロフェッショナルPDF生成",
      "multi_format": "複数のエクスポート形式",
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "inventory": "Host inventory and system reports",
      "link": "Reports Documentation →",
      "security": "User management and security reports"
    },
    "testing": {
      "title": "テスト",
      "subtitle": "Playwrightを使用したユニットテスト、統合テスト、エンドツーエンドテストを含む包括的なテスト戦略。",
      "overview": "テスト概要",
      "unit_tests": "ユニットテスト",
      "integration_tests": "統合テスト",
      "e2e_testing": "エンドツーエンドテスト",
      "playwright": "Playwrightテスト",
      "test_coverage": "テストカバレッジ",
      "ci_cd": "CI/CD統合",
      "cicd": "CI/CD testing pipeline",
      "coverage": "Test coverage and reporting",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "e2e": "End-to-end testing with Playwright",
      "link": "Testing Documentation →",
      "unit_integration": "Unit and integration testing"
    },
    "deployment": {
      "title": "デプロイメントガイド",
      "subtitle": "高可用性とスケーラビリティを考慮した本番環境でのSysManageデプロイの完全ガイド。",
      "overview": "デプロイメント概要",
      "production_deployment": "本番デプロイメント",
      "high_availability": "高可用性",
      "scalability": "スケーラビリティ",
      "load_balancing": "ロードバランシング",
      "security_considerations": "セキュリティの考慮事項",
      "monitoring": "監視と可観測性",
      "backup": "Backup and disaster recovery",
      "checklist": "Production deployment checklist",
      "description": "スケーラブルなインフラストラクチャのための本番デプロイメント戦略とベストプラクティス。",
      "link": "Deployment Guide →",
      "scaling": "Load balancing and scaling"
    },
    "features": {
      "title": "機能概要",
      "subtitle": "システム監視、パッケージ管理、ユーザー管理、セキュリティ機能を含むSysManageのすべての機能の包括的な概要。",
      "overview": "機能概要",
      "system_monitoring": "システム監視",
      "package_management": "パッケージ管理",
      "user_management": "ユーザー管理",
      "security_features": "セキュリティ機能",
      "reporting": "レポートと分析",
      "multi_platform": "マルチプラットフォームサポート",
      "description": "すべてのサーバー機能と機能の詳細な概要。",
      "host_management": "Host and agent management",
      "link": "Features Overview →",
      "monitoring": "Real-time monitoring and alerts"
    },
    "troubleshooting": {
      "title": "トラブルシューティングガイド",
      "subtitle": "一般的な問題、診断手順、問題解決戦略の包括的なトラブルシューティングガイド。",
      "overview": "トラブルシューティング概要",
      "common_issues": "一般的な問題",
      "diagnostic_procedures": "診断手順",
      "log_analysis": "ログ分析",
      "performance_issues": "パフォーマンスの問題",
      "connectivity_problems": "接続の問題",
      "database_issues": "データベースの問題",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "link": "Troubleshooting Guide →",
      "maintenance": "Database maintenance",
      "performance": "Performance optimization"
    },
    "configuration": {
      "database_settings": "Database connection settings",
      "description": "SysManageデプロイメントをカスタマイズするための包括的な設定オプション。",
      "file_structure": "Configuration file structure",
      "link": "Configuration Guide →",
      "security_options": "Security and authentication options",
      "title": "⚙️ Configuration",
      "websocket_api": "WebSocket and API configuration"
    },
    "installation": {
      "database": "Database setup and configuration",
      "description": "インフラストラクチャでSysManageサーバーを設定するためのステップバイステップインストールガイド。",
      "link": "Installation Guide →",
      "methods": "Docker and traditional installation methods",
      "requirements": "System requirements and prerequisites",
      "ssl": "SSL certificate configuration",
      "title": "🚀 Installation"
    },
    "navigation": {
      "agent": "← Agent Documentation",
      "api": "API Reference →",
      "title": "Quick Navigation"
    },
    "security": {
      "auth": "Authentication and authorization",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "title": "🔐 Security"
    }
  },
  "server_installation": {
    "title": "サーバーインストールガイド - SysManage",
    "description": "前提条件、データベース設定、設定を含むSysManageサーバーの完全なインストールガイド。",
    "breadcrumb_installation": "インストール",
    "header": {
      "title": "サーバーインストールガイド",
      "subtitle": "お客様のインフラストラクチャにSysManageサーバーを設定するための完全なステップバイステップインストールガイド。"
    },
    "requirements": {
      "title": "システム要件",
      "required": "必須",
      "supported": "サポート",
      "python": {
        "title": "🐍 Python",
        "version": "3.11または3.12",
        "note": "注意：Python 3.13はパッケージ互換性の問題によりまだサポートされていません"
      },
      "nodejs": {
        "title": "🟢 Node.js",
        "version": "20.x以上",
        "description": "Reactフロントエンドの構築用"
      },
      "postgresql": {
        "title": "🐘 PostgreSQL",
        "version": "14以上",
        "description": "すべてのアプリケーションデータのメインデータベース"
      },
      "os": {
        "title": "💻 オペレーティングシステム",
        "platforms": "Linux、macOS、Windows、FreeBSD、OpenBSD",
        "description": "クロスプラットフォーム展開"
      }
    },
    "prerequisites": {
      "title": "プラットフォーム固有の前提条件",
      "ubuntu_debian": "Ubuntu/Debian",
      "ubuntu25": {
        "title": "Ubuntu 25.04+（ソースからPython 3.12）",
        "note": "Ubuntu 25.04+はPython 3.13のみが付属し、まだ互換性がありません。ソースからPython 3.12をコンパイルする必要があります："
      },
      "centos_rhel": "CentOS/RHEL",
      "macos": {
        "title": "macOS"
      },
      "windows": {
        "title": "Windows"
      },
      "freebsd": {
        "title": "FreeBSD"
      },
      "openbsd": {
        "title": "OpenBSD"
      },
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10（推奨）"
      },
      "centos": {
        "title": "CentOS/RHEL/Fedora"
      }
    },
    "installation_steps": {
      "title": "インストール手順",
      "step1": {
        "title": "ステップ1：クローンとセットアップ"
      },
      "step2": {
        "title": "ステップ2：バックエンド依存関係のインストール"
      },
      "step3": {
        "title": "ステップ3：データベースセットアップ",
        "description": "PostgreSQLデータベースとユーザーを作成：",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "openbsd": "OpenBSD",
        "windows": "Windows",
        "security_notes": {
          "title": "⚠️ セキュリティ注意事項",
          "dev_password": "開発パスワード<code>abc123</code>は<code>sysmanage-dev.yaml</code>と一致します",
          "never_production": "本番環境では絶対にこのパスワードを使用しないでください",
          "change_password": "PostgreSQLと設定ファイルの両方でパスワードを変更してください"
        }
      },
      "step4": {
        "title": "ステップ4：データベース接続のテスト"
      },
      "step5": {
        "title": "ステップ5：フロントエンド依存関係のインストール"
      },
      "step6": {
        "title": "ステップ6：設定",
        "description": "設定ファイルを作成：",
        "linux_macos_bsd": "Linux/macOS/BSD：",
        "windows_path": "Windows：",
        "security_steps": {
          "title": "🔐 必要なセキュリティ手順",
          "generate_secrets": "新しいシークレットを生成：<code>openssl rand -base64 32</code>",
          "strong_passwords": "強力なパスワードを使用（12文字以上）",
          "file_permissions": "適切なファイル権限を設定：<code>chmod 600 /etc/sysmanage.yaml</code>",
          "never_commit": "設定ファイルをバージョン管理にコミットしないでください"
        }
      },
      "step7": {
        "title": "ステップ7：データベースマイグレーションの実行"
      },
      "step8": {
        "title": "ステップ8：アプリケーションの開始",
        "access_description": "アプリケーションにアクセス：",
        "https": "HTTPS：",
        "https_url": "https://sysmanage.org:7443（SSL証明書が存在する場合）",
        "http": "HTTP：",
        "http_url": "http://localhost:3000（フォールバック）"
      }
    },
    "ssl": {
      "title": "SSL証明書（オプション）",
      "description": "HTTPS開発の場合、SSL証明書を配置：",
      "fallback": "証明書が見つからない場合、システムは自動的にlocalhost上のHTTPにフォールバックします。"
    },
    "troubleshooting": {
      "title": "トラブルシューティング",
      "package_errors": {
        "title": "パッケージビルドエラー",
        "missing_libpq": "libpq-fe.hがありません：",
        "install_libpq": "<code>libpq-dev</code>（Ubuntu）または<code>postgresql-devel</code>（RHEL）をインストール",
        "httptools_errors": "httptoolsビルドエラー：",
        "install_libuv": "<code>libuv1-dev</code>（Ubuntu）または<code>libuv-devel</code>（RHEL）をインストール",
        "python313_issues": "Python 3.13の問題：",
        "use_older_python": "代わりにPython 3.11または3.12を使用"
      },
      "db_issues": {
        "title": "データベース接続の問題",
        "verify_postgresql": "PostgreSQLが実行中であることを確認：<code>sudo systemctl status postgresql</code>",
        "check_credentials": "認証情報が設定ファイルと一致することを確認",
        "test_connection": "上記のpsqlコマンドで接続をテスト"
      },
      "port_conflicts": {
        "title": "ポートの競合",
        "ensure_ports": "ポート6443（API）と7443（フロントエンド）が利用可能であることを確認",
        "check_services": "既存のサービスを確認：<code>netstat -tlnp | grep :6443</code>",
        "modify_ports": "必要に応じて設定でポートを変更"
      },
      "permission_issues": {
        "title": "権限の問題",
        "set_config_permissions": "設定ファイルの権限を設定：<code>chmod 600 /etc/sysmanage.yaml</code>",
        "ensure_ownership": "ディレクトリの適切な所有権を確保",
        "check_venv": "仮想環境のアクティベーションを確認"
      }
    },
    "navigation": {
      "server_docs": "← サーバードキュメント",
      "config_guide": "設定ガイド →"
    },
    "note": "注意"
  },
  "server_configuration": {
    "title": "サーバー設定ガイド - SysManage",
    "description": "セキュリティ設定、データベース設定、高度な機能を含むSysManageサーバーの完全設定ガイド。",
    "breadcrumb": {
      "server": "サーバー",
      "configuration": "設定"
    },
    "header": {
      "title": "サーバー設定ガイド",
      "description": "SysManageサーバー展開をカスタマイズするための包括的な設定オプション。"
    },
    "file_locations": {
      "title": "設定ファイルの場所",
      "linux_macos_bsd": "🐧 Linux/macOS/BSD",
      "windows": "🪟 Windows",
      "development": "🛠️ 開発"
    },
    "basic": {
      "title": "基本設定",
      "api_server": {
        "title": "APIサーバー設定",
        "notes": {
          "title": "📝 注意事項",
          "host_binding": "<strong>ホストバインディング:</strong> 外部アクセスには<code>0.0.0.0</code>を、ローカルのみには<code>localhost</code>を使用",
          "ssl_certificates": "<strong>SSL証明書:</strong> 提供されない場合、サーバーはHTTPにフォールバック",
          "port_selection": "<strong>ポート選択:</strong> ポートが他のサービスで使用されていないことを確認"
        }
      },
      "database": {
        "title": "データベース設定",
        "security_warning": {
          "title": "⚠️ セキュリティ警告",
          "description": "例のパスワード<code>abc123</code>は開発用のみです。<strong>本番環境では常に強力なパスワードを使用してください！</strong>"
        }
      },
      "webui": {
        "title": "Web UI設定"
      }
    },
    "security": {
      "title": "セキュリティ設定",
      "core": {
        "title": "コアセキュリティ設定",
        "generating_values": {
          "title": "🔐 安全な値の生成"
        }
      },
      "password_policy": {
        "title": "パスワードポリシー設定",
        "notes": {
          "title": "📝 パスワードポリシー注意事項",
          "realtime_validation": "<strong>リアルタイム検証:</strong> ポリシーはフロントエンドとバックエンドの両方で適用",
          "multilanguage": "<strong>多言語:</strong> エラーメッセージは14の対応言語すべてで利用可能",
          "flexible_requirements": "<strong>柔軟な要件:</strong> 組織のニーズに合わせてポリシーを調整"
        }
      }
    },
    "email": {
      "title": "メール設定",
      "smtp": {
        "title": "SMTP設定",
        "providers": {
          "title": "📧 一般的なSMTP設定",
          "gmail": "Gmail",
          "office365": "Office 365",
          "exchange": "Exchange",
          "postfix": "Postfix",
          "gmail_note": "<strong>注意:</strong> 2FAとアプリパスワードが必要です。設定については<a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Googleアプリパスワード</a>をご覧ください。"
        }
      }
    },
    "certificates": {
      "title": "証明書管理",
      "storage": {
        "title": "証明書ストレージ",
        "permissions": {
          "title": "🔒 必要な権限",
          "directory": "<strong>証明書ディレクトリ:</strong> <code>0755</code>（オーナーrwx、グループ/その他rx）",
          "private_keys": "<strong>秘密鍵:</strong> <code>0600</code>（オーナーのみ読み取り/書き込み）",
          "certificates": "<strong>証明書:</strong> <code>0644</code>（オーナーrw、その他読み取り）"
        }
      },
      "mtls": {
        "title": "mTLS設定",
        "description": "相互TLS設定はサーバーによって自動的に管理されます。ホストが承認されると、クライアント証明書が生成され、証明書ディレクトリに保存されます。",
        "workflow": {
          "title": "🔄 mTLSワークフロー",
          "step1": "<strong>ホスト登録:</strong> エージェントが保留ステータスで登録",
          "step2": "<strong>手動承認:</strong> 管理者がWebインターフェースでホストを承認",
          "step3": "<strong>証明書生成:</strong> サーバーが一意のクライアント証明書を生成",
          "step4": "<strong>安全な認証:</strong> 後続の接続でmTLSを使用"
        }
      }
    },
    "advanced": {
      "title": "高度な機能",
      "discovery": {
        "title": "エージェント検出サービス",
        "service": {
          "title": "📡 検出サービス",
          "description": "エージェントがネットワーク上の利用可能なサーバーを自動的に検出して設定することを可能にします。"
        }
      },
      "logging": {
        "title": "ログ設定"
      },
      "performance": {
        "title": "パフォーマンスチューニング"
      }
    },
    "permissions": {
      "title": "ファイル権限とセキュリティ",
      "directory": {
        "title": "必要なディレクトリ構造"
      },
      "security_checklist": {
        "title": "🛡️ セキュリティチェックリスト",
        "config_file": "✅ 設定ファイルはサービスユーザーのみが読み取り可能",
        "cert_directory": "✅ 証明書ディレクトリはアクセス制限あり",
        "private_keys": "✅ 秘密鍵は0600権限で保護",
        "strong_passwords": "✅ 強力なパスワードと秘密が使用されている",
        "jwt_rotation": "✅ JWT秘密は定期的にローテーション",
        "db_credentials": "✅ データベース資格情報は一意で強力"
      }
    },
    "environment": {
      "title": "環境変数",
      "description": "設定は環境変数でも設定可能（YAMLファイルを上書き）："
    },
    "testing": {
      "title": "設定のテスト",
      "validation": {
        "title": "検証手順",
        "syntax": "<strong>設定構文:</strong>",
        "database": "<strong>データベース接続:</strong>",
        "email": "<strong>メール設定:</strong>",
        "ssl": "<strong>SSL証明書:</strong>"
      }
    },
    "navigation": {
      "installation": "← インストールガイド",
      "deployment": "デプロイメントガイド →"
    }
  },
  "server_deployment": {
    "title": "デプロイメントガイド - SysManageサーバー",
    "description": "スケーラブルなSysManageインフラストラクチャのための本番デプロイメント戦略とベストプラクティス。",
    "breadcrumb": {
      "server": "サーバー",
      "deployment": "デプロイメント"
    },
    "header": {
      "title": "デプロイメントガイド",
      "description": "スケーラブルで安全、信頼性の高いSysManageインフラストラクチャのための本番デプロイメント戦略とベストプラクティス。"
    },
    "overview": {
      "title": "デプロイメント概要",
      "description": "SysManageは、シングルサーバーセットアップから高可用性マルチノードクラスターまで、インフラストラクチャ要件に応じてさまざまな構成でデプロイできます。",
      "strategies": {
        "single": {
          "title": "🖥️ シングルサーバーデプロイメント",
          "description": "小規模から中規模環境に最適（最大100ホスト）",
          "features": {
            "components": "シングルサーバーがすべてのコンポーネントをホスト",
            "database": "同じサーバー上のPostgreSQLデータベース",
            "configuration": "シンプルな設定とメンテナンス",
            "resources": "低いリソース要件"
          }
        },
        "ha": {
          "title": "🔄 高可用性デプロイメント",
          "description": "ゼロダウンタイムが必要な本番環境",
          "features": {
            "servers": "複数のアプリケーションサーバー",
            "load_balancer": "SSL終端付きロードバランサー",
            "clustering": "フェイルオーバー付きデータベースクラスタリング",
            "redundancy": "冗長ネットワークとストレージ"
          }
        },
        "cloud": {
          "title": "☁️ クラウドデプロイメント",
          "description": "スケーラブルなクラウドネイティブデプロイメントオプション",
          "features": {
            "orchestration": "コンテナオーケストレーション（Kubernetes）",
            "scaling": "オートスケーリング機能",
            "database": "マネージドデータベースサービス",
            "availability": "マルチリージョン可用性"
          }
        }
      }
    },
    "checklist": {
      "title": "本番チェックリスト",
      "pre_deployment": {
        "title": "デプロイメント前",
        "hardware": "サーバーハードウェア/VM仕様が要件を満たしている",
        "network": "ネットワーク接続とファイアウォールルールが設定済み",
        "ssl": "SSL証明書を取得して検証済み",
        "dns": "DNSレコードが設定済み",
        "database": "PostgreSQLデータベースサーバーが準備済み",
        "monitoring": "バックアップと監視システムが配置済み"
      },
      "security": {
        "title": "セキュリティ設定",
        "https": "HTTPS/TLSが有効化され実施されている",
        "passwords": "強力なパスワードポリシーが設定済み",
        "jwt": "JWTトークン設定が最適化済み",
        "database": "データベースアクセスがアプリケーションに制限されている",
        "firewall": "ファイアウォールルールが必要なポートへのアクセスを制限",
        "logs": "ログファイル権限とローテーションが設定済み"
      },
      "performance": {
        "title": "パフォーマンス最適化",
        "pooling": "データベースコネクションプールが設定済み",
        "assets": "フロントエンドアセットが縮小・圧縮済み",
        "caching": "キャッシュヘッダーが設定済み",
        "limits": "アプリケーションプロセスのリソース制限が設定済み",
        "logging": "ログレベルが本番環境に適切に設定済み"
      }
    },
    "single_server": {
      "title": "シングルサーバーデプロイメント",
      "requirements": {
        "title": "システム要件",
        "component": "コンポーネント",
        "minimum": "最小",
        "recommended": "推奨"
      },
      "installation": {
        "title": "インストール手順"
      },
      "config": {
        "title": "本番設定"
      }
    },
    "ha": {
      "title": "高可用性デプロイメント",
      "architecture": {
        "title": "アーキテクチャ概要"
      },
      "load_balancer": {
        "title": "ロードバランサー設定",
        "nginx": {
          "title": "Nginx設定"
        }
      },
      "database": {
        "title": "データベースクラスタリング",
        "replication": {
          "title": "PostgreSQLストリーミングレプリケーション"
        }
      }
    },
    "container": {
      "title": "コンテナデプロイメント",
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetesデプロイメント"
      }
    },
    "monitoring": {
      "title": "監視とログ",
      "system": {
        "title": "システム監視",
        "prometheus": {
          "title": "Prometheus設定"
        },
        "health": {
          "title": "ヘルスチェックエンドポイント"
        }
      },
      "logs": {
        "title": "ログ管理"
      }
    },
    "backup": {
      "title": "バックアップと災害復旧",
      "database": {
        "title": "データベースバックアップ"
      },
      "disaster": {
        "title": "災害復旧計画",
        "step1": "<strong>評価:</strong> 障害の範囲と影響を受けるシステムを特定",
        "step2": "<strong>コミュニケーション:</strong> ステークホルダーとユーザーにインシデントを通知",
        "step3": "<strong>隔離:</strong> 障害コンポーネントを隔離してさらなる損害を防止",
        "step4": "<strong>復旧:</strong> バックアップから復元またはスタンバイシステムへフェイルオーバー",
        "step5": "<strong>検証:</strong> 復元されたシステムをテストして機能を確認",
        "step6": "<strong>ポストモーテム:</strong> インシデントを文書化して手順を改善"
      }
    },
    "performance": {
      "title": "パフォーマンス最適化",
      "database": {
        "title": "データベースチューニング"
      },
      "application": {
        "title": "アプリケーションチューニング"
      },
      "caching": {
        "title": "キャッシュ戦略",
        "redis": "<strong>Redis:</strong> セッションストレージと一時データキャッシュ",
        "cdn": "<strong>CDN:</strong> 静的アセット配信と地理的分散",
        "application": "<strong>アプリケーションキャッシュ:</strong> データベースクエリ結果キャッシュ",
        "browser": "<strong>ブラウザキャッシュ:</strong> 適切なヘッダーでのクライアントサイドアセットキャッシュ"
      }
    },
    "security": {
      "title": "セキュリティ強化",
      "network": {
        "title": "ネットワークセキュリティ"
      },
      "application": {
        "title": "アプリケーションセキュリティ",
        "https": "<strong>HTTPSのみ:</strong> すべての接続でTLSを強制",
        "hsts": "<strong>HSTS:</strong> HTTP Strict Transport Securityヘッダー",
        "csp": "<strong>CSP:</strong> Content Security Policy実装",
        "rate_limiting": "<strong>レート制限:</strong> APIエンドポイントレート制限",
        "input_validation": "<strong>入力検証:</strong> 包括的な入力サニタイゼーション",
        "audit_logging": "<strong>監査ログ:</strong> すべての管理操作をログ"
      }
    },
    "maintenance": {
      "title": "メンテナンスとアップデート",
      "procedure": {
        "title": "アップデート手順",
        "step1": "<strong>バックアップ:</strong> アップデート前に完全なシステムバックアップを作成",
        "step2": "<strong>テスト:</strong> ステージング環境でアップデートをテスト",
        "step3": "<strong>メンテナンスウィンドウ:</strong> ユーザー通知付きでメンテナンスをスケジュール",
        "step4": "<strong>アップデート:</strong> 文書化された手順に従ってアップデートを適用",
        "step5": "<strong>検証:</strong> すべてのシステムが正しく機能することを確認",
        "step6": "<strong>ロールバック計画:</strong> 必要に応じてロールバック手順を準備"
      },
      "tasks": {
        "title": "メンテナンスタスク",
        "daily": {
          "title": "日次",
          "monitoring": "システムヘルスとパフォーマンスを監視",
          "logs": "アプリケーションログでエラーを確認",
          "backup": "バックアップ完了を確認"
        },
        "weekly": {
          "title": "週次",
          "security": "セキュリティログとアラートを確認",
          "packages": "システムパッケージを更新",
          "restore_test": "バックアップ復元手順をテスト"
        },
        "monthly": {
          "title": "月次",
          "security": "セキュリティ脆弱性評価",
          "performance": "パフォーマンス分析と最適化",
          "capacity": "容量計画レビュー"
        }
      }
    }
  },
  "getting_started": {
    "title": "はじめに - SysManage",
    "description": "インフラストラクチャ監視と自動化のためのSysManageを素早く開始するためのクイックスタートガイドとチュートリアル。",
    "breadcrumb": "はじめに",
    "header": {
      "title": "はじめに",
      "description": "インフラストラクチャ監視と自動化のためのSysManageを素早く開始するためのクイックスタートガイドとチュートリアル。"
    },
    "welcome": {
      "title": "SysManageへようこそ",
      "description": "SysManageは、インフラストラクチャ全体でホスト、パッケージ、システムヘルスを管理するのに役立つ包括的なインフラストラクチャ監視および自動化プラットフォームです。数台のサーバーから数千台のホストまで管理する場合でも、SysManageはシステムを効果的に維持・監視するために必要なツールを提供します。"
    },
    "journey": {
      "title": "あなたの旅はここから始まります",
      "description": "以下のガイド付き手順に従って、お使いの環境でSysManageを稼働させてください：",
      "steps": {
        "quick_start": {
          "title": "クイックスタート",
          "description": "数分でSysManageをインストールして実行"
        },
        "deployment": {
          "title": "初回デプロイメント",
          "description": "最初のSysManageサーバーインスタンスをデプロイ"
        },
        "agents": {
          "title": "エージェントセットアップ",
          "description": "最初のエージェントをインストールして承認"
        },
        "management": {
          "title": "基本管理",
          "description": "必須の管理タスクを学習"
        }
      }
    },
    "cards": {
      "quick_start": {
        "title": "🚀 クイックスタート",
        "description": "合理化されたインストールガイドでSysManageを素早く稼働させましょう。評価と小規模デプロイメントに最適です。",
        "features": {
          "requirements": "システム要件と前提条件",
          "docker": "Docker Composeでのインストール",
          "config": "初期設定とセットアップ",
          "login": "初回ログインと基本ナビゲーション"
        },
        "link": "クイックスタートガイド →"
      },
      "webui": {
        "title": "🌐 Webインターフェース概要",
        "description": "SysManage Webインターフェースとその監視・管理のための主要機能の包括的なツアー。",
        "features": {
          "dashboard": "ダッシュボード概要とナビゲーション",
          "hosts": "ホスト管理インターフェース",
          "packages": "パッケージ管理機能",
          "monitoring": "監視とアラート"
        },
        "link": "Webインターフェースガイド →"
      }
    },
    "prerequisites": {
      "title": "開始前に",
      "system": {
        "title": "システム要件",
        "server": {
          "title": "サーバー要件"
        },
        "platforms": {
          "title": "対応プラットフォーム"
        }
      },
      "knowledge": {
        "title": "必要な知識"
      },
      "needed": {
        "title": "必要なもの"
      }
    },
    "use_cases": {
      "title": "一般的な使用例",
      "small": {
        "title": "🏢 小規模ビジネス"
      },
      "medium": {
        "title": "🏭 中規模企業"
      },
      "large": {
        "title": "🌐 大規模組織"
      }
    },
    "learning_path": {
      "title": "推奨学習パス"
    },
    "help": {
      "title": "ヘルプを得る",
      "docs": {
        "title": "📖 ドキュメント",
        "description": "SysManageのすべての側面をカバーする包括的なガイド"
      },
      "community": {
        "title": "💬 コミュニティ",
        "description": "他のSysManageユーザーや貢献者と繋がる"
      },
      "troubleshooting": {
        "title": "🔧 トラブルシューティング",
        "description": "よくある問題とその解決方法"
      }
    },
    "navigation": {
      "title": "クイックナビゲーション",
      "docs_home": "← ドキュメントホーム",
      "quick_start": "クイックスタート →"
    }
  },
  "testing": {
    "msw": {
      "title": "Mock Service Worker (MSW) フロントエンドテスト",
      "overview": {
        "description": "Mock Service Worker (MSW) は、ブラウザレベルでネットワークリクエストを傍受する強力なAPI モッキングライブラリで、実際のバックエンド依存関係なしに予測可能で信頼性の高いテストを可能にします。",
        "benefits": {
          "title": "主な利点",
          "reliable": "バックエンド依存関係なしの信頼性高く予測可能なテスト",
          "fast": "ネットワーク遅延なしの高速テスト実行",
          "isolation": "制御された状態での完全なテスト分離",
          "realistic": "動的レスポンスによる現実的なAPI シミュレーション"
        },
        "title": "概要"
      },
      "architecture": {
        "title": "MSW アーキテクチャ",
        "description": "MSW実装には3つの主要コンポーネントが含まれます：",
        "components": {
          "handlers": {
            "title": "リクエストハンドラ",
            "description": "APIリクエストを傍受しモックレスポンスを生成する方法を定義"
          },
          "server": {
            "title": "モックサーバー",
            "description": "テスト環境用のNode.jsベースサーバー"
          },
          "integration": {
            "title": "テスト統合",
            "description": "テスト用の自動設定とライフサイクル管理"
          }
        }
      },
      "implementation": {
        "title": "実装詳細",
        "handlers_file": {
          "title": "ハンドラファイル (src/mocks/handlers.ts)",
          "description": "包括的カバレッジを持つすべてのAPI モックハンドラの集約定義"
        },
        "test_setup": {
          "title": "テストセットアップ (src/setupTests.ts)",
          "description": "適切なライフサイクル管理を伴うすべてのテストの自動MSW設定"
        },
        "mock_responses": {
          "title": "モックレスポンス",
          "description": "実際のAPIレスポンスを反映する現実的なデータオブジェクト"
        }
      },
      "benefits": {
        "title": "詳細な利点",
        "development": "Development: Work on frontend features before backend APIs are ready",
        "testing": {
          "title": "テストの利点",
          "description": "一貫したモックレスポンスにより不安定なテストを排除"
        },
        "cicd": "CI/CD: No need to spin up backend services in test environments",
        "isolation": "Test Isolation: Frontend tests run independently of backend availability",
        "reliability": "Reliability: Consistent responses eliminate flaky tests",
        "speed": "Performance: No network latency, tests execute faster"
      },
      "usage_patterns": {
        "title": "使用パターン",
        "basic_testing": {
          "title": "基本テスト",
          "description": "ほとんどのテストは追加設定なしにMSWから自動的に恩恵を受ける"
        },
        "custom_handlers": {
          "title": "カスタムハンドラ",
          "description": "テストはカスタムシナリオ用の特定ハンドラを上書き可能"
        },
        "error_scenarios": {
          "title": "エラーシナリオ",
          "description": "成功レスポンスとエラーレスポンスの両方をテスト"
        }
      },
      "best_practices": {
        "title": "ベストプラクティス",
        "handler_design": {
          "title": "ハンドラデザイン",
          "description": "本番APIレスポンスに近い現実的なモックデータを使用"
        },
        "test_organization": {
          "title": "テスト構成",
          "description": "MSWは完全な分離のためテスト間でハンドラを自動リセット"
        },
        "debugging": {
          "title": "デバッグ",
          "description": "予期しないAPI呼び出しをデバッグするためMSWログを使用"
        }
      },
      "migration": {
        "title": "移行ガイド",
        "from_manual": {
          "title": "手動モックから",
          "description": "保守性向上のため手動fetchモックをMSWハンドラに置換"
        },
        "from_real_api": {
          "title": "実APIから",
          "description": "より良い制御のため実APIを使用するテストをMSWに移行"
        }
      },
      "troubleshooting": {
        "title": "トラブルシューティング",
        "common_issues": {
          "title": "一般的な問題",
          "unhandled_requests": {
            "title": "未処理リクエスト",
            "description": "コンソール出力で未処理リクエストに関する警告を確認"
          },
          "handler_conflicts": {
            "title": "ハンドラ競合",
            "description": "ハンドラパターンが実際のAPI呼び出しと一致することを確認"
          },
          "response_format": {
            "title": "レスポンス形式",
            "description": "モックレスポンスが期待される形式と一致することを確認"
          }
        }
      },
      "advanced": {
        "title": "高度な使用法",
        "dynamic_responses": {
          "title": "動的レスポンス",
          "description": "リクエストパラメータに基づく動的モックレスポンスの生成"
        },
        "stateful_mocking": {
          "title": "ステートフルモッキング",
          "description": "複数のAPI呼び出しにわたる状態変化のシミュレーション"
        },
        "network_conditions": {
          "title": "ネットワーク条件",
          "description": "ネットワークエラーと低速接続のシミュレーション"
        }
      },
      "bestpractices": {
        "coverage": "API Coverage: Ensure all API endpoints used by components are mocked",
        "errors": "Error Scenarios: Test both success and error responses",
        "isolation": "Test Isolation: MSW automatically resets handlers between tests",
        "logging": "Request Logging: Use MSW logging to debug unexpected API calls",
        "realistic": "Realistic Data: Use mock data that closely matches production API responses",
        "title": "ベストプラクティス"
      },
      "compatibility": {
        "description": "SysManage includes special compatibility fixes for React 19 in the test environment:",
        "title": "React 19 Compatibility"
      },
      "debugging": {
        "console": "Console output for MSW request logs",
        "description": "If tests fail due to API issues, check:",
        "handlers": "Handler patterns match actual API calls",
        "setup": "MSW server is properly started in test setup",
        "title": "Debugging MSW",
        "unhandled": "Warnings about unhandled requests"
      },
      "features": {
        "ci": {
          "description": "MSW includes special handling for continuous integration environments:",
          "title": "CI/CD Integration"
        },
        "dynamic": {
          "description": "MSW uses broad pattern matching with dynamic path resolution:",
          "fallback": "Graceful fallback for unmatched endpoints",
          "parsing": "URL parsing extracts specific endpoint paths",
          "title": "Dynamic Path Handling",
          "wildcard": "Wildcard patterns catch all /api/* requests"
        },
        "realistic": {
          "description": "MSW provides comprehensive mock data that mirrors real API responses:",
          "hosts": "Complete host information with hardware details",
          "operations": "Package installation/uninstallation operations",
          "packages": "Software package data with search functionality",
          "title": "Realistic Response Simulation",
          "users": "User authentication and profile data"
        },
        "title": "Key Features"
      },
      "handlers": {
        "description": "MSW handlers are defined in /src/mocks/handlers.ts and provide comprehensive API coverage:",
        "title": "Request Handlers"
      },
      "installation": {
        "description": "MSW is already installed and configured in the SysManage frontend. The setup includes:",
        "title": "Installation & Configuration"
      },
      "integration": {
        "description": "MSW is automatically configured for all tests in /src/setupTests.ts with proper lifecycle management:",
        "title": "Test Integration"
      },
      "server": {
        "description": "The MSW server is configured for Node.js test environments in /src/mocks/node.ts:",
        "title": "Test Server Setup"
      },
      "usage": {
        "automatic": {
          "description": "Most tests automatically benefit from MSW without additional configuration:",
          "title": "Automatic API Mocking"
        },
        "custom": {
          "description": "Tests can override specific handlers for custom scenarios:",
          "title": "Custom Handler Overrides"
        },
        "title": "Usage in Tests"
      }
    },
    "vitest": {
      "title": "Vitest テストフレームワーク",
      "description": "高速で信頼性の高いフロントエンドテスト用のVitestの設定と使用法"
    },
    "playwright": {
      "title": "Playwright エンドツーエンドテスト",
      "description": "完全なシステム検証のためのPlaywrightによる包括的エンドツーエンドテスト"
    },
    "pytest": {
      "title": "Python バックエンドテスト",
      "description": "FastAPIでpytestを使用した包括的バックエンドテスト"
    },
    "overview": {
      "description": "SysManage employs a multi-layered testing approach to ensure reliability, security, and functionality across all components:",
      "e2e": {
        "crossbrowser": "Cross-browser compatibility",
        "description": "Complete user workflow testing using Playwright",
        "journey": "Full user journey testing",
        "realworld": "Real-world scenario validation",
        "title": "End-to-End (E2E) Tests",
        "ui": "UI interaction and workflow testing"
      },
      "integration": {
        "api": "API endpoint testing",
        "auth": "Authentication and authorization flow testing",
        "database": "Database integration testing",
        "description": "Testing interactions between different system components",
        "title": "Integration Tests",
        "websocket": "WebSocket communication testing"
      },
      "msw": {
        "description": "API mocking for isolated and reliable frontend testing",
        "isolation": "Complete test isolation from backend dependencies",
        "realistic": "Realistic API response simulation",
        "reliability": "Consistent and predictable test behavior",
        "speed": "Faster test execution without network requests",
        "title": "Mock Service Worker (MSW)"
      },
      "title": "Testing Strategy Overview",
      "unit": {
        "backend": {
          "count": "1,432 Python tests using pytest"
        },
        "coverage": {
          "value": "100% test coverage for both backend and frontend"
        },
        "description": "Comprehensive unit testing for individual components and functions",
        "frontend": {
          "count": "63 TypeScript tests using Vitest"
        },
        "title": "Unit Tests"
      }
    },
    "running": {
      "all": {
        "title": "All Tests"
      },
      "backend": {
        "title": "Backend Tests (Python/pytest)"
      },
      "e2e": {
        "title": "End-to-End Tests (Playwright)"
      },
      "frontend": {
        "description": "Frontend tests automatically use Mock Service Worker for API mocking:",
        "msw": {
          "automatic": "MSW automatically intercepts all API requests",
          "description": "When running frontend tests:",
          "isolation": "Each test runs in complete isolation",
          "logging": "Request logs appear in console output",
          "realistic": "Realistic API responses are provided automatically",
          "title": "MSW Behavior"
        },
        "title": "Frontend Tests (TypeScript/Vitest with MSW)"
      },
      "title": "Running Tests"
    }
  },
  "common": {
    "overview": "概要",
    "features": "機能",
    "installation": "インストール",
    "configuration": "設定",
    "troubleshooting": "トラブルシューティング",
    "security": "セキュリティ",
    "next": "次へ",
    "previous": "前へ",
    "back_to_top": "トップに戻る",
    "read_more": "詳細を読む",
    "learn_more": "詳細を学ぶ",
    "download": "ダウンロード",
    "github": "GitHub",
    "documentation": "ドキュメント"
  },
  "administration": {
    "host_management": {
      "agent_deployment": "Agent Deployment",
      "agent_lifecycle_management": "Agent Lifecycle Management",
      "agent_troubleshooting": "Agent Troubleshooting",
      "agent_updates": "Agent Updates",
      "approval_criteria": "Approval Criteria",
      "approval_workflow": "Approval Workflow",
      "automation_integration": "Automation Integration",
      "available_bulk_operations": "Available Bulk Operations",
      "best_practices": "Host Management Best Practices",
      "bulk_operation_process": "Bulk Operation Process",
      "bulk_operations": "Bulk Operations",
      "cloud_integration": "Cloud Integration",
      "collected_information": "Collected Information",
      "common_issues": "一般的な問題",
      "common_tag_categories": "Common Tag Categories",
      "configuration_management": "Configuration Management",
      "creating_host_groups": "Creating Host Groups",
      "deployment_best_practices": "Deployment Best Practices",
      "deployment_methods": "Deployment Methods",
      "diagnostic_tools": "Diagnostic Tools",
      "dynamic_group_assignment": "Dynamic Group Assignment",
      "group_types": "Group Types",
      "hardware_inventory": "Hardware Inventory",
      "host_groups": "Host Groups",
      "host_organization": "Host Organization",
      "host_registration_approval": "Host Registration and Approval",
      "inventory_management": "Infrastructure Inventory Management",
      "inventory_reports": "Inventory Reports",
      "key_concepts": "Key Concepts",
      "mass_actions": "Mass Management Actions",
      "operational_practices": "Operational Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "overview": "概要",
      "registration_process": "Registration Process",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "security_practices": "Security Best Practices",
      "software_inventory": "Software Inventory",
      "software_reports": "Software Reports",
      "software_tracking": "Software Tracking",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "tag_management": "Tag Management",
      "tagging_metadata": "Tagging and Metadata",
      "title": "ホスト管理",
      "update_process": "Update Process",
      "update_strategy": "Update Strategy"
    },
    "monitoring": {
      "access_control": "Access Control",
      "agent_performance": "Agent Performance",
      "alert_configuration": "Alert Configuration",
      "alert_design": "Alert Design Best Practices",
      "alert_suppression": "Alert Suppression",
      "alert_types": "Alert Types",
      "alerting_system": "Alerting System",
      "api_integration": "API Integration",
      "application_dashboards": "Application Dashboards",
      "application_service_metrics": "Application and Service Metrics",
      "channel_configuration": "Channel Configuration",
      "collection_intervals": "Collection Intervals",
      "collection_optimization": "Collection Optimization",
      "core_system_checks": "Core System Checks",
      "cpu_metrics": "CPU Metrics",
      "custom_health_checks": "Custom Health Checks",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_customization": "Dashboard Customization",
      "dashboard_design": "Dashboard Design Best Practices",
      "dashboard_types": "Dashboard Types",
      "data_retention": "Data Retention Policies",
      "database_monitoring": "Database Monitoring",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "executive_dashboards": "Executive Dashboards",
      "health_checks": "Health Check Configuration",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "layout_options": "Layout Options",
      "memory_metrics": "Memory Metrics",
      "metrics_collection": "Metrics Collection",
      "monitoring_best_practices": "Monitoring Best Practices",
      "monitoring_capabilities": "Monitoring Capabilities",
      "network_metrics": "Network Metrics",
      "notification_channels": "Notification Channels",
      "operational_practices": "Operational Best Practices",
      "operations_dashboards": "Operations Dashboards",
      "overview": "概要",
      "performance_optimization": "Monitoring Performance Optimization",
      "retention_strategies": "Retention Strategies",
      "service_health_checks": "Service Health Checks",
      "service_monitoring": "Service Monitoring",
      "storage_metrics": "Storage Metrics",
      "storage_optimization": "Storage Optimization",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "supported_channels": "Supported Channels",
      "system_health": "System Health Checks",
      "system_performance_metrics": "System Performance Metrics",
      "threshold_configuration": "Threshold Configuration",
      "title": "モニタリングとアラート",
      "web_server_monitoring": "Web Server Monitoring",
      "widget_types": "Widget Types"
    },
    "subtitle": "Comprehensive system administration guides and procedures",
    "title": "Administration",
    "user_management": {
      "account_deactivation": "Account Deactivation",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deletion": "Account Deletion",
      "account_security": "Account Security",
      "active_session_monitoring": "Active Session Monitoring",
      "administrative_updates": "Administrative Updates",
      "administrator": "Administrator",
      "api_example": "API Example",
      "auditor": "Auditor",
      "authentication_methods": "Authentication Methods",
      "authentication_security": "Authentication Security",
      "built_in_roles": "Built-in Roles",
      "common_user_workflows": "Common User Management Workflows",
      "compliance_considerations": "Compliance Considerations",
      "creating_custom_roles": "Creating Custom Roles",
      "creating_user_accounts": "Creating User Accounts",
      "custom_roles": "Custom Roles",
      "employee_offboarding": "Employee Offboarding",
      "external_authentication": "External Authentication",
      "integration_issues": "Integration Issues",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "local_authentication": "Local Authentication",
      "login_problems": "Login Problems",
      "mfa_configuration": "MFA Configuration",
      "modifying_user_accounts": "Modifying User Accounts",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "new_employee_onboarding": "New Employee Onboarding",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "operator": "Operator",
      "overview": "概要",
      "password_policy_configuration": "Password Policy Configuration",
      "permission_issues": "Permission Issues",
      "permission_matrix": "Permission Matrix",
      "profile_updates": "Profile Updates",
      "role_change_process": "Role Change Process",
      "roles_permissions": "Roles and Permissions",
      "saml_integration": "SAML 2.0 Integration",
      "security_best_practices": "Security Best Practices",
      "security_incident_response": "Security Incident Response",
      "session_configuration": "Session Configuration",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "supported_mfa_methods": "Supported MFA Methods",
      "title": "ユーザー管理",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "user_account_management": "User Account Management",
      "viewer": "Viewer",
      "web_interface": "Web Interface"
    }
  },
  "agent_docs": {
    "architecture": {
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "description": "The agent operates as a persistent service with the following workflow:",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity",
      "title": "Agent Architecture"
    },
    "configuration": {
      "auto_discovery": "Auto-discovery setup (recommended)",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "link": "Configuration Guide →",
      "logging": "Logging and internationalization",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "title": "⚙️ Configuration"
    },
    "cross_platform": {
      "bsd": "BSD-specific considerations",
      "description": "Platform-specific features, package managers, and system integration details.",
      "link": "Cross-Platform Guide →",
      "linux": "Linux distributions and package managers",
      "macos": "macOS launchd configuration",
      "title": "🌍 Cross-Platform Support",
      "windows": "Windows service integration"
    },
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms.",
      "title": "Agent Documentation"
    },
    "installation": {
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "link": "Installation Guide →",
      "methods": "Installation methods (source, packages)",
      "prerequisites": "Prerequisites and system requirements",
      "service": "Service configuration",
      "title": "🚀 Installation",
      "venv": "Virtual environment setup"
    },
    "navigation": {
      "api": "API Reference →",
      "server": "← Server Documentation",
      "title": "Quick Navigation"
    },
    "overview": {
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "features_title": "Key Features",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "platform_freebsd": "🔒 FreeBSD",
      "platform_linux": "🐧 Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_macos": "🍎 macOS (Intel and Apple Silicon)",
      "platform_openbsd": "🛡️ OpenBSD",
      "platform_windows": "🪟 Windows (10, 11, Server 2019/2022)",
      "platforms_title": "Supported Platforms",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "title": "概要"
    },
    "privileged": {
      "cross_platform": "Cross-platform privileged execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "link": "Privileged Execution →",
      "scripts": "Automated privilege scripts",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "title": "🔐 Privileged Execution"
    },
    "section_title": "Agent",
    "security": {
      "certificates": "Certificate management",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) authentication",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "title": "🔒 Security"
    },
    "title": "Agent Documentation - SysManage",
    "troubleshooting": {
      "connection": "Connection and network issues",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "link": "Troubleshooting Guide →",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "title": "🔧 Troubleshooting"
    }
  },
  "api": {
    "authentication": {
      "authentication_flow": "Authentication Flow",
      "error_responses": "Error Responses",
      "example": "Example",
      "login": "Login",
      "overview": "概要",
      "password_reset": "Password Reset",
      "path_parameters": "Path Parameters",
      "refresh_token": "Refresh Token",
      "request_body": "Request Body",
      "reset_password": "Reset Password",
      "response": "Response",
      "security_best_practices": "Security Best Practices",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "title": "Authentication API",
      "token_expiration": "Token Expiration",
      "using_auth_tokens": "Using Authentication Tokens",
      "validate_reset_token": "Validate Reset Token"
    },
    "hosts": {
      "authentication_required": "Authentication Required",
      "bulk_operations": "Bulk Operations",
      "fleet_management": "Fleet Management",
      "hardware_system_info": "Hardware and System Information",
      "host_operations": "Host Operations",
      "important_notes": "Important Notes",
      "overview": "概要",
      "software_package_info": "Software and Package Information",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "title": "Host Management API"
    },
    "packages": {
      "important_notes": "Important Notes",
      "os_upgrades": "OS Upgrades",
      "overview": "概要",
      "package_cache_management": "Package Cache Management",
      "package_discovery": "Package Discovery",
      "package_installation": "Package Installation",
      "package_search": "Package Search",
      "package_updates": "Package Updates",
      "query_parameters": "Query Parameters",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "title": "Package Management API"
    },
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "title": "API リファレンス"
  },
  "api_docs": {
    "description": "Complete REST API documentation for integrating with SysManage.",
    "header": {
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically.",
      "title": "API リファレンス"
    },
    "overview": {
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features",
      "title": "概要"
    },
    "section_title": "API リファレンス",
    "title": "API Reference - SysManage"
  },
  "security": {
    "authentication": {
      "admin": "Admin",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "auditor": "Auditor",
      "auth_architecture": "Authentication Architecture",
      "authentication_events": "Authentication Events",
      "automatic_rotation": "Automatic Rotation",
      "common_issues": "一般的な問題",
      "default_password_policy": "Default Password Policy",
      "default_roles": "Default Roles",
      "diagnostic_commands": "Diagnostic Commands",
      "email_otp": "Email OTP",
      "external_auth_integration": "External Auth Integration",
      "external_auth_providers": "External Authentication Providers",
      "integration_examples": "Integration Examples",
      "jwt_authentication": "JWT Authentication",
      "jwt_configuration": "JWT Configuration",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "mfa_configuration": "MFA Configuration",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_implementation": "MFA Implementation",
      "mfa_setup_problems": "MFA Setup Problems",
      "monitored_events": "Monitored Events",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "next_steps": "Next Steps",
      "operator": "Operator",
      "overview": "Authentication Overview",
      "password_policies": "Password Policies",
      "password_policy_configuration": "Password Policy Configuration",
      "password_requirements": "Password Requirements",
      "permission_examples": "Permission Examples",
      "permission_system": "Permission System",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "rbac_implementation": "RBAC Implementation",
      "rbac_permission_errors": "RBAC Permission Errors",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "recovery_codes": "Recovery Codes",
      "saml_integration": "SAML 2.0 Integration",
      "security_events": "Security Events",
      "security_monitoring": "Authentication Security Monitoring",
      "session_architecture": "Session Architecture",
      "session_configuration": "Session Configuration",
      "session_features": "Session Features",
      "session_management": "Session Management",
      "session_monitoring": "Session Monitoring",
      "session_security": "Session Security",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "supported_mfa_methods": "Supported MFA Methods",
      "suspicious_activities": "Suspicious Activities",
      "title": "Authentication & Authorization",
      "token_based_sessions": "Token-Based Sessions",
      "token_blacklisting": "Token Blacklisting",
      "token_expired_errors": "Token Expired Errors",
      "token_generation_process": "Token Generation Process",
      "token_rotation_security": "Token Rotation & Security",
      "token_validation_flow": "Token Validation Flow",
      "totp": "TOTP (Time-based OTP)",
      "troubleshooting": "Troubleshooting Authentication",
      "viewer": "Viewer"
    },
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "title": "Security Documentation"
  },
  "security_docs": {
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "header": {
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments.",
      "title": "Security Documentation"
    },
    "section_title": "セキュリティ",
    "title": "Security Documentation - SysManage"
  }
}