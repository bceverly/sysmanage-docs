{
  "site": {
    "description": "包括的なインフラストラクチャ監視と自動化のためのモダンシステム管理プラットフォーム",
    "title": "SysManage - モダンシステム管理プラットフォーム"
  },
  "nav": {
    "config_builder": "構成ビルダー",
    "documentation": "ドキュメント",
    "features": "機能",
    "getting_started": "開始方法",
    "github": "GitHub",
    "github_agent": "エージェント GitHub",
    "github_server": "サーバー GitHub"
  },
  "hero": {
    "get_started": "開始方法",
    "subtitle": "インフラストラクチャ全体の一元的な監視、管理、自動化。Linux、Windows、macOS、FreeBSD、OpenBSD、NetBSDをサポート。",
    "title": "モダンシステム管理を簡単に",
    "view_agent_github": "エージェント GitHub",
    "view_github": "GitHubで表示",
    "view_server_github": "サーバー GitHub"
  },
  "features": {
    "cross_platform": {
      "description": "Linux、Windows、macOS、FreeBSD、OpenBSD、NetBSDシステムを単一のインターフェースから管理。",
      "title": "クロスプラットフォームサポート"
    },
    "modern_ui": {
      "description": "リアルタイムダッシュボードと包括的レポート機能を備えたReactベースのレスポンシブインターフェース。",
      "title": "モダンWebインターフェース"
    },
    "multilingual": {
      "description": "英語、スペイン語、フランス語、ドイツ語などを含む14言語のネイティブサポート。",
      "title": "多言語サポート"
    },
    "osVersionUpgrades": {
      "bsdSupport": {
        "description": "OpenBSD sysupgradeとFreeBSDバージョンアップグレード",
        "title": "BSDサポート"
      },
      "majorVersionDetection": {
        "description": "利用可能なOSメジャーバージョンアップグレードの自動検出",
        "title": "メジャーバージョン検出"
      },
      "multiPlatformSupport": {
        "description": "Ubuntu LTSアップグレード、Fedoraバージョンアップグレード、macOSアップデート、Windows機能アップデート",
        "title": "マルチプラットフォームサポート"
      },
      "opensuseIntegration": {
        "description": "ディストリビューションアップグレードの検出と管理",
        "title": "OpenSUSE統合"
      },
      "rebootManagement": {
        "description": "システム再起動が必要なOSアップグレードの自動再起動スケジューリング",
        "title": "再起動管理"
      },
      "safetyFeatures": {
        "description": "ドライラン機能とデプロイ前のアップグレード検証",
        "title": "安全機能"
      },
      "title": "⬆️ OSバージョンアップグレード"
    },
    "package_management": {
      "description": "サポートされているすべてのプラットフォームでのリモートソフトウェアインストール、更新、管理。",
      "title": "パッケージ管理"
    },
    "real_time": {
      "description": "WebSocketベースのリアルタイム通信による即座のシステム更新と監視。",
      "title": "リアルタイム監視"
    },
    "security": {
      "description": "JWT認証、mTLS、ロールベースのアクセス制御、包括的なセキュリティスキャン。",
      "title": "エンタープライズセキュリティ"
    },
    "title": "主な機能"
  },
  "quick_start": {
    "step1": {
      "description": "インフラストラクチャにSysManageサーバーをデプロイ",
      "link": "サーバーインストールガイド →",
      "title": "サーバーのインストール"
    },
    "step2": {
      "description": "管理したいシステムにエージェントをインストール",
      "link": "エージェントインストールガイド →",
      "title": "エージェントのデプロイ"
    },
    "step3": {
      "description": "Webインターフェースにアクセスしてエージェントを承認",
      "link": "開始ガイド →",
      "title": "管理開始"
    },
    "title": "クイックスタート"
  },
  "architecture": {
    "agent_features": "エージェント機能",
    "auto_discovery": "自動検出",
    "auto_discovery_desc": "ネットワーク上でのサーバーの自動検出",
    "cross_platform": "クロスプラットフォーム",
    "cross_platform_desc": "すべての主要なオペレーティングシステムのネイティブサポート",
    "lightweight_desc": "最小限のリソースフットプリント",
    "lightweight_design": "軽量設計",
    "secure_communication": "セキュア通信",
    "secure_communication_desc": "mTLSと証明書ベースの認証",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "agent_capacity": "Agent Capacity",
      "agent_features": "エージェント 機能",
      "agent_scaling": "Agent Scaling",
      "agent_server_communication": "Agent-to-Server Communication",
      "application_layer": "Application Layer",
      "architecture": "Architecture",
      "architecture_overview": "Architecture Overview",
      "authentication_systems": "Authentication Systems",
      "auto_discovery": "自動-Discovery",
      "auto_discovery_desc": "自動matic server detection on the network",
      "automation_orchestration": "Automation & Orchestration",
      "backend_technologies": "Backend Technologies",
      "certificate_based_auth": "Certificate-Based Authentication",
      "communication_security": "Communication & Security",
      "core_components": "Core Components",
      "cross_platform": "Cross-プラットフォーム",
      "cross_platform_desc": "Native support for all major operating systems",
      "data_flow_architecture": "Data Flow Architecture",
      "data_layer": "Data Layer",
      "deployment_patterns": "Deployment Patterns",
      "devops_deployment": "DevOps & Deployment",
      "external_system_integration": "External System Integration",
      "frontend_technologies": "Frontend Technologies",
      "high_availability": "High Availability Deployment",
      "high_level_architecture": "High-Level Architecture",
      "horizontal_scaling": "Horizontal Scaling",
      "integration_points": "Integration Points",
      "key_features": "Key Features",
      "lightweight_desc": "Minimal resource footprint",
      "lightweight_design": "軽量設計",
      "monitoring_alerting": "Monitoring & Alerting",
      "multi_region": "Multi-Region Deployment",
      "network_security": "Network Security",
      "next_steps": "Next Steps",
      "package_repositories": "Package Repositories",
      "performance_characteristics": "Performance Characteristics",
      "resource_usage": "Resource Usage",
      "response_times": "Response Times",
      "rest_api": "REST API",
      "scalability_design": "Scalability Design",
      "secure_communication": "セキュアな通信",
      "secure_communication_desc": "mTLS and certificate-based authentication",
      "security_architecture": "Security Architecture",
      "server_scaling": "Server Scaling",
      "single_instance": "Single Instance Deployment",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "sysmanage_agents": "SysManage Agents",
      "sysmanage_server": "SysManage Server",
      "technology_stack": "Technology Stack",
      "title": "System Overview",
      "transport_layer": "Transport Layer",
      "use_cases": "Use Cases",
      "user_request_processing": "User Request Processing",
      "view_agent_repo": "表示 SysManage エージェント リポジトリ",
      "web_interface": "Web Interface"
    },
    "title": "アーキテクチャ概要",
    "view_agent_repo": "SysManage エージェントリポジトリを表示"
  },
  "docs": {
    "additional_resources": {
      "agent_repo": "エージェントリポジトリ",
      "community_discussions": "コミュニティディスカッション",
      "github_repo": "GitHubリポジトリ",
      "issue_tracker": "イシュートラッカー",
      "title": "追加リソース"
    },
    "administration": {
      "backup": "バックアップ・復旧",
      "description": "ユーザー、ホスト、システム設定を管理するための管理ガイド。",
      "host_management": "ホスト管理",
      "maintenance": "メンテナンス",
      "monitoring": "監視・アラート",
      "title": "管理",
      "user_management": "ユーザー管理",
      "view_docs": "管理ドキュメントを表示 →",
      "grafana_setup": "Grafana統合セットアップ",
      "firewall_management": "ファイアウォール管理"
    },
    "agent": {
      "configuration": "設定",
      "cross_platform": "クロスプラットフォームサポート",
      "description": "全プラットフォームでのSysManageエージェントのセットアップと管理ガイド。",
      "installation": "インストールガイド",
      "privileged_execution": "特権実行",
      "title": "エージェントドキュメント",
      "troubleshooting": "トラブルシューティング",
      "view_docs": "エージェントドキュメントを表示 →"
    },
    "api": {
      "authentication": "認証",
      "description": "SysManageとの統合のための完全なREST APIドキュメント。",
      "hosts": "ホスト管理",
      "monitoring": "監視",
      "packages": "パッケージ管理・アンインストール",
      "title": "APIリファレンス",
      "view_docs": "APIドキュメントを表示 →",
      "websockets": "WebSocket API"
    },
    "architecture": {
      "database_schema": "データベース設計",
      "description": "システム設計、メッセージフロー、コンポーネント間相互作用を含む技術アーキテクチャドキュメント。",
      "message_flow": "メッセージフロー・キュー",
      "multi_os_cicd": "Multi-OS CI/CD Pipeline",
      "performance_metrics": "パフォーマンス・スケーラビリティ",
      "performance_testing": "パフォーマンス テスト フレームワーク",
      "system_overview": "システム概要",
      "testing_excellence": "テスト優秀性",
      "title": "アーキテクチャ",
      "view_docs": "アーキテクチャを表示 →",
      "websocket_protocol": "通信プロトコル"
    },
    "description": "SysManageサーバーおよびエージェントコンポーネントの完全なドキュメント。",
    "getting_started": {
      "agent_approval": "エージェント承認",
      "basic_management": "基本管理",
      "description": "新規ユーザー向けのクイックスタートガイドとチュートリアル。",
      "first_deployment": "初回デプロイメント",
      "quick_start": "クイックスタート",
      "title": "始めましょう",
      "tutorials": "チュートリアル",
      "view_docs": "始めましょう →",
      "webui_overview": "Webインターフェース概要"
    },
    "header": {
      "subtitle": "SysManageのデプロイ、設定、管理のための包括的なガイド。",
      "title": "ドキュメント"
    },
    "security": {
      "authentication": "認証・認可",
      "best_practices": "ベストプラクティス",
      "description": "セキュリティ機能、ベストプラクティス、脆弱性レポート。",
      "mtls": "相互TLS (mTLS)",
      "reporting": "脆弱性レポート",
      "scanning": "セキュリティスキャン",
      "title": "セキュリティ",
      "view_docs": "セキュリティドキュメントを表示 →"
    },
    "server": {
      "configuration": "設定",
      "deployment": "デプロイメント",
      "description": "SysManageサーバーのインストール、設定、管理の完全ガイド。",
      "features": "機能",
      "installation": "インストールガイド",
      "reports": "レポート & PDF生成",
      "testing": "テスト & Playwright",
      "title": "サーバードキュメント",
      "troubleshooting": "トラブルシューティング",
      "view_docs": "サーバードキュメントを表示 →"
    },
    "title": "ドキュメント - SysManage",
    "admin": {
      "firewall": {
        "title": "ファイアウォール管理 - SysManage管理",
        "meta_description": "SysManageを使用してインフラストラクチャ全体でファイアウォールソフトウェアを展開、管理、監視するための完全なガイド。",
        "breadcrumb": "ファイアウォール管理",
        "header": {
          "title": "ファイアウォール管理",
          "subtitle": "リアルタイムの監視と制御を備えたインフラストラクチャ全体でファイアウォールソフトウェアを展開、構成、管理するための包括的なガイド。"
        },
        "overview": {
          "title": "概要",
          "description": "SysManageは、サポートされているすべてのプラットフォームでファイアウォールソフトウェアの一元管理を提供します。このプラットフォームは展開を自動化し、ファイアウォールステータスのリアルタイム監視を可能にし、ファイアウォールソフトウェアを遠隔で有効化、無効化、再起動、または展開するためのツールを提供します。",
          "key_features": "主な機能",
          "features": {
            "cross_platform": "<strong>クロスプラットフォームサポート:</strong> Linux、BSD、macOS、Windowsシステムでファイアウォールを管理",
            "auto_detection": "<strong>自動検出:</strong> エージェントは自動的にファイアウォールソフトウェアのステータスを検出して報告します",
            "remote_deployment": "<strong>リモート展開:</strong> Webインターフェースからワンクリックでファイアウォールソフトウェアを展開",
            "service_control": "<strong>サービス制御:</strong> ファイアウォールサービスを遠隔で有効化、無効化、または再起動",
            "port_monitoring": "<strong>ポート監視:</strong> 開いているポートとファイアウォールルールのリアルタイム監視",
            "realtime_status": "<strong>リアルタイムステータス:</strong> ファイアウォールステータス、有効/無効状態、ポート構成を監視",
            "agent_protection": "<strong>エージェント保護:</strong> ファイアウォールを有効にすると、エージェント通信に必要なポートを自動的に開きます"
          }
        }
      }
    }
  },
  "footer": {
    "agent_docs": "エージェントドキュメント",
    "agent_github_repo": "エージェント GitHub リポジトリ",
    "api_reference": "APIリファレンス",
    "community": "コミュニティ",
    "copyright": "© 2024 SysManage. 全著作権所有。",
    "description": "包括的なインフラストラクチャ監視と自動化のためのモダンシステム管理プラットフォーム。",
    "discussions": "ディスカッション",
    "documentation": "ドキュメント",
    "github_repo": "GitHubリポジトリ",
    "issue_tracker": "課題トラッカー",
    "license": "ライセンス",
    "licensed_under": "AGPLv3の下でライセンス",
    "security": "セキュリティ",
    "server_docs": "サーバードキュメント",
    "server_github_repo": "サーバー GitHub リポジトリ",
    "view_license": "ライセンスを表示"
  },
  "installation": {
    "installation_steps": "インストール手順",
    "prerequisites": "前提条件",
    "system_requirements": "システム要件",
    "title": "インストールガイド",
    "troubleshooting": "トラブルシューティング"
  },
  "configuration": {
    "advanced_features": "高度な機能",
    "basic_config": "基本設定",
    "security_config": "セキュリティ設定",
    "title": "設定ガイド"
  },
  "security_page": {
    "features": "セキュリティ機能",
    "overview": "セキュリティ概要",
    "title": "セキュリティドキュメント",
    "vulnerability_reporting": "脆弱性レポート"
  },
  "platforms": {
    "opensuse": {
      "leap_note": "安定したパッケージを使用、手動でのRustインストールが必要な場合があります",
      "package_notes": "パッケージマネージャーの注意事項",
      "python_versions": "LeapはPython 3.9+を搭載、Tumbleweedは最新の安定版を搭載",
      "title": "openSUSE Leap/Tumbleweed",
      "tumbleweed_note": "ローリングリリース、zypperでRustが利用可能"
    },
    "sles": {
      "apparmor_note": "SUSEはデフォルトでSELinuxの代わりにAppArmorを使用",
      "enterprise_considerations": "エンタープライズの考慮事項",
      "firewall_config": "YaSTまたはfirewall-cmdで必要なポートを開く",
      "firewall_note": "SuSEfirewall2またはfirewalldがエージェントポートをブロックする可能性があります",
      "logging_note": "ログはjournalctlまたは/var/log/messagesで利用可能",
      "selinux_note": "有効な場合、ポリシーの調整が必要な場合があります",
      "service_notes": "SUSE Enterprise の注意事項",
      "sles12_note": "より新しいPythonにはSoftware Collections (SCL)が必要な場合があります",
      "sles15_note": "Python 3.6+が含まれていますが、3.9+を推奨",
      "subscription_note": "一部のパッケージにはアクティブなSLESサブスクリプションが必要です",
      "title": "SUSE Linux Enterprise Server (SLES)"
    }
  },
  "server_docs": {
    "configuration": {
      "database_settings": "Database connection settings",
      "description": "SysManageデプロイメントをカスタマイズするための包括的な設定オプション。",
      "file_structure": "Configuration file structure",
      "link": "Configuration Guide →",
      "security_options": "Security and authentication options",
      "title": "⚙️ Configuration",
      "websocket_api": "WebSocket and API configuration"
    },
    "deployment": {
      "backup": "Backup and disaster recovery",
      "checklist": "Production deployment checklist",
      "description": "スケーラブルなインフラストラクチャのための本番デプロイメント戦略とベストプラクティス。",
      "link": "Deployment Guide →",
      "monitoring": "監視と可観測性",
      "scaling": "Load balancing and scaling",
      "title": "デプロイメントガイド"
    },
    "description": "SysManageサーバーのインストール、設定、管理に関する完全なドキュメント。",
    "features": {
      "description": "すべてのサーバー機能と機能の詳細な概要。",
      "host_management": "Host and agent management",
      "link": "Features Overview →",
      "monitoring": "Real-time monitoring and alerts",
      "package_management": "パッケージ管理",
      "title": "機能概要",
      "user_management": "ユーザー管理"
    },
    "header": {
      "subtitle": "SysManageサーバーのインストール、設定、管理に関する完全なガイド。",
      "title": "サーバードキュメント"
    },
    "installation": {
      "database": "Database setup and configuration",
      "description": "インフラストラクチャでSysManageサーバーを設定するためのステップバイステップインストールガイド。",
      "link": "Installation Guide →",
      "methods": "Docker and traditional installation methods",
      "requirements": "System requirements and prerequisites",
      "ssl": "SSL certificate configuration",
      "title": "🚀 Installation"
    },
    "navigation": {
      "agent": "← Agent Documentation",
      "api": "API Reference →",
      "title": "Quick Navigation"
    },
    "overview": {
      "backend_api": "バックエンドAPI - 非同期サポート、JWT認証、WebSocket通信を備えたFastAPI",
      "components_title": "サーバーコンポーネント",
      "database": "データベース - SQLAlchemy ORMとAlembicマイグレーションを備えたPostgreSQL",
      "description": "SysManageサーバーは、FastAPI（Python）バックエンドとReact（TypeScript）フロントエンドで構築された現代的なWebアプリケーションです。軽量なエージェントを通じて複数のシステムを管理するための集中プラットフォームを提供します。",
      "frontend_ui": "フロントエンドUI - TypeScript、Material-UIコンポーネント、リアルタイム更新を備えたReact",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning",
      "title": "概要",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents"
    },
    "reports": {
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "inventory": "Host inventory and system reports",
      "link": "Reports Documentation →",
      "security": "User management and security reports",
      "title": "レポートとPDF生成"
    },
    "section_title": "サーバー",
    "security": {
      "auth": "Authentication and authorization",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "title": "🔐 Security"
    },
    "testing": {
      "cicd": "CI/CD testing pipeline",
      "coverage": "Test coverage and reporting",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "e2e": "End-to-end testing with Playwright",
      "link": "Testing Documentation →",
      "title": "テスト",
      "unit_integration": "Unit and integration testing"
    },
    "title": "サーバードキュメント - SysManage",
    "troubleshooting": {
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "link": "Troubleshooting Guide →",
      "maintenance": "Database maintenance",
      "performance": "Performance optimization",
      "title": "トラブルシューティングガイド"
    }
  },
  "server_installation": {
    "breadcrumb_installation": "インストール",
    "description": "前提条件、データベース設定、設定を含むSysManageサーバーの完全なインストールガイド。",
    "header": {
      "subtitle": "お客様のインフラストラクチャにSysManageサーバーを設定するための完全なステップバイステップインストールガイド。",
      "title": "サーバーインストールガイド"
    },
    "installation_steps": {
      "step1": {
        "title": "ステップ1：クローンとセットアップ"
      },
      "step2": {
        "description": "PostgreSQLデータベースとユーザーを作成：",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "netbsd": "NetBSD",
        "openbsd": "OpenBSD",
        "security_notes": {
          "change_password": "PostgreSQLと設定ファイルの両方でパスワードを変更してください",
          "dev_password": "開発パスワード<code>abc123</code>は<code>sysmanage-dev.yaml</code>と一致します",
          "never_production": "本番環境では絶対にこのパスワードを使用しないでください",
          "title": "⚠️ セキュリティ注意事項"
        },
        "title": "ステップ2：データベースセットアップ",
        "windows": "Windows"
      },
      "step3": {
        "title": "ステップ3：バックエンド依存関係のインストール"
      },
      "step4": {
        "title": "ステップ4：データベース接続のテスト"
      },
      "step5": {
        "title": "ステップ5：フロントエンド依存関係のインストール"
      },
      "step6": {
        "config_generator": {
          "description": "Use the interactive",
          "link": "構成ビルダー Tool",
          "title": "💡 構成 Generator 利用可能"
        },
        "description": "設定ファイルを作成：",
        "linux_macos_bsd": "Linux/macOS/BSD：",
        "security_steps": {
          "file_permissions": "適切なファイル権限を設定：<code>chmod 600 /etc/sysmanage.yaml</code>",
          "generate_secrets": "新しいシークレットを生成：<code>openssl rand -base64 32</code>",
          "never_commit": "設定ファイルをバージョン管理にコミットしないでください",
          "strong_passwords": "強力なパスワードを使用（12文字以上）",
          "title": "🔐 必要なセキュリティ手順"
        },
        "title": "ステップ6：設定",
        "windows_path": "Windows："
      },
      "step7": {
        "features": {
          "admin_user": "作成s the initial administrative user account",
          "config_hardening": "Applies security hardening to configuration files",
          "jwt_secret": "Generates unique JWT secret for authentication",
          "password_salt": "Generates unique password salt for secure password hashing",
          "prevents_defaults": "Prevents use of default/example security tokens",
          "title": "What this script does:"
        },
        "security_note": {
          "description": "The secure installation script must be run to create the initial admin user and configure unique security tokens for your installation.",
          "title": "🔐 REQUIRED for New インストールs"
        },
        "title": "ステップ7：データベースマイグレーションの実行",
        "warning": {
          "backup_config": "バックアップ your configuration file after running this script",
          "required": "This step is REQUIRED",
          "required_desc": "the application will not function securely without it",
          "run_once": "Only run this script once per installation",
          "title": "⚠️ 重要 セキュリティ 注記s",
          "unique_tokens": "Each installation gets unique security tokens to prevent credential reuse"
        }
      },
      "step8": {
        "access_description": "アクセス the application at:",
        "http": "HTTP:",
        "http_url": "http://localhost:3000 (fallback)",
        "https": "HTTPS:",
        "https_url": "https://sysmanage.org:7443 (if SSL certs exist)",
        "title": "ステップ8: セキュアインストールスクリプトの実行"
      },
      "title": "インストール手順"
    },
    "navigation": {
      "config_guide": "設定ガイド →",
      "server_docs": "← サーバードキュメント"
    },
    "note": "注意",
    "prerequisites": {
      "centos": {
        "tab_title": "CentOS/RHEL",
        "title": "CentOS/RHEL/Fedora"
      },
      "centos_rhel": "CentOS/RHEL",
      "freebsd": {
        "tab_title": "FreeBSD",
        "title": "FreeBSD"
      },
      "macos": {
        "tab_title": "macOS",
        "title": "macOS"
      },
      "netbsd": {
        "tab_title": "NetBSD",
        "title": "NetBSD完全セットアップガイド"
      },
      "openbsd": {
        "tab_title": "OpenBSD",
        "title": "OpenBSD"
      },
      "opensuse": {
        "note_leap": "openSUSE Leap: 安定版パッケージ、Python 3.11が通常利用可能",
        "note_nodejs": "Node.jsバージョン: バージョン（nodejs20）を明示的に指定する必要がある場合があります",
        "note_postgresql": "PostgreSQL: 互換性のためにバージョン（postgresql14）を指定してください",
        "note_title": "📦 パッケージマネージャーのメモ",
        "note_tumbleweed": "openSUSE Tumbleweed: 最新パッケージを含むローリングリリース",
        "tab_title": "openSUSE",
        "title": "openSUSE Leap/Tumbleweed"
      },
      "sles": {
        "note_firewall": "ファイアウォール: SuSEfirewall2（古い）またはfirewalld（新しい）を使用する場合があります",
        "note_modules": "モジュール: 一部のパッケージはSUSEConnectを介して追加モジュールを有効にする必要があります",
        "note_selinux": "SELinux: 有効な場合、ポリシーの調整が必要な場合があります",
        "note_sles12": "SLES 12: 新しいPythonにはSoftware Collections（SCL）が必要な場合があります",
        "note_sles15": "SLES 15: Python 3.6+が含まれていますが、3.11+を推奨",
        "note_subscription": "サブスクリプション: 完全なパッケージアクセスにはアクティブなSLESサブスクリプションが必要です",
        "note_title": "🏢 エンタープライズに関する考慮事項",
        "tab_title": "SLES",
        "title": "SUSE Linux Enterprise Server (SLES)"
      },
      "title": "プラットフォーム固有の前提条件",
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10 (推奨)"
      },
      "ubuntu25": {
        "note": "Ubuntu 25.04+はPython 3.13のみを提供しており、まだ互換性がありません。ソースからPython 3.12をビルドする必要があります：",
        "tab_title": "Ubuntu 25.04+",
        "title": "Ubuntu 25.04+ (ソースからPython 3.12)"
      },
      "ubuntu_debian": "Ubuntu/Debian",
      "windows": {
        "tab_title": "Windows",
        "title": "Windows"
      }
    },
    "requirements": {
      "nodejs": {
        "description": "Reactフロントエンドの構築用",
        "title": "🟢 Node.js",
        "version": "20.x以上"
      },
      "os": {
        "description": "クロスプラットフォーム展開",
        "platforms": "Linux、macOS、Windows、FreeBSD、OpenBSD, NetBSD",
        "title": "💻 オペレーティングシステム"
      },
      "postgresql": {
        "description": "すべてのアプリケーションデータのメインデータベース",
        "title": "🐘 PostgreSQL",
        "version": "14以上"
      },
      "python": {
        "note": "注意：Python 3.13はパッケージ互換性の問題によりまだサポートされていません",
        "title": "🐍 Python",
        "version": "3.11または3.12"
      },
      "required": "必須",
      "supported": "サポート",
      "title": "システム要件"
    },
    "ssl": {
      "description": "HTTPS開発の場合、SSL証明書を配置：",
      "fallback": "証明書が見つからない場合、システムは自動的にlocalhost上のHTTPにフォールバックします。",
      "title": "SSL証明書（オプション）"
    },
    "title": "サーバーインストールガイド - SysManage",
    "troubleshooting": {
      "db_issues": {
        "check_credentials": "認証情報が設定ファイルと一致することを確認",
        "test_connection": "上記のpsqlコマンドで接続をテスト",
        "title": "データベース接続の問題",
        "verify_postgresql": "PostgreSQLが実行中であることを確認：<code>sudo systemctl status postgresql</code>"
      },
      "package_errors": {
        "httptools_errors": "httptoolsビルドエラー：",
        "install_libpq": "<code>libpq-dev</code>（Ubuntu）または<code>postgresql-devel</code>（RHEL）をインストール",
        "install_libuv": "<code>libuv1-dev</code>（Ubuntu）または<code>libuv-devel</code>（RHEL）をインストール",
        "missing_libpq": "libpq-fe.hがありません：",
        "python313_issues": "Python 3.13の問題：",
        "title": "パッケージビルドエラー",
        "use_older_python": "代わりにPython 3.11または3.12を使用"
      },
      "permission_issues": {
        "check_venv": "仮想環境のアクティベーションを確認",
        "ensure_ownership": "ディレクトリの適切な所有権を確保",
        "set_config_permissions": "設定ファイルの権限を設定：<code>chmod 600 /etc/sysmanage.yaml</code>",
        "title": "権限の問題"
      },
      "port_conflicts": {
        "check_services": "既存のサービスを確認：<code>netstat -tlnp | grep :6443</code>",
        "ensure_ports": "ポート6443（API）と7443（フロントエンド）が利用可能であることを確認",
        "modify_ports": "必要に応じて設定でポートを変更",
        "title": "ポートの競合"
      },
      "title": "トラブルシューティング"
    }
  },
  "server_configuration": {
    "advanced": {
      "discovery": {
        "service": {
          "description": "エージェントがネットワーク上の利用可能なサーバーを自動的に検出して設定することを可能にします。",
          "title": "📡 検出サービス"
        },
        "title": "エージェント検出サービス"
      },
      "logging": {
        "title": "ログ設定"
      },
      "performance": {
        "title": "パフォーマンスチューニング"
      },
      "title": "高度な機能"
    },
    "basic": {
      "api_server": {
        "notes": {
          "host_binding": "<strong>ホストバインディング:</strong> 外部アクセスには<code>0.0.0.0</code>を、ローカルのみには<code>localhost</code>を使用",
          "port_selection": "<strong>ポート選択:</strong> ポートが他のサービスで使用されていないことを確認",
          "ssl_certificates": "<strong>SSL証明書:</strong> 提供されない場合、サーバーはHTTPにフォールバック",
          "title": "📝 注意事項"
        },
        "title": "APIサーバー設定"
      },
      "database": {
        "security_warning": {
          "description": "例のパスワード<code>abc123</code>は開発用のみです。<strong>本番環境では常に強力なパスワードを使用してください！</strong>",
          "title": "⚠️ セキュリティ警告"
        },
        "title": "データベース設定"
      },
      "title": "基本設定",
      "webui": {
        "title": "Web UI設定"
      }
    },
    "breadcrumb": {
      "configuration": "設定",
      "server": "サーバー"
    },
    "certificates": {
      "mtls": {
        "description": "相互TLS設定はサーバーによって自動的に管理されます。ホストが承認されると、クライアント証明書が生成され、証明書ディレクトリに保存されます。",
        "title": "mTLS設定",
        "workflow": {
          "step1": "<strong>ホスト登録:</strong> エージェントが保留ステータスで登録",
          "step2": "<strong>手動承認:</strong> 管理者がWebインターフェースでホストを承認",
          "step3": "<strong>証明書生成:</strong> サーバーが一意のクライアント証明書を生成",
          "step4": "<strong>安全な認証:</strong> 後続の接続でmTLSを使用",
          "title": "🔄 mTLSワークフロー"
        }
      },
      "storage": {
        "permissions": {
          "certificates": "<strong>証明書:</strong> <code>0644</code>（オーナーrw、その他読み取り）",
          "directory": "<strong>証明書ディレクトリ:</strong> <code>0755</code>（オーナーrwx、グループ/その他rx）",
          "private_keys": "<strong>秘密鍵:</strong> <code>0600</code>（オーナーのみ読み取り/書き込み）",
          "title": "🔒 必要な権限"
        },
        "title": "証明書ストレージ"
      },
      "title": "証明書管理"
    },
    "description": "セキュリティ設定、データベース設定、高度な機能を含むSysManageサーバーの完全設定ガイド。",
    "email": {
      "smtp": {
        "providers": {
          "exchange": "Exchange",
          "gmail": "Gmail",
          "gmail_note": "<strong>注意:</strong> 2FAとアプリパスワードが必要です。設定については<a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Googleアプリパスワード</a>をご覧ください。",
          "office365": "Office 365",
          "postfix": "Postfix",
          "title": "📧 一般的なSMTP設定"
        },
        "title": "SMTP設定"
      },
      "title": "メール設定"
    },
    "environment": {
      "description": "設定は環境変数でも設定可能（YAMLファイルを上書き）：",
      "title": "環境変数"
    },
    "file_locations": {
      "development": "🛠️ 開発",
      "linux_macos_bsd": "🐧 Linux/macOS/BSD",
      "title": "設定ファイルの場所",
      "windows": "🪟 Windows"
    },
    "header": {
      "description": "SysManageサーバー展開をカスタマイズするための包括的な設定オプション。",
      "title": "サーバー設定ガイド"
    },
    "navigation": {
      "deployment": "デプロイメントガイド →",
      "installation": "← インストールガイド"
    },
    "permissions": {
      "directory": {
        "title": "必要なディレクトリ構造"
      },
      "security_checklist": {
        "cert_directory": "✅ 証明書ディレクトリはアクセス制限あり",
        "config_file": "✅ 設定ファイルはサービスユーザーのみが読み取り可能",
        "db_credentials": "✅ データベース資格情報は一意で強力",
        "jwt_rotation": "✅ JWT秘密は定期的にローテーション",
        "private_keys": "✅ 秘密鍵は0600権限で保護",
        "strong_passwords": "✅ 強力なパスワードと秘密が使用されている",
        "title": "🛡️ セキュリティチェックリスト"
      },
      "title": "ファイル権限とセキュリティ"
    },
    "security": {
      "core": {
        "generating_values": {
          "title": "🔐 安全な値の生成"
        },
        "title": "コアセキュリティ設定"
      },
      "password_policy": {
        "notes": {
          "flexible_requirements": "<strong>柔軟な要件:</strong> 組織のニーズに合わせてポリシーを調整",
          "multilanguage": "<strong>多言語:</strong> エラーメッセージは14の対応言語すべてで利用可能",
          "realtime_validation": "<strong>リアルタイム検証:</strong> ポリシーはフロントエンドとバックエンドの両方で適用",
          "title": "📝 パスワードポリシー注意事項"
        },
        "title": "パスワードポリシー設定"
      },
      "title": "セキュリティ設定"
    },
    "testing": {
      "title": "設定のテスト",
      "validation": {
        "database": "<strong>データベース接続:</strong>",
        "email": "<strong>メール設定:</strong>",
        "ssl": "<strong>SSL証明書:</strong>",
        "syntax": "<strong>設定構文:</strong>",
        "title": "検証手順"
      }
    },
    "title": "サーバー設定ガイド - SysManage"
  },
  "server_deployment": {
    "backup": {
      "database": {
        "title": "データベースバックアップ"
      },
      "disaster": {
        "step1": "<strong>評価:</strong> 障害の範囲と影響を受けるシステムを特定",
        "step2": "<strong>コミュニケーション:</strong> ステークホルダーとユーザーにインシデントを通知",
        "step3": "<strong>隔離:</strong> 障害コンポーネントを隔離してさらなる損害を防止",
        "step4": "<strong>復旧:</strong> バックアップから復元またはスタンバイシステムへフェイルオーバー",
        "step5": "<strong>検証:</strong> 復元されたシステムをテストして機能を確認",
        "step6": "<strong>ポストモーテム:</strong> インシデントを文書化して手順を改善",
        "title": "災害復旧計画"
      },
      "title": "バックアップと災害復旧"
    },
    "breadcrumb": {
      "deployment": "デプロイメント",
      "server": "サーバー"
    },
    "checklist": {
      "performance": {
        "assets": "フロントエンドアセットが縮小・圧縮済み",
        "caching": "キャッシュヘッダーが設定済み",
        "limits": "アプリケーションプロセスのリソース制限が設定済み",
        "logging": "ログレベルが本番環境に適切に設定済み",
        "pooling": "データベースコネクションプールが設定済み",
        "title": "パフォーマンス最適化"
      },
      "pre_deployment": {
        "database": "PostgreSQLデータベースサーバーが準備済み",
        "dns": "DNSレコードが設定済み",
        "hardware": "サーバーハードウェア/VM仕様が要件を満たしている",
        "monitoring": "バックアップと監視システムが配置済み",
        "network": "ネットワーク接続とファイアウォールルールが設定済み",
        "ssl": "SSL証明書を取得して検証済み",
        "title": "デプロイメント前"
      },
      "security": {
        "database": "データベースアクセスがアプリケーションに制限されている",
        "firewall": "ファイアウォールルールが必要なポートへのアクセスを制限",
        "https": "HTTPS/TLSが有効化され実施されている",
        "jwt": "JWTトークン設定が最適化済み",
        "logs": "ログファイル権限とローテーションが設定済み",
        "passwords": "強力なパスワードポリシーが設定済み",
        "title": "セキュリティ設定"
      },
      "title": "本番チェックリスト"
    },
    "container": {
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetesデプロイメント"
      },
      "title": "コンテナデプロイメント"
    },
    "description": "スケーラブルなSysManageインフラストラクチャのための本番デプロイメント戦略とベストプラクティス。",
    "ha": {
      "architecture": {
        "title": "アーキテクチャ概要"
      },
      "database": {
        "replication": {
          "title": "PostgreSQLストリーミングレプリケーション"
        },
        "title": "データベースクラスタリング"
      },
      "load_balancer": {
        "nginx": {
          "title": "Nginx設定"
        },
        "title": "ロードバランサー設定"
      },
      "title": "高可用性デプロイメント"
    },
    "header": {
      "description": "スケーラブルで安全、信頼性の高いSysManageインフラストラクチャのための本番デプロイメント戦略とベストプラクティス。",
      "title": "デプロイメントガイド"
    },
    "maintenance": {
      "procedure": {
        "step1": "<strong>バックアップ:</strong> アップデート前に完全なシステムバックアップを作成",
        "step2": "<strong>テスト:</strong> ステージング環境でアップデートをテスト",
        "step3": "<strong>メンテナンスウィンドウ:</strong> ユーザー通知付きでメンテナンスをスケジュール",
        "step4": "<strong>アップデート:</strong> 文書化された手順に従ってアップデートを適用",
        "step5": "<strong>検証:</strong> すべてのシステムが正しく機能することを確認",
        "step6": "<strong>ロールバック計画:</strong> 必要に応じてロールバック手順を準備",
        "title": "アップデート手順"
      },
      "tasks": {
        "daily": {
          "backup": "バックアップ完了を確認",
          "logs": "アプリケーションログでエラーを確認",
          "monitoring": "システムヘルスとパフォーマンスを監視",
          "title": "日次"
        },
        "monthly": {
          "capacity": "容量計画レビュー",
          "performance": "パフォーマンス分析と最適化",
          "security": "セキュリティ脆弱性評価",
          "title": "月次"
        },
        "title": "メンテナンスタスク",
        "weekly": {
          "packages": "システムパッケージを更新",
          "restore_test": "バックアップ復元手順をテスト",
          "security": "セキュリティログとアラートを確認",
          "title": "週次"
        }
      },
      "title": "メンテナンスとアップデート"
    },
    "monitoring": {
      "logs": {
        "title": "ログ管理"
      },
      "system": {
        "health": {
          "title": "ヘルスチェックエンドポイント"
        },
        "prometheus": {
          "title": "Prometheus設定"
        },
        "title": "システム監視"
      },
      "title": "監視とログ"
    },
    "overview": {
      "description": "SysManageは、シングルサーバーセットアップから高可用性マルチノードクラスターまで、インフラストラクチャ要件に応じてさまざまな構成でデプロイできます。",
      "strategies": {
        "cloud": {
          "description": "スケーラブルなクラウドネイティブデプロイメントオプション",
          "features": {
            "availability": "マルチリージョン可用性",
            "database": "マネージドデータベースサービス",
            "orchestration": "コンテナオーケストレーション（Kubernetes）",
            "scaling": "オートスケーリング機能"
          },
          "title": "☁️ クラウドデプロイメント"
        },
        "ha": {
          "description": "ゼロダウンタイムが必要な本番環境",
          "features": {
            "clustering": "フェイルオーバー付きデータベースクラスタリング",
            "load_balancer": "SSL終端付きロードバランサー",
            "redundancy": "冗長ネットワークとストレージ",
            "servers": "複数のアプリケーションサーバー"
          },
          "title": "🔄 高可用性デプロイメント"
        },
        "single": {
          "description": "小規模から中規模環境に最適（最大100ホスト）",
          "features": {
            "components": "シングルサーバーがすべてのコンポーネントをホスト",
            "configuration": "シンプルな設定とメンテナンス",
            "database": "同じサーバー上のPostgreSQLデータベース",
            "resources": "低いリソース要件"
          },
          "title": "🖥️ シングルサーバーデプロイメント"
        }
      },
      "title": "デプロイメント概要"
    },
    "performance": {
      "application": {
        "title": "アプリケーションチューニング"
      },
      "caching": {
        "application": "<strong>アプリケーションキャッシュ:</strong> データベースクエリ結果キャッシュ",
        "browser": "<strong>ブラウザキャッシュ:</strong> 適切なヘッダーでのクライアントサイドアセットキャッシュ",
        "cdn": "<strong>CDN:</strong> 静的アセット配信と地理的分散",
        "redis": "<strong>Redis:</strong> セッションストレージと一時データキャッシュ",
        "title": "キャッシュ戦略"
      },
      "database": {
        "title": "データベースチューニング"
      },
      "title": "パフォーマンス最適化"
    },
    "security": {
      "application": {
        "audit_logging": "<strong>監査ログ:</strong> すべての管理操作をログ",
        "csp": "<strong>CSP:</strong> Content Security Policy実装",
        "hsts": "<strong>HSTS:</strong> HTTP Strict Transport Securityヘッダー",
        "https": "<strong>HTTPSのみ:</strong> すべての接続でTLSを強制",
        "input_validation": "<strong>入力検証:</strong> 包括的な入力サニタイゼーション",
        "rate_limiting": "<strong>レート制限:</strong> APIエンドポイントレート制限",
        "title": "アプリケーションセキュリティ"
      },
      "network": {
        "title": "ネットワークセキュリティ"
      },
      "title": "セキュリティ強化"
    },
    "single_server": {
      "config": {
        "title": "本番設定"
      },
      "installation": {
        "title": "インストール手順"
      },
      "requirements": {
        "component": "コンポーネント",
        "minimum": "最小",
        "recommended": "推奨",
        "title": "システム要件"
      },
      "title": "シングルサーバーデプロイメント"
    },
    "title": "デプロイメントガイド - SysManageサーバー"
  },
  "getting_started": {
    "breadcrumb": "はじめに",
    "cards": {
      "quick_start": {
        "description": "合理化されたインストールガイドでSysManageを素早く稼働させましょう。評価と小規模デプロイメントに最適です。",
        "features": {
          "config": "初期設定とセットアップ",
          "docker": "Docker Composeでのインストール",
          "login": "初回ログインと基本ナビゲーション",
          "requirements": "システム要件と前提条件"
        },
        "link": "クイックスタートガイド →",
        "title": "🚀 クイックスタート"
      },
      "webui": {
        "description": "SysManage Webインターフェースとその監視・管理のための主要機能の包括的なツアー。",
        "features": {
          "dashboard": "ダッシュボード概要とナビゲーション",
          "hosts": "ホスト管理インターフェース",
          "monitoring": "監視とアラート",
          "packages": "パッケージ管理機能"
        },
        "link": "Webインターフェースガイド →",
        "title": "🌐 Webインターフェース概要"
      }
    },
    "description": "インフラストラクチャ監視と自動化のためのSysManageを素早く開始するためのクイックスタートガイドとチュートリアル。",
    "header": {
      "description": "インフラストラクチャ監視と自動化のためのSysManageを素早く開始するためのクイックスタートガイドとチュートリアル。",
      "title": "はじめに"
    },
    "help": {
      "community": {
        "description": "他のSysManageユーザーや貢献者と繋がる",
        "title": "💬 コミュニティ"
      },
      "docs": {
        "description": "SysManageのすべての側面をカバーする包括的なガイド",
        "title": "📖 ドキュメント"
      },
      "title": "ヘルプを得る",
      "troubleshooting": {
        "description": "よくある問題とその解決方法",
        "title": "🔧 トラブルシューティング"
      }
    },
    "journey": {
      "description": "以下のガイド付き手順に従って、お使いの環境でSysManageを稼働させてください：",
      "steps": {
        "agents": {
          "description": "最初のエージェントをインストールして承認",
          "title": "エージェントセットアップ"
        },
        "deployment": {
          "description": "最初のSysManageサーバーインスタンスをデプロイ",
          "title": "初回デプロイメント"
        },
        "management": {
          "description": "必須の管理タスクを学習",
          "title": "基本管理"
        },
        "quick_start": {
          "description": "数分でSysManageをインストールして実行",
          "title": "クイックスタート"
        }
      },
      "title": "あなたの旅はここから始まります"
    },
    "learning_path": {
      "title": "推奨学習パス"
    },
    "navigation": {
      "docs_home": "← ドキュメントホーム",
      "quick_start": "クイックスタート →",
      "title": "クイックナビゲーション"
    },
    "prerequisites": {
      "knowledge": {
        "title": "必要な知識"
      },
      "needed": {
        "title": "必要なもの"
      },
      "system": {
        "platforms": {
          "title": "対応プラットフォーム"
        },
        "server": {
          "title": "サーバー要件"
        },
        "title": "システム要件"
      },
      "title": "開始前に"
    },
    "title": "はじめに - SysManage",
    "use_cases": {
      "large": {
        "title": "🌐 大規模組織"
      },
      "medium": {
        "title": "🏭 中規模企業"
      },
      "small": {
        "title": "🏢 小規模ビジネス"
      },
      "title": "一般的な使用例"
    },
    "welcome": {
      "description": "SysManageは、インフラストラクチャ全体でホスト、パッケージ、システムヘルスを管理するのに役立つ包括的なインフラストラクチャ監視および自動化プラットフォームです。数台のサーバーから数千台のホストまで管理する場合でも、SysManageはシステムを効果的に維持・監視するために必要なツールを提供します。",
      "title": "SysManageへようこそ"
    }
  },
  "testing": {
    "breadcrumb": "テスト",
    "description": "ユニットテスト、統合テスト、PlaywrightによるE2Eテストを含むSysManageの包括的なテストガイド。",
    "msw": {
      "benefits": {
        "cicd": "CI/CD：テスト環境でバックエンドサービスを起動する必要なし",
        "development": "開発：バックエンドAPIの準備前にフロントエンド機能を作業",
        "isolation": "テスト分離：フロントエンドテストはバックエンドの可用性に関係なく実行",
        "reliability": "信頼性：一貫したレスポンスで不安定なテストを排除",
        "speed": "パフォーマンス：ネットワーク遅延なし、テストはより高速に実行",
        "title": "なぜMSWなのか？"
      },
      "bestpractices": {
        "coverage": "APIカバレッジ：コンポーネントが使用するすべてのAPIエンドポイントがモックされていることを確認",
        "errors": "エラーシナリオ：成功とエラーの両方のレスポンスをテスト",
        "isolation": "テスト分離：MSWはテスト間でハンドラーを自動リセット",
        "logging": "リクエストログ：予期しないAPI呼び出しをデバッグするためにMSWログを使用",
        "realistic": "リアルなデータ：本番APIレスポンスに密接に一致するモックデータを使用",
        "title": "ベストプラクティス"
      },
      "compatibility": {
        "description": "SysManageはテスト環境でReact 19のための特別な互換性修正を含む：",
        "title": "React 19互換性"
      },
      "debugging": {
        "console": "MSWリクエストログのコンソール出力",
        "description": "API問題でテストが失敗する場合、確認項目：",
        "handlers": "ハンドラーパターンが実際のAPI呼び出しと一致",
        "setup": "MSWサーバーがテストセットアップで適切に開始",
        "title": "MSWデバッグ",
        "unhandled": "未処理リクエストについての警告"
      },
      "features": {
        "ci": {
          "description": "MSWは継続的統合環境のための特別な処理を含む：",
          "title": "CI/CD統合"
        },
        "dynamic": {
          "description": "MSWは動的パス解決で広範囲のパターンマッチングを使用：",
          "fallback": "一致しないエンドポイントのためのエレガントなフォールバック",
          "parsing": "URL解析が特定のエンドポイントパスを抽出",
          "title": "動的パス処理",
          "wildcard": "ワイルドカードパターンがすべての/api/*リクエストをキャッチ"
        },
        "realistic": {
          "description": "MSWは実際のAPIレスポンスを反映する包括的なモックデータを提供：",
          "hosts": "ハードウェア詳細を含む完全なホスト情報",
          "operations": "パッケージインストール/アンインストール操作",
          "packages": "検索機能付きソフトウェアパッケージデータ",
          "title": "リアルなレスポンスシミュレーション",
          "users": "ユーザー認証とプロファイルデータ"
        },
        "title": "主要機能"
      },
      "handlers": {
        "description": "MSWハンドラーは/src/mocks/handlers.tsで定義され、包括的なAPIカバレッジを提供：",
        "title": "リクエストハンドラー"
      },
      "implementation": {
        "title": "実装アーキテクチャ"
      },
      "installation": {
        "description": "MSWはSysManageフロントエンドにすでにインストールされ設定されています。セットアップには以下が含まれます：",
        "title": "インストールと設定"
      },
      "integration": {
        "description": "MSWは/src/setupTests.tsですべてのテストに自動設定され、適切なライフサイクル管理を提供：",
        "title": "テスト統合"
      },
      "overview": {
        "description": "Mock Service Worker（MSW）は、ネットワークレベルでHTTPリクエストをインターセプトし、フロントエンドテスト用のリアルなAPIレスポンスを提供する強力なAPIモッキングライブラリです。SysManageは、実行中のバックエンドサーバーを必要とせずにフロントエンドコンポーネントを分離してテストできるよう、MSWを広範囲に使用しています。",
        "title": "概要"
      },
      "server": {
        "description": "MSWサーバーは/src/mocks/node.tsでNode.jsテスト環境用に設定：",
        "title": "テストサーバーセットアップ"
      },
      "title": "Mock Service Worker（MSW）フロントエンドテスト",
      "usage": {
        "automatic": {
          "description": "ほとんどのテストは追加設定なしでMSWから自動的に恩恵を受ける：",
          "title": "自動APIモッキング"
        },
        "custom": {
          "description": "テストはカスタムシナリオのために特定のハンドラーをオーバーライド可能：",
          "title": "カスタムハンドラーオーバーライド"
        },
        "title": "テストでの使用"
      }
    },
    "overview": {
      "description": "SysManageは、すべてのコンポーネントの信頼性、セキュリティ、機能性を確保するために多層テストアプローチを採用しています：",
      "e2e": {
        "crossbrowser": "クロスブラウザ互換性",
        "crossplatform": "Cross-platform support (Linux, macOS, Windows, OpenBSD, FreeBSD)",
        "description": "Playwrightを使用した完全なユーザーワークフローテスト",
        "framework": "Triple testing framework: Playwright (primary) + Selenium (fallback) + CI/CD integration",
        "journey": "完全なユーザージャーニーテスト",
        "link": "→ Complete UI テスト ドキュメント",
        "realworld": "実世界のシナリオ検証",
        "title": "エンドツーエンド（E2E）テスト",
        "ui": "UI相互作用とワークフローテスト"
      },
      "integration": {
        "api": "APIエンドポイントテスト",
        "auth": "認証と認可フローテスト",
        "database": "データベース統合テスト",
        "description": "異なるシステムコンポーネント間の相互作用のテスト",
        "title": "統合テスト",
        "websocket": "WebSocket通信テスト"
      },
      "msw": {
        "description": "分離された信頼性のあるフロントエンドテストのためのAPIモッキング",
        "isolation": "バックエンド依存関係からの完全なテスト分離",
        "realistic": "リアルなAPIレスポンスシミュレーション",
        "reliability": "一貫性があり予測可能なテスト動作",
        "speed": "ネットワークリクエストなしでより高速なテスト実行",
        "title": "Mock Service Worker（MSW）"
      },
      "title": "テスト戦略の概要",
      "unit": {
        "backend": {
          "count": "pytestを使用した1,432のPythonテスト",
          "text": "バックエンド:"
        },
        "coverage": {
          "text": "カバレッジ:",
          "value": "バックエンドとフロントエンドの両方で100%のテストカバレッジ"
        },
        "description": "個別のコンポーネントと関数の包括的なユニットテスト",
        "frontend": {
          "count": "Vitestを使用した63のTypeScriptテスト",
          "text": "フロントエンド:"
        },
        "title": "ユニットテスト"
      }
    },
    "running": {
      "all": {
        "title": "すべてのテスト"
      },
      "backend": {
        "title": "バックエンドテスト（Python/pytest）"
      },
      "e2e": {
        "title": "エンドツーエンドテスト（Playwright）"
      },
      "frontend": {
        "description": "フロントエンドテストは自動的にMock Service WorkerをAPIモッキングに使用：",
        "msw": {
          "automatic": "MSWは自動的にすべてのAPIリクエストをインターセプト",
          "description": "フロントエンドテスト実行時：",
          "isolation": "各テストは完全に分離して実行",
          "logging": "リクエストログはコンソール出力に表示",
          "realistic": "リアルなAPIレスポンスが自動的に提供",
          "title": "MSWの動作"
        },
        "title": "フロントエンドテスト（TypeScript/Vitest with MSW）"
      },
      "title": "テスト実行"
    },
    "subtitle": "ユニットテスト、統合テスト、Playwrightによるエンドツーエンドテストを含むSysManageサーバーの包括的なテスト戦略。",
    "title": "テスト"
  },
  "common": {
    "back_to_top": "トップに戻る",
    "configuration": "設定",
    "documentation": "ドキュメント",
    "download": "ダウンロード",
    "features": "機能",
    "github": "GitHub",
    "installation": "インストール",
    "learn_more": "詳細を学ぶ",
    "next": "次へ",
    "overview": "概要",
    "previous": "前へ",
    "read_more": "詳細を読む",
    "security": "セキュリティ",
    "troubleshooting": "トラブルシューティング"
  },
  "administration": {
    "host_management": {
      "agent_deployment": "Agent Deployment",
      "agent_lifecycle_management": "Agent Lifecycle Management",
      "agent_troubleshooting": "Agent Troubleshooting",
      "agent_updates": "Agent Updates",
      "approval_criteria": "Approval Criteria",
      "approval_workflow": "Approval Workflow",
      "automation_integration": "Automation Integration",
      "available_bulk_operations": "Available Bulk Operations",
      "best_practices": "Host Management Best Practices",
      "bulk_operation_process": "Bulk Operation Process",
      "bulk_operations": "Bulk Operations",
      "cloud_integration": "Cloud Integration",
      "collected_information": "Collected Information",
      "common_issues": "一般的な問題",
      "common_tag_categories": "Common Tag Categories",
      "configuration_management": "Configuration Management",
      "creating_host_groups": "Creating Host Groups",
      "deployment_best_practices": "Deployment Best Practices",
      "deployment_methods": "Deployment Methods",
      "diagnostic_tools": "Diagnostic Tools",
      "dynamic_group_assignment": "Dynamic Group Assignment",
      "group_types": "Group Types",
      "hardware_inventory": "Hardware Inventory",
      "host_groups": "Host Groups",
      "host_organization": "Host Organization",
      "host_registration_approval": "Host Registration and Approval",
      "inventory_management": "Infrastructure Inventory Management",
      "inventory_reports": "Inventory Reports",
      "key_concepts": "Key Concepts",
      "mass_actions": "Mass Management Actions",
      "operational_practices": "Operational Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "overview": "概要",
      "registration_process": "Registration Process",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "security_practices": "Security Best Practices",
      "software_inventory": "Software Inventory",
      "software_reports": "Software Reports",
      "software_tracking": "Software Tracking",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "tag_management": "Tag Management",
      "tagging_metadata": "Tagging and Metadata",
      "title": "ホスト管理",
      "update_process": "Update Process",
      "update_strategy": "Update Strategy"
    },
    "monitoring": {
      "access_control": "Access Control",
      "agent_performance": "Agent Performance",
      "alert_configuration": "Alert Configuration",
      "alert_design": "Alert Design Best Practices",
      "alert_suppression": "Alert Suppression",
      "alert_types": "Alert Types",
      "alerting_system": "Alerting System",
      "api_integration": "API Integration",
      "application_dashboards": "Application Dashboards",
      "application_service_metrics": "Application and Service Metrics",
      "channel_configuration": "Channel Configuration",
      "collection_intervals": "Collection Intervals",
      "collection_optimization": "Collection Optimization",
      "core_system_checks": "Core System Checks",
      "cpu_metrics": "CPU Metrics",
      "custom_health_checks": "Custom Health Checks",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_customization": "Dashboard Customization",
      "dashboard_design": "Dashboard Design Best Practices",
      "dashboard_types": "Dashboard Types",
      "data_retention": "Data Retention Policies",
      "database_monitoring": "Database Monitoring",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "executive_dashboards": "Executive Dashboards",
      "health_checks": "Health Check Configuration",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "layout_options": "Layout Options",
      "memory_metrics": "Memory Metrics",
      "metrics_collection": "Metrics Collection",
      "monitoring_best_practices": "Monitoring Best Practices",
      "monitoring_capabilities": "Monitoring Capabilities",
      "network_metrics": "Network Metrics",
      "notification_channels": "Notification Channels",
      "operational_practices": "Operational Best Practices",
      "operations_dashboards": "Operations Dashboards",
      "overview": "概要",
      "performance_optimization": "Monitoring Performance Optimization",
      "retention_strategies": "Retention Strategies",
      "service_health_checks": "Service Health Checks",
      "service_monitoring": "Service Monitoring",
      "storage_metrics": "Storage Metrics",
      "storage_optimization": "Storage Optimization",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "supported_channels": "Supported Channels",
      "system_health": "System Health Checks",
      "system_performance_metrics": "System Performance Metrics",
      "threshold_configuration": "Threshold Configuration",
      "title": "モニタリングとアラート",
      "web_server_monitoring": "Web Server Monitoring",
      "widget_types": "Widget Types"
    },
    "subtitle": "Comprehensive system administration guides and procedures",
    "title": "Administration",
    "user_management": {
      "account_deactivation": "Account Deactivation",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deletion": "Account Deletion",
      "account_security": "Account Security",
      "active_session_monitoring": "Active Session Monitoring",
      "administrative_updates": "Administrative Updates",
      "administrator": "Administrator",
      "api_example": "API Example",
      "auditor": "Auditor",
      "authentication_methods": "Authentication Methods",
      "authentication_security": "Authentication Security",
      "built_in_roles": "Built-in Roles",
      "common_user_workflows": "Common User Management Workflows",
      "compliance_considerations": "Compliance Considerations",
      "creating_custom_roles": "Creating Custom Roles",
      "creating_user_accounts": "Creating User Accounts",
      "custom_roles": "Custom Roles",
      "employee_offboarding": "Employee Offboarding",
      "external_authentication": "External Authentication",
      "integration_issues": "Integration Issues",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "local_authentication": "Local Authentication",
      "login_problems": "Login Problems",
      "mfa_configuration": "MFA Configuration",
      "modifying_user_accounts": "Modifying User Accounts",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "new_employee_onboarding": "New Employee Onboarding",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "operator": "Operator",
      "overview": "概要",
      "password_policy_configuration": "Password Policy Configuration",
      "permission_issues": "Permission Issues",
      "permission_matrix": "Permission Matrix",
      "profile_updates": "Profile Updates",
      "role_change_process": "Role Change Process",
      "roles_permissions": "Roles and Permissions",
      "saml_integration": "SAML 2.0 Integration",
      "security_best_practices": "Security Best Practices",
      "security_incident_response": "Security Incident Response",
      "session_configuration": "Session Configuration",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "supported_mfa_methods": "Supported MFA Methods",
      "title": "ユーザー管理",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "user_account_management": "User Account Management",
      "viewer": "Viewer",
      "web_interface": "Web Interface"
    },
    "grafana_setup": {
      "title": "Grafana統合セットアップ",
      "subtitle": "OpenTelemetryを使用した高度なメトリクスの視覚化と監視のためにSysManageをGrafanaと統合するための完全ガイド。",
      "overview": "概要",
      "integration_benefits": "統合の利点",
      "architecture_overview": "アーキテクチャの概要",
      "prerequisites": "前提条件",
      "grafana_server_requirements": "Grafanaサーバー要件",
      "network_connectivity": "ネットワーク接続",
      "required_ports": "必要なポート",
      "installing_grafana_alloy": "Grafana Alloyのインストール",
      "repository_setup": "リポジトリのセットアップ",
      "debian_ubuntu": "Debian/Ubuntu",
      "rhel_centos": "RHEL/CentOS",
      "package_installation": "パッケージのインストール",
      "service_enablement": "サービスの有効化",
      "configuring_alloy_otlp": "OTLPメトリクスを受信するためのAlloyの構成",
      "config_file_location": "構成ファイルの場所",
      "otlp_receiver_setup": "OTLPレシーバーのセットアップ",
      "receiver_configuration": "レシーバーの構成",
      "batch_processor": "バッチプロセッサ",
      "batch_processor_configuration": "バッチプロセッサの構成",
      "prometheus_exporter": "Prometheusエクスポーター",
      "exporter_configuration": "エクスポーターの構成",
      "remote_write_config": "ローカルPrometheusへのリモート書き込み",
      "remote_write_configuration": "リモート書き込み構成",
      "complete_config_example": "完全な構成例",
      "configuring_prometheus": "リモート書き込み用のPrometheusの構成",
      "prometheus_config_description": "PrometheusはGrafana Alloyからのリモート書き込みリクエストを受け入れるように構成する必要があります。これにはリモート書き込みレシーバー機能を有効にする必要があります。",
      "enable_remote_write": "リモート書き込みレシーバーを有効にする",
      "enable_remote_write_description": "Prometheus systemdサービスファイルを編集して--web.enable-remote-write-receiverフラグを追加します:",
      "apply_prometheus_changes": "構成変更を適用",
      "warning": "警告",
      "prometheus_warning": "--web.enable-remote-write-receiverフラグがない場合、AlloyはPrometheusにメトリクスを書き込もうとすると\"404 Not Found\"エラーを受け取ります。これは必須の構成手順です。",
      "restart_alloy_after_prometheus": "Prometheus構成後にAlloyを再起動",
      "restart_alloy_description": "Prometheusを構成する前にAlloyがすでに実行されていてエラーが発生していた場合は、再試行バックオフ状態をクリアするために再起動してください:",
      "enabling_grafana_integration": "SysManageでのGrafana統合の有効化",
      "web_ui_settings": "Web UI設定",
      "accessing_settings": "統合設定へのアクセス",
      "providing_grafana_url": "Grafana URLの提供",
      "url_format": "URL形式",
      "testing_connection": "接続のテスト",
      "deploying_opentelemetry": "管理対象ホストへのOpenTelemetryのデプロイ",
      "using_deploy_button": "OpenTelemetryデプロイボタンの使用",
      "deployment_process": "デプロイプロセス",
      "automatic_configuration": "自動構成",
      "service_status_monitoring": "サービスステータスの監視",
      "verifying_deployment": "デプロイの検証",
      "verifying_telemetry_flow": "テレメトリフローの検証",
      "checking_collector_logs": "コレクターログの確認",
      "log_locations": "ログの場所",
      "log_interpretation": "ログの解釈",
      "viewing_metrics_grafana": "Grafanaでのメトリクスの表示",
      "creating_dashboards": "ダッシュボードの作成",
      "exploring_metrics": "メトリクスの探索",
      "sample_queries": "Prometheusクエリの例",
      "troubleshooting": "一般的な問題のトラブルシューティング",
      "connection_issues": "接続の問題",
      "alloy_not_receiving_metrics": "Alloyがメトリクスを受信しない",
      "metrics_not_appearing_grafana": "メトリクスがGrafanaに表示されない",
      "collector_service_issues": "OpenTelemetryコレクターサービスの問題",
      "performance_issues": "パフォーマンスの問題",
      "security_considerations": "セキュリティに関する考慮事項",
      "tls_configuration": "TLS構成",
      "authentication": "認証",
      "network_security": "ネットワークセキュリティ",
      "best_practices": "ベストプラクティス",
      "deployment_strategy": "デプロイ戦略",
      "monitoring_setup": "監視セットアップのベストプラクティス",
      "maintenance": "メンテナンスと更新"
    },
    "third_party_repositories": {
      "adding": {
        "examples": {
          "chocolatey_private": "Chocolatey Private Repository Example",
          "freebsd_custom": "FreeBSD Custom Repository Example",
          "homebrew_tap": "Homebrew Tap Example",
          "rhel_epel": "RHEL EPEL Example",
          "title": "Repository Configuration Examples",
          "ubuntu_ppa": "Ubuntu PPA Example",
          "ubuntu_ppa_gpg": "Ubuntu Ppa Gpg"
        },
        "title": "Adding Third-Party Repositories",
        "web_interface": {
          "automatic_detection": "Automatic OS Detection",
          "automatic_detection_desc": "When you add a repository for a specific operating system (e.g., Ubuntu 24.04), SysManage automatically:",
          "detection_feature1": "Identifies all hosts running that OS version",
          "detection_feature2": "Sends repository configuration to matching agents",
          "detection_feature3": "Imports GPG keys if provided",
          "detection_feature4": "Updates package cache",
          "detection_feature5": "Reports success/failure for each host",
          "step1": "Navigate to Settings → Third-Party Repositories",
          "step2": "Select the target operating system from the dropdown",
          "step3": "Enter the repository configuration (format varies by OS)",
          "step4": "Optionally provide GPG key URL or content (for Linux systems)",
          "step5": "Review the configuration in the preview pane",
          "step6": "Click \"Add Repository\" to apply to all compatible hosts",
          "step_by_step": "Step-by-Step Process",
          "title": "Using the Web Interface"
        }
      },
      "api": {
        "add_repository": "Add Repository",
        "automation": {
          "bash_script": "Bash Script Example",
          "title": "Automation Examples"
        },
        "endpoints": {
          "title": "REST API Endpoints"
        },
        "list_repositories": "List Repositories",
        "remove_repository": "Remove Repository",
        "title": "API Integration"
      },
      "best_practices": {
        "organizational": {
          "approval_workflow": "Approval Workflow:",
          "approval_workflow_desc": "Require manager approval before adding repositories",
          "documentation": "Documentation:",
          "documentation_desc": "Maintain a registry of approved repositories and their purposes",
          "periodic_review": "Periodic Review:",
          "periodic_review_desc": "Quarterly reviews of all third-party repositories",
          "testing_procedure": "Testing Procedure:",
          "testing_procedure_desc": "Establish testing protocols for new repositories",
          "title": "Organizational Best Practices",
          "version_control": "Version Control:",
          "version_control_desc": "Track repository configurations in version control systems"
        },
        "technical": {
          "backup_keys": "Backup Keys:",
          "backup_keys_desc": "Maintain offline backups of GPG keys",
          "mirror_repos": "Mirror Repositories:",
          "mirror_repos_desc": "Host internal mirrors of critical third-party repositories",
          "monitor_changes": "Monitor Changes:",
          "monitor_changes_desc": "Set up alerts for repository configuration changes",
          "pin_versions": "Pin Versions:",
          "pin_versions_desc": "Use version-specific repository URLs where possible",
          "staged_rollout": "Staged Rollout:",
          "staged_rollout_desc": "Deploy to dev → test → production environments sequentially",
          "title": "Technical Best Practices"
        },
        "title": "Best Practices"
      },
      "database": {
        "field_added_by": "Administrator who added the repository",
        "field_descriptions": "Field Descriptions",
        "field_gpg_key_content": "GPG key content (alternative to URL)",
        "field_gpg_key_url": "URL to GPG signing key (for verification)",
        "field_os_name": "Target operating system name",
        "field_os_version": "Specific OS version",
        "field_repository_config": "Complete repository configuration text",
        "table_description": "The",
        "table_title": "Third-Party Repositories Table",
        "title": "Database Schema"
      },
      "management": {
        "removing": {
          "description": "To remove a third-party repository:",
          "step1": "Locate the repository in the list",
          "step2": "Click the \"Remove\" button",
          "step3": "Confirm the removal in the dialog",
          "step4": "SysManage removes the configuration from all affected hosts",
          "step5": "Package cache is updated on each host",
          "title": "Removing Repositories",
          "warning": "Warning"
        },
        "title": "Repository Management",
        "updating": {
          "description": "To modify an existing repository configuration:",
          "note": "SysManage currently does not support in-place editing of repository configurations to prevent accidental changes across the infrastructure.",
          "step1": "Remove the old repository configuration",
          "step2": "Add the new configuration with updated settings",
          "title": "Updating Repository Configurations"
        },
        "viewing": {
          "configuration_preview": "Configuration Preview:",
          "configuration_preview_desc": "View full repository configuration",
          "description": "The Third-Party Repositories page displays all configured repositories organized by operating system:",
          "host_count": "Host Count:",
          "host_count_desc": "Number of hosts using this repository",
          "metadata": "Metadata:",
          "metadata_desc": "Added by user, timestamp, GPG key status",
          "os_grouping": "OS Grouping:",
          "os_grouping_desc": "Repositories grouped by target OS (Ubuntu 24.04, RHEL 9, etc.)",
          "title": "Viewing Configured Repositories"
        }
      },
      "overview": {
        "description": "SysManage provides centralized management of third-party package repositories across multiple operating systems. This feature allows administrators to add, configure, and manage additional software sources for all supported platforms except OpenBSD, which by design does not support third-party repositories.",
        "feature_automatic_detection_desc": "OS-specific repository format and GPG key handling",
        "feature_automatic_detection_title": "Automatic Detection:",
        "feature_centralized_desc": "Manage repositories across entire fleet from single interface",
        "feature_centralized_title": "Centralized Management:",
        "feature_cross_platform_desc": "Manage repositories on Debian, Ubuntu, RHEL, CentOS, Fedora, SUSE, FreeBSD, NetBSD, Windows, and macOS",
        "feature_cross_platform_title": "Cross-Platform Support:",
        "feature_gpg_key_desc": "Automated GPG key import and verification",
        "feature_gpg_key_title": "GPG Key Management:",
        "feature_user_attribution_desc": "Track which administrator added each repository",
        "feature_user_attribution_title": "User Attribution:",
        "feature_validation_desc": "Syntax validation and confirmation dialogs",
        "feature_validation_title": "Validation & Safety:",
        "key_features": "Key Features",
        "title": "Overview"
      },
      "related_api": "Third-Party Repositories API →",
      "related_docs": "Related Documentation",
      "related_host_management": "Host Management →",
      "related_package_management": "Package Management →",
      "security": {
        "best_practices": {
          "audit_regularly": "Audit Regularly:",
          "audit_regularly_desc": "Review configured repositories periodically",
          "document_purpose": "Document Purpose:",
          "document_purpose_desc": "Maintain documentation of why each repository was added",
          "gpg_keys": "Use GPG Keys:",
          "gpg_keys_desc": "Always provide GPG keys for package verification on Linux systems",
          "https": "HTTPS Required:",
          "https_desc": "Use HTTPS repository URLs to prevent man-in-the-middle attacks",
          "test_first": "Test First:",
          "test_first_desc": "Test new repositories on non-production systems first",
          "title": "Best Practices",
          "verify_sources": "Verify Sources:",
          "verify_sources_desc": "Only add repositories from trusted, verified sources"
        },
        "compliance": {
          "approval_process": "Establish formal approval processes for adding repositories",
          "audit_trail": "Maintain audit trails of repository additions and removals",
          "description": "When managing third-party repositories in regulated environments:",
          "license_compliance": "Verify license compliance for software from third-party sources",
          "risk_assessment": "Perform security risk assessments before adding new sources",
          "title": "Compliance Considerations",
          "vendor_support": "Document vendor support implications of third-party software"
        },
        "title": "Security Considerations",
        "warnings": {
          "abandoned_repos": "Abandoned Repos",
          "http_repos": "Http Repos",
          "malicious_packages": "Malicious Packages",
          "title": "Security Warnings",
          "untrusted_keys": "Untrusted Keys"
        }
      },
      "subtitle": "Comprehensive guide to managing third-party package repositories across your infrastructure for Debian, Ubuntu, RHEL-based, SUSE-based, FreeBSD, NetBSD, Windows, and macOS systems.",
      "supported_systems": {
        "debian_ubuntu": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Imported via",
          "repository_format": "Repository Format:",
          "storage_location": "Storage Location:",
          "title": "Debian & Ubuntu",
          "update_command": "Update Command:"
        },
        "freebsd": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Package signature verification via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "Repository URL configuration",
          "storage_location": "Storage Location:",
          "title": "FreeBSD",
          "update_command": "Update Command:"
        },
        "macos": {
          "add_command": "Add Command:",
          "authentication": "Authentication:",
          "authentication_desc": "Git-based authentication for private taps",
          "repository_format": "Repository Format:",
          "repository_format_desc": "Tap URLs (GitHub or custom)",
          "title": "macOS (Homebrew)",
          "update_command": "Update Command:"
        },
        "netbsd": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Package signature verification via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "environment variable",
          "storage_location": "Storage Location:",
          "title": "NetBSD",
          "update_command": "Update Command:"
        },
        "openbsd": {
          "description": "OpenBSD does not support third-party package repositories by design. The OpenBSD package system exclusively uses official release-specific repositories maintained by the OpenBSD project. This is a deliberate security and stability design decision by the OpenBSD team.",
          "title": "OpenBSD - Not Supported"
        },
        "rhel_based": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Imported via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "files with INI-style configuration",
          "storage_location": "Storage Location:",
          "title": "RHEL-Based (CentOS, Fedora, Rocky, AlmaLinux)",
          "update_command": "Update Command:",
          "update_command_desc": "or"
        },
        "suse_based": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Imported via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "files managed via",
          "storage_location": "Storage Location:",
          "title": "SUSE-Based (openSUSE, SLES)",
          "update_command": "Update Command:"
        },
        "title": "Supported Operating Systems",
        "windows": {
          "add_command": "Add Command:",
          "authentication": "Authentication:",
          "authentication_desc": "Supports username/password and API key authentication",
          "repository_format": "Repository Format:",
          "repository_format_desc": "Repository URL or local path",
          "ssl_verification": "SSL Verification:",
          "ssl_verification_desc": "Optional certificate validation bypass",
          "title": "Windows (Chocolatey)"
        }
      },
      "title": "Third-Party Repository Management",
      "troubleshooting": {
        "common_issues": {
          "title": "Common Issues and Solutions"
        },
        "diagnostic_commands": {
          "debian_ubuntu": "Debian/Ubuntu",
          "description": "Run these commands on target hosts to diagnose repository issues:",
          "freebsd": "FreeBSD",
          "rhel_based": "RHEL-Based Systems",
          "title": "Diagnostic Commands"
        },
        "gpg_key_import_failed": "GPG Key Import Failed",
        "gpg_key_import_failed_solution1": "Verify GPG key URL is accessible from target hosts",
        "gpg_key_import_failed_solution2": "Check network connectivity and firewall rules",
        "gpg_key_import_failed_solution3": "Try providing GPG key content directly instead of URL",
        "gpg_key_import_failed_solution4": "Verify key format is correct for the operating system",
        "gpg_key_import_failed_solutions": "Gpg Key Import Failed Solutions",
        "gpg_key_import_failed_symptoms": "Gpg Key Import Failed Symptoms",
        "hosts_not_receiving": "Some Hosts Not Receiving Repository Configuration",
        "hosts_not_receiving_solution1": "Verify hosts are online and connected to SysManage",
        "hosts_not_receiving_solution2": "Check OS name and version match exactly",
        "hosts_not_receiving_solution3": "Review WebSocket connection status for affected hosts",
        "hosts_not_receiving_solution4": "Check for agent permission issues (root/administrator required)",
        "hosts_not_receiving_solutions": "Hosts Not Receiving Solutions",
        "hosts_not_receiving_symptoms": "Hosts Not Receiving Symptoms",
        "permission_denied": "Permission Denied Errors",
        "permission_denied_solution1": "Ensure SysManage agent is running with elevated privileges",
        "permission_denied_solution2": "Check file permissions on repository configuration directories",
        "permission_denied_solution3": "Verify SELinux/AppArmor policies allow repository modifications",
        "permission_denied_solutions": "Permission Denied Solutions",
        "permission_denied_symptoms": "Permission Denied Symptoms",
        "repository_not_found": "Repository Not Found After Adding",
        "repository_not_found_solution1": "Verify repository URL is correct and accessible",
        "repository_not_found_solution2": "Check OS version matches repository configuration",
        "repository_not_found_solution3": "Ensure package cache was updated on target hosts",
        "repository_not_found_solution4": "Review agent logs for error messages",
        "repository_not_found_solutions": "Repository Not Found Solutions",
        "repository_not_found_symptoms": "Repository Not Found Symptoms",
        "title": "Troubleshooting"
      }
    }
  },
  "agent_docs": {
    "architecture": {
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "description": "The agent operates as a persistent service with the following workflow:",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity",
      "title": "Agent Architecture"
    },
    "configuration": {
      "auto_discovery": "Auto-discovery setup (recommended)",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "link": "Configuration Guide →",
      "logging": "Logging and internationalization",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "title": "⚙️ Configuration"
    },
    "cross_platform": {
      "bsd": "BSD-specific considerations",
      "description": "Platform-specific features, package managers, and system integration details.",
      "link": "Cross-Platform Guide →",
      "linux": "Linux distributions and package managers",
      "macos": "macOS launchd configuration",
      "title": "🌍 Cross-Platform Support",
      "windows": "Windows service integration"
    },
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms.",
      "title": "Agent Documentation"
    },
    "installation": {
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "link": "Installation Guide →",
      "methods": "Installation methods (source, packages)",
      "prerequisites": "Prerequisites and system requirements",
      "service": "Service configuration",
      "title": "🚀 Installation",
      "venv": "Virtual environment setup"
    },
    "navigation": {
      "api": "API Reference →",
      "server": "← Server Documentation",
      "title": "Quick Navigation"
    },
    "overview": {
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "features_title": "Key Features",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "platform_freebsd": "🔒 FreeBSD",
      "platform_linux": "🐧 Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_macos": "🍎 macOS (Intel and Apple Silicon)",
      "platform_openbsd": "🛡️ OpenBSD",
      "platform_windows": "🪟 Windows (10, 11, Server 2019/2022)",
      "platforms_title": "Supported Platforms",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "title": "概要",
      "platform_netbsd": "🔧 NetBSD"
    },
    "privileged": {
      "cross_platform": "Cross-platform privileged execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "link": "Privileged Execution →",
      "scripts": "Automated privilege scripts",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "title": "🔐 Privileged Execution"
    },
    "section_title": "Agent",
    "security": {
      "certificates": "Certificate management",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) authentication",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "title": "🔒 Security"
    },
    "title": "Agent Documentation - SysManage",
    "troubleshooting": {
      "connection": "Connection and network issues",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "link": "Troubleshooting Guide →",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "title": "🔧 Troubleshooting"
    }
  },
  "agent_installation": {
    "breadcrumb": {
      "agent": "エージェント",
      "documentation": "ドキュメント",
      "installation": "インストール"
    },
    "configuration": {
      "auto_discovery": {
        "agent_ports": "エージェントポート (Outbound):",
        "description": "SysManage エージェント includes automatic server discovery that eliminates manual configuration:",
        "how_it_works": "🔍 How 自動-Discovery Works",
        "network_ports": "🌐 必須 ネットワークポート",
        "step1": "いいえ 構成 必須:",
        "step1_desc": "If no configuration file exists, the agent automatically attempts to discover servers",
        "step2": "ネットワーク Scanning:",
        "step2_desc": "Sends UDP broadcast discovery requests and listens for server announcements",
        "step3": "サーバー Evaluation:",
        "step3_desc": "Uses scoring system (SSL preference, local network preference)",
        "step4": "自動matic 構成:",
        "step4_desc": "Writes complete configuration file and starts normal operation",
        "tcp_6443": "TCP 6443",
        "tcp_6443_desc": "(or server port) - HTTPS connections to discovered server",
        "title": "自動-Discovery (推奨)",
        "udp_31337": "UDP 31337",
        "udp_31337_desc": "Send discovery requests to servers",
        "udp_31338": "UDP 31338",
        "udp_31338_desc": "Listen for server announcements"
      },
      "manual": {
        "create_text": "Or create configuration file manually at:",
        "generator_link": "構成ビルダー Tool",
        "generator_suffix": "to generate customized agent configuration files for your environment.",
        "generator_text": "Use the interactive",
        "generator_title": "💡 構成 Generator 利用可能",
        "linux_path": "Linux/macOS/BSD:",
        "title": "手動 構成 (Alternative)",
        "windows_path": "Windows:"
      },
      "title": "構成"
    },
    "description": "Linux、Windows、macOS、FreeBSD、OpenBSD、NetBSDプラットフォームにおけるSysManageエージェントの完全インストールガイド。",
    "header": {
      "subtitle": "Complete step-by-step installation guide for deploying SysManage agents across all supported platforms.",
      "title": "エージェント インストール Guide"
    },
    "installation": {
      "method1": {
        "title": "方法2: ソースから"
      },
      "method2": {
        "title": "方法3: 直接インストール"
      },
      "title": "インストール Methods",
      "apt": {
        "title": "📦 方法1: APTリポジトリ (Ubuntu/Debian - 推奨)",
        "supported": "サポートされているプラットフォーム:",
        "platforms_ubuntu_2204": "Ubuntu 22.04 LTS 以降",
        "platforms_debian_11": "Debian 11 以降",
        "platforms_note": "パッケージには自己完結型の virtualenv にすべての Python 依存関係が含まれているため、Python 3.10 以上を備えた任意の Ubuntu/Debian バージョンで動作します。",
        "quick_start": "クイックインストール",
        "benefits_title": "✨ APT インストールのメリット",
        "automatic": "自動更新:",
        "automatic_desc": "標準の apt upgrade で新しいバージョンを取得",
        "dependencies": "依存関係管理:",
        "dependencies_desc": "すべての Python 依存関係がパッケージに含まれています",
        "systemd": "Systemd 統合:",
        "systemd_desc": "サービスが自動的に構成され、有効化されます",
        "user": "ユーザーと権限:",
        "user_desc": "システムユーザーと sudoers が自動的に構成されます",
        "directories": "ディレクトリ構造:",
        "directories_desc": "設定、ログ、データのディレクトリが自動的に作成されます",
        "whats_installed": "📂 インストールされるもの",
        "component": "コンポーネント",
        "location": "場所",
        "application": "アプリケーション",
        "config_dir": "構成ディレクトリ",
        "main_config": "メイン構成ファイル",
        "database": "データベース",
        "logs": "ログ",
        "systemd_service": "Systemd サービス",
        "sudoers": "Sudoers ファイル",
        "version_management": "🔄 バージョン管理",
        "uninstall": "🗑️ アンインストール",
        "security_note": "🔒 セキュリティに関する注意",
        "security_text": "パッケージが GPG 署名されていないため、リポジトリは現在 [trusted=yes] を使用しています。本番環境では、将来のリリースで GPG 署名が追加されます。パッケージは GitHub Pages から HTTPS 経由で提供され、トランスポートレベルのセキュリティを提供します。"
      },
      "rpm": {
        "title": "📦 RPM方式: YUM/DNFリポジトリ (RHEL/CentOS/Fedora/Rocky/AlmaLinux - 推奨)",
        "supported": "サポートされているプラットフォーム:",
        "platforms_rhel9": "RHEL 9 / CentOS Stream 9 / Rocky 9 / AlmaLinux 9 - Python 3.9+ (2022+)",
        "platforms_rhel8": "RHEL 8 / CentOS 8 / Rocky 8 / AlmaLinux 8 - Python 3.11 via AppStream (2019+)",
        "platforms_fedora": "Fedora 38+ - Python 3.11+ (2023+)",
        "platforms_note": "パッケージには自己完結型の virtualenv にすべての Python 依存関係が含まれているため、Python 3.10 以上を備えた任意の Red Hat ベースのディストリビューションで動作します。",
        "quick_start_el9": "クイックインストール - EL9 (RHEL 9, Rocky 9, AlmaLinux 9, CentOS Stream 9)",
        "quick_start_el8": "クイックインストール - EL8 (RHEL 8, Rocky 8, AlmaLinux 8)",
        "quick_start_fedora": "クイックインストール - Fedora 38+",
        "benefits_title": "✨ RPM インストールのメリット",
        "automatic": "自動更新:",
        "automatic_desc": "標準の dnf upgrade / yum upgrade で新しいバージョンを取得",
        "dependencies": "依存関係管理:",
        "dependencies_desc": "すべての Python 依存関係がパッケージに含まれています",
        "systemd": "Systemd 統合:",
        "systemd_desc": "サービスが自動的に構成され、有効化されます",
        "user": "ユーザーと権限:",
        "user_desc": "システムユーザーと sudoers が自動的に構成され、DNF/YUM、firewalld、SELinux の権限が付与されます",
        "directories": "ディレクトリ構造:",
        "directories_desc": "設定、ログ、データのディレクトリが自動的に作成されます",
        "whats_installed": "📂 インストールされるもの",
        "component": "コンポーネント",
        "location": "場所",
        "application": "アプリケーション",
        "config_dir": "構成ディレクトリ",
        "main_config": "メイン構成ファイル",
        "database": "データベース",
        "logs": "ログ",
        "systemd_service": "Systemd サービス",
        "sudoers": "Sudoers ファイル",
        "version_management": "🔄 バージョン管理",
        "uninstall": "🗑️ アンインストール",
        "security_note": "🔒 セキュリティに関する注意",
        "security_text": "パッケージが GPG 署名されていないため、リポジトリは現在 gpgcheck=0 を使用しています。本番環境では、将来のリリースで GPG 署名が追加されます。パッケージは GitHub Pages から HTTPS 経由で提供され、トランスポートレベルのセキュリティを提供します。"
      },
      "macos": {
        "tab": "macOS"
      },
      "macos_pkg": {
        "title": "📦 パッケージインストーラー (macOS - 推奨)",
        "supported": "サポートされているプラットフォーム:",
        "platforms_bigsur": "macOS 11.0 (Big Sur) 以降",
        "platforms_apple_silicon": "Apple Silicon (ARM64) ネイティブ",
        "platforms_intel": "Intel (x86_64) 互換",
        "platforms_note": "パッケージはシステムPython (3.9+) を使用し、アーキテクチャを自動検出してネイティブバイナリをインストールします。",
        "quick_start": "クイックインストール",
        "benefits_title": "✨ パッケージインストールの利点",
        "automatic": "自動起動:",
        "automatic_desc": "ブート時の自動起動のためにLaunchDaemonでサービスが構成されています",
        "dependencies": "依存関係管理:",
        "dependencies_desc": "すべてのPython依存関係が仮想環境に含まれています",
        "launchd": "LaunchDaemon統合:",
        "launchd_desc": "サービスが自動的に構成およびロードされます",
        "user": "ユーザーと権限:",
        "user_desc": "適切なシステム権限でrootとして実行されます",
        "directories": "ディレクトリ構造:",
        "directories_desc": "構成、ログ、データディレクトリが自動的に作成されます",
        "architecture": "アーキテクチャ検出:",
        "architecture_desc": "ARM64またはx86_64ネイティブバイナリを自動的にインストールします",
        "whats_installed": "📂 インストールされる内容",
        "component": "コンポーネント",
        "location": "場所",
        "application": "アプリケーション",
        "config_dir": "構成ディレクトリ",
        "main_config": "メイン構成ファイル",
        "example_config": "構成例",
        "database": "データベース",
        "logs": "ログ",
        "launchd_plist": "LaunchDaemon",
        "service_management": "🔧 サービス管理",
        "checksum_verify": "🔐 チェックサム検証",
        "uninstall": "🗑️ アンインストール"
      }
    },
    "navigation": {
      "next": "構成 Guide →",
      "prev": "← エージェント ドキュメント"
    },
    "openbsd_notes": {
      "description": "OpenBSD users require special attention to Rust installation:",
      "security_note_text": "The agent requires cryptography support for secure certificate-based authentication. Rust is mandatory for building these security packages. The run script automatically detects if Rust is available and uses appropriate installation methods.",
      "security_note_title": "🔐 セキュリティ 注記",
      "title": "OpenBSD-Specific インストール 注記s"
    },
    "permissions": {
      "certificate": {
        "linux_path": "Linux/macOS/BSD:",
        "title": "証明書 ストレージ",
        "windows_path": "Windows:"
      },
      "config": {
        "title": "構成 ファイル"
      },
      "dev_note_text": "During development and testing, the application automatically detects test environments and uses temporary directories to avoid permission issues.",
      "dev_note_title": "📝 開発 注記",
      "log": {
        "title": "ログ ディレクトリ"
      },
      "title": "必須 Directories and 権限s",
      "user": {
        "title": "サービス ユーザー アカウント"
      }
    },
    "prerequisites": {
      "centos": {
        "tab": "CentOS/RHEL",
        "title": "CentOS/RHEL/Fedora"
      },
      "freebsd": {
        "tab": "FreeBSD",
        "title": "FreeBSD"
      },
      "macos": {
        "tab": "macOS",
        "title": "macOS"
      },
      "netbsd": {
        "important_text": "Rust is absolutely required for building cryptography packages. The agent uses certificate-based authentication which requires cryptography support for security.",
        "important_title": "⚠️ 重要 for NetBSD",
        "tab": "NetBSD",
        "title": "NetBSD",
        "gcc14_required": "GCC 14が必要です：",
        "gcc14_reason": "NetBSDのベースシステムGCC 10.5は、grpcioおよび他のパッケージに必要なC++17機能を適切にサポートしていません。GCC 14をインストールすると、適切なC++17サポートが確保されます。",
        "rust_required": "Rustが必要です：",
        "rust_reason": "エージェントは、セキュリティのために暗号化サポートを必要とする証明書ベースの認証を使用します。",
        "profile_note": "注意：",
        "profile_note_text": "BSDシステムでは、シェル環境をリロードするには<code>source ~/.profile</code>の代わりに<code>. ~/.profile</code>を使用してください。"
      },
      "openbsd": {
        "important_text": "Rust is absolutely required for building cryptography packages. The agent uses certificate-based authentication which requires cryptography support for security.",
        "important_title": "⚠️ 重要 for OpenBSD",
        "tab": "OpenBSD",
        "title": "OpenBSD"
      },
      "opensuse": {
        "leap_desc": "Uses stable packages, may need manual Rust installation",
        "leap_note": "openSUSE Leap:",
        "note_title": "📦 Package Manager 注記s",
        "python_desc": "Leap ships with Python 3.9+, Tumbleweed with latest stable",
        "python_note": "Python versions:",
        "tab": "openSUSE",
        "title": "openSUSE Leap/Tumbleweed",
        "tumbleweed_desc": "Rolling release, Rust available via zypper",
        "tumbleweed_note": "openSUSE Tumbleweed:"
      },
      "sles": {
        "firewall": "ファイアウォール:",
        "firewall_desc": "SuSEfirewall2 or firewalld may block agent ports",
        "note_title": "🏢 Enterprise Considerations",
        "selinux": "SELinux:",
        "selinux_desc": "May require policy adjustments if enabled",
        "sles12": "SLES 12:",
        "sles12_desc": "May require Software Collections (SCL) for newer Python",
        "sles15": "SLES 15:",
        "sles15_desc": "Python 3.6+ included, but 3.9+ recommended",
        "subscription": "Subscription:",
        "subscription_desc": "Some packages require active SLES subscription",
        "tab": "SLES",
        "title": "SUSE Linux Enterprise サーバー (SLES)"
      },
      "title": "プラットフォーム-Specific Prerequisites",
      "ubuntu": {
        "tab": "Ubuntu/Debian",
        "title": "Ubuntu 22.04 - 24.10"
      },
      "ubuntu25": {
        "note": "注記:",
        "note_text": "Ubuntu 25.04+ only ships with Python 3.13. You must build Python 3.12 from source:",
        "tab": "Ubuntu 25.04+",
        "title": "Ubuntu 25.04+ (Python 3.12 from Source)"
      },
      "windows": {
        "step1": {
          "avoid": "AVOID Python 3.13",
          "avoid_reason": "Package compatibility issues",
          "check_path": "Check \"Add Python to PATH\" during installation",
          "download": "ダウンロード from",
          "sqlite_included": "SQLite3 is included with Python on Windows",
          "title": "Python 3.9-3.12:"
        },
        "step2": {
          "download": "ダウンロード from",
          "instruction": "実行 rustup-init.exe and follow prompts",
          "title": "Rust:"
        },
        "step3": {
          "description": "Includes build tools needed for Python packages",
          "download": "ダウンロード from",
          "title": "Git for Windows:"
        },
        "step4": {
          "download": "ダウンロード",
          "title": "Windows ビルド Tools (if needed):"
        },
        "tab": "Windows",
        "title": "Windows"
      }
    },
    "requirements": {
      "network": {
        "description": "Outbound HTTPS access to SysManage サーバー",
        "ports": "いいえ inbound ports required",
        "required": "必須:",
        "title": "🌐 ネットワーク アクセス"
      },
      "os": {
        "description": "Cross-platform compatibility",
        "platforms": "Linux (Ubuntu, CentOS/RHEL, openSUSE, SLES), Windows, macOS, FreeBSD, OpenBSD, NetBSD",
        "supported": "サポートed:",
        "title": "💻 Operating システム"
      },
      "privileges": {
        "description": "管理者istrative rights for system management",
        "limitation": "Can run as regular user with limitations",
        "optional": "オプション:",
        "title": "🛡️ Privileges"
      },
      "python": {
        "note": "注記: Python 3.13 is NOT yet supported due to package compatibility",
        "required": "必須:",
        "title": "🐍 Python",
        "version": "3.9, 3.11, or 3.12"
      },
      "title": "システム Requirements"
    },
    "running": {
      "development": {
        "title": "開発 Mode"
      },
      "options": {
        "title": "Command Line オプション"
      },
      "title": "実行中 the エージェント"
    },
    "service": {
      "macos": {
        "create_text": "作成",
        "create_title": "作成 launchd service",
        "load_title": "負荷 the service",
        "tab": "macOS (launchd)"
      },
      "opensuse": {
        "apparmor": "AppArmor:",
        "apparmor_desc": "SUSE uses AppArmor instead of SELinux by default",
        "commands_title": "サービス management commands",
        "create_text": "作成",
        "firewall": "ファイアウォール:",
        "firewall_desc": "Open required ports via YaST or firewall-cmd",
        "logging": "ログging:",
        "logging_desc": "ログs available via journalctl or /var/log/messages",
        "note_title": "🏢 SUSE Enterprise 注記s",
        "selinux": "SELinux:",
        "selinux_desc": "May require setsebool or custom policies",
        "service_title": "openSUSE/SLES systemd service",
        "tab": "openSUSE/SLES"
      },
      "systemd": {
        "create_text": "作成",
        "create_title": "作成 systemd service file",
        "enable_title": "有効化 and start service",
        "tab": "Linux (systemd)"
      },
      "title": "サービス インストール",
      "windows": {
        "tab": "Windows サービス",
        "title": "Windows サービス インストール"
      }
    },
    "title": "エージェント インストール Guide - SysManage",
    "troubleshooting": {
      "connection": {
        "dns": "DNS resolution:",
        "server": "サーバー connectivity:",
        "ssl": "SSL certificate:",
        "title": "接続 イシューs"
      },
      "discovery": {
        "firewall": "Check firewall rules on both agent and server",
        "ports": "Ensure UDP ports 31337 and 31338 are accessible",
        "service": "Verify server discovery service is enabled",
        "title": "自動-Discovery イシューs"
      },
      "packages": {
        "crypto": "Cryptography build errors:",
        "crypto_desc": "Ensure Rust is installed and in PATH",
        "missing": "Missing dependencies:",
        "missing_desc": "インストール build tools and development libraries",
        "python313": "Python 3.13 compatibility:",
        "python313_desc": "Use Python 3.11 or 3.12 instead",
        "title": "Python Package イシューs"
      },
      "permission": {
        "check_log": "Check log file access:",
        "check_user": "Check agent user permissions:",
        "title": "権限 イシューs",
        "verify_file": "Verify file permissions:"
      },
      "title": "Troubleshooting"
    }
  },
  "api": {
    "authentication": {
      "authentication_flow": "Authentication Flow",
      "error_responses": "Error Responses",
      "example": "Example",
      "login": "Login",
      "overview": "概要",
      "password_reset": "Password Reset",
      "path_parameters": "Path Parameters",
      "refresh_token": "Refresh Token",
      "request_body": "Request Body",
      "reset_password": "Reset Password",
      "response": "Response",
      "security_best_practices": "Security Best Practices",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "title": "Authentication API",
      "token_expiration": "Token Expiration",
      "using_auth_tokens": "Using Authentication Tokens",
      "validate_reset_token": "Validate Reset Token"
    },
    "hosts": {
      "authentication_required": "Authentication Required",
      "bulk_operations": "Bulk Operations",
      "fleet_management": "Fleet Management",
      "hardware_system_info": "Hardware and System Information",
      "host_operations": "Host Operations",
      "important_notes": "Important Notes",
      "overview": "概要",
      "software_package_info": "Software and Package Information",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "title": "Host Management API"
    },
    "packages": {
      "important_notes": "Important Notes",
      "os_upgrades": "OS Upgrades",
      "overview": "概要",
      "package_cache_management": "Package Cache Management",
      "package_discovery": "Package Discovery",
      "package_installation": "Package Installation",
      "package_search": "Package Search",
      "package_updates": "Package Updates",
      "query_parameters": "Query Parameters",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "title": "Package Management API"
    },
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "title": "API リファレンス"
  },
  "api_docs": {
    "description": "Complete REST API documentation for integrating with SysManage.",
    "header": {
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically.",
      "title": "API リファレンス"
    },
    "overview": {
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features",
      "title": "概要"
    },
    "section_title": "API リファレンス",
    "title": "API Reference - SysManage"
  },
  "database_security": {
    "best_practices": {
      "backup": {
        "access_control": "Implement backup access controls",
        "encrypted": "Use encrypted database backups",
        "retention": "Follow data retention policies",
        "secure_storage": "Store backups in secure locations",
        "testing": "Regularly test backup restoration",
        "title": "💾 バックアップ and Recovery"
      },
      "maintenance": {
        "audit_logs": "Maintain comprehensive audit logs",
        "migration_testing": "テスト database migrations in staging",
        "patches": "Apply security patches promptly",
        "performance": "Monitor database performance and security metrics",
        "schema_review": "Review schema changes for security implications",
        "title": "🔧 Maintenance and 更新s"
      },
      "production": {
        "credentials": "Store database credentials securely",
        "encryption": "有効化 database encryption at rest",
        "monitoring": "Implement database activity monitoring",
        "network": "Restrict database network access",
        "ssl": "Use SSL/TLS for database connections",
        "title": "🏭 本番 デプロイメント"
      },
      "title": "データベースセキュリティ ベストプラクティス"
    },
    "breadcrumb": "データベースセキュリティ",
    "description": "Comprehensive database security documentation for SysManage including UUID-based primary keys, secure installation, and database hardening.",
    "examples": {
      "secure": "✅ Secure (UUID):",
      "vulnerable": "❌ Vulnerable (Sequential):"
    },
    "header": {
      "subtitle": "Advanced database security features including UUID-based primary keys, secure installation procedures, and database hardening techniques.",
      "title": "データベースセキュリティ"
    },
    "implementation": {
      "api_security": {
        "authorization": {
          "no_enumeration": "いいえ information disclosure even for invalid UUIDs",
          "rbac": "ロール-based access control applied to UUID-referenced resources",
          "resource_ownership": "リソース ownership validated before UUID resolution",
          "title": "認可 Checks"
        },
        "title": "API セキュリティ Considerations",
        "validation": {
          "format": "すべて UUID inputs are validated for proper format",
          "pydantic": "Pydantic models enforce UUID typing",
          "rejection": "Invalid UUIDs are immediately rejected",
          "title": "UUID Validation"
        }
      },
      "database_schema": {
        "description": "すべて primary keys in SysManage use UUID version 4 (random) for maximum security:",
        "example_title": "例 テーブル Definitions:",
        "title": "データベース スキーマ Design"
      },
      "title": "Implementation Details"
    },
    "migration": {
      "benefits": {
        "attack_surface": "Dramatically reduced attack surface",
        "compliance": "Enhanced regulatory compliance posture",
        "enumeration": "Eliminated ID enumeration vulnerabilities",
        "future_proof": "Future-proofed against sequential ID-based attacks",
        "information_disclosure": "Prevented information disclosure through predictable IDs",
        "title": "Post-マイグレーション セキュリティ Benefits"
      },
      "description": "SysManage has been fully migrated from sequential integer IDs to UUIDs using a comprehensive migration strategy.",
      "process": {
        "step1": {
          "description": "Alembic migrations converted all primary keys and foreign keys from integers to UUIDs",
          "title": "ステップ1: スキーマ マイグレーション"
        },
        "step2": {
          "description": "Existing data was migrated with new UUID identifiers while preserving relationships",
          "title": "ステップ2: Data マイグレーション"
        },
        "step3": {
          "description": "すべて API endpoints updated to handle UUID parameters and responses",
          "title": "ステップ3: API 更新s"
        },
        "step4": {
          "description": "Frontend components updated to work with UUID identifiers",
          "title": "ステップ4: Frontend 更新s"
        },
        "title": "マイグレーション プロセス"
      },
      "title": "マイグレーション from Sequential IDs"
    },
    "navigation": {
      "best_practices": "セキュリティ ベストプラクティス →",
      "security_docs": "← セキュリティ ドキュメント"
    },
    "secure_installation": {
      "description": "SysManage includes a mandatory secure installation script that must be run on new installations to establish proper security foundations.",
      "features": {
        "admin_user": {
          "no_defaults": "Prevents use of default or example credentials",
          "password_validation": "Enforces password complexity requirements",
          "secure_password": "Prompts for secure administrator password",
          "title": "👤 Initial 管理者 ユーザー Creation"
        },
        "config_hardening": {
          "file_permissions": "Sets restrictive file permissions (600)",
          "ownership": "Ensures proper file ownership",
          "title": "⚙️ 構成 ファイル Hardening",
          "validation": "Validates configuration security settings"
        },
        "jwt_security": {
          "entropy": "Uses high-entropy random data for token generation",
          "prevents_reuse": "Prevents credential reuse across installations",
          "title": "🔐 JWT セキュリティ トークン Generation",
          "unique_secret": "Generates cryptographically secure unique JWT secret"
        },
        "password_salt": {
          "rainbow_protection": "Prevents rainbow table attacks",
          "secure_hashing": "Enhances password hashing security",
          "title": "🧂 パスワード Salt Generation",
          "unique_salt": "作成s unique password salt for each installation"
        },
        "title": "セキュリティ 機能 Implemented"
      },
      "requirements": {
        "backup": "構成 backup:",
        "backup_desc": "バックアップ configuration file after script execution",
        "mandatory": "Mandatory execution:",
        "mandatory_desc": "The script MUST be run before first use",
        "no_defaults": "いいえ default credentials:",
        "no_defaults_desc": "システム will not function with default security tokens",
        "run_once": "実行 once only:",
        "run_once_desc": "Execute only once per installation",
        "title": "⚠️ セキュリティ Requirements"
      },
      "script_location": {
        "path": "scripts/sysmanage_secure_installation",
        "title": "Script Location"
      },
      "title": "セキュアインストール Script"
    },
    "title": "データベースセキュリティ - SysManage",
    "uuid_architecture": {
      "benefits": {
        "distributed": {
          "description": "UUIDs are globally unique, preventing ID conflicts in distributed systems and reducing attack surface in multi-tenant environments.",
          "title": "🌐 Distributed システム セキュリティ"
        },
        "enumeration": {
          "description": "Sequential IDs (1, 2, 3...) allow attackers to easily enumerate resources. UUIDs eliminate this vulnerability by using non-predictable identifiers.",
          "title": "🛡️ ID Enumeration Attack Prevention"
        },
        "gdpr": {
          "description": "UUIDs support data anonymization requirements by providing identifiers that cannot be easily correlated across systems.",
          "title": "📋 GDPR Compliance サポート"
        },
        "information_leakage": {
          "description": "Sequential IDs can reveal business metrics (number of users, hosts, etc.). UUIDs prevent this information disclosure.",
          "title": "🔒 情報rmation Leakage Prevention"
        },
        "privacy": {
          "description": "UUIDs provide non-correlatable identifiers that enhance user privacy and prevent cross-system tracking.",
          "title": "🕵️ Enhanced Privacy Protection"
        },
        "replay": {
          "description": "いいえn-sequential identifiers prevent attackers from predicting valid resource IDs for replay attacks or automated scanning.",
          "title": "🔄 Replay Attack Protection"
        },
        "title": "セキュリティ Benefits"
      },
      "description": "SysManage implements UUID-based primary keys across all database tables instead of traditional sequential integer IDs. This architectural decision provides significant security advantages and prevents common attack vectors.",
      "title": "UUID-Based Primary Key アーキテクチャ"
    }
  },
  "multi_os_cicd": {
    "benefit_1": "<strong>ゼロインフラストラクチャコスト:</strong> GitHubの無料ランナーを使用した完全なCI/CDパイプライン",
    "benefit_2": "<strong>マルチプラットフォーム優秀性:</strong> 3つの主要オペレーティングシステムでの同時テスト",
    "benefit_3": "<strong>フェイルファストアーキテクチャ:</strong> 即座の障害検出でコンピュートリソースを節約",
    "benefit_4": "<strong>エンタープライズ信頼性:</strong> 包括的な検証を伴う本番グレードテスト",
    "best_practices": {
      "automated_deployment": "自動デプロイメント",
      "branch_protection": "ブランチ保護規則",
      "compliance_reporting": "コンプライアンスレポート",
      "cost_desc": "プレミアムCI/CD機能の提供",
      "cost_savings": "$0/月",
      "cost_savings_label": "インフラストラクチャコスト",
      "cost_title": "💰 ゼロコストエンタープライズ利益",
      "coverage_label": "プラットフォームカバレッジ",
      "coverage_metric": "100%",
      "dependency_checking": "依存関係セキュリティ",
      "description": "SysManageのCI/CDパイプラインは<strong>業界リーディングベストプラクティス</strong>を実装します。",
      "enterprise_desc": "エンタープライズ開発ワークフロー統合",
      "enterprise_title": "🏢 エンタープライズ統合",
      "failure_detection": "障害検出",
      "github_runners": "GitHubホストランナー",
      "health_checks": "自動ヘルスチェック",
      "intelligent_caching": "インテリジェントキャッシュ",
      "matrix_efficiency": "マトリックス戦略効率",
      "performance_monitoring": "パフォーマンス監視",
      "reliability_desc": "本番グレード信頼性",
      "reliability_label": "パイプライン信頼性",
      "reliability_metric": "99.9%",
      "reliability_title": "🛡️ 信頼性と監視",
      "required_checks": "必須ステータスチェック",
      "resource_optimization": "リソース最適化",
      "retry_logic": "再試行ロジック",
      "rollback_capability": "ロールバック機能",
      "secret_management": "安全なシークレット管理",
      "security_desc": "エンタープライズグレードセキュリティ",
      "security_title": "🔒 セキュリティとコンプライアンス",
      "title": "エンタープライズCI/CDベストプラクティス",
      "value_desc": "SysManageのCI/CDパイプラインは<strong>測定可能なエンタープライズ価値</strong>を提供します。",
      "value_title": "💎 エンタープライズ価値提案",
      "vulnerability_scanning": "脆弱性スキャン"
    },
    "breadcrumb": "マルチOS CI/CD",
    "github_actions": {
      "caching": "実行間でのインテリジェント依存関係キャッシュ",
      "description": "SysManageは<strong>GitHub Actionsマトリックス戦略</strong>を活用してゼロインフラストラクチャコストでエンタープライズグレードCI/CD機能を提供します。",
      "fail_fast": "フェイルファスト戦略で最初の失敗時に実行停止",
      "manual": "手動ワークフローディスパッチ",
      "matrix_desc": "複数環境での並列実行",
      "matrix_title": "🎯 マトリックス戦略実装",
      "optimization_desc": "高度なパイプライン最適化技術",
      "optimization_title": "⚡ パフォーマンス最適化",
      "os_macos": "macos-latest（Apple Silicon）",
      "os_ubuntu": "ubuntu-latest（プライマリLinux）",
      "os_windows": "windows-latest（Windows Server）",
      "parallel": "並列ジョブ実行でスループットを最大化",
      "pull_requests": "すべてのプルリクエスト",
      "push_main": "メインブランチへのプッシュ",
      "python_versions": "Python 3.11と3.12サポート",
      "resource": "リソース効率的な実行でコストを最小化",
      "schedule": "スケジュールされたメンテナンス実行",
      "title": "GitHub Actions実装",
      "triggers_desc": "コード変更時にパイプラインが自動実行",
      "triggers_title": "🚀 自動トリガー",
      "workflow_title": "📋 ワークフロー設定"
    },
    "intro": "SysManageは、GitHub Actionsを使用して<strong>革新的なゼロコストマルチOS CI/CDパイプライン</strong>を実装し、インフラストラクチャコストなしでLinux、macOS、Windowsプラットフォーム全体でエンタープライズグレードのテストとデプロイメント機能を提供します。",
    "key_benefits_title": "🚀 主要なエンタープライズメリット",
    "main_title": "エンタープライズマルチOS CI/CDパイプライン",
    "matrix_testing": {
      "bsd_simulation": "BSD: Dockerコンテナ",
      "comprehensive_desc": "すべてのコミットがすべてのターゲットプラットフォームでテスト",
      "comprehensive_reporting": "包括的レポート",
      "comprehensive_title": "📊 包括的プラットフォームカバレッジ",
      "description": "SysManageのマトリックステスト戦略は<strong>包括的なクロスプラットフォーム検証</strong>を提供します。",
      "framework_selection": "最適なテストフレームワーク選択",
      "graceful_degradation": "グレースフル劣化",
      "integration_tests": "統合テスト",
      "intelligent_desc": "スマートテスト実行",
      "intelligent_title": "🧠 インテリジェントテスト実行",
      "linux_testing": "Linux: Ubuntu LTS",
      "macos_testing": "macOS: Apple Silicon",
      "platform_detection": "プラットフォーム機能検出",
      "security_tests": "セキュリティテスト",
      "strategy_title": "🎯 テスト戦略",
      "title": "マルチOSマトリックステスト戦略",
      "ui_tests": "UIテスト",
      "unit_tests": "ユニットテスト",
      "validation_desc": "多層検証",
      "validation_title": "✅ 検証レベル",
      "windows_testing": "Windows: Server 2022"
    },
    "overview": {
      "backend_desc": "pytest、データベース統合、セキュリティ検証を備えた包括的なPythonテストスイート",
      "backend_feature_1": "1,432+のユニットおよび統合テスト",
      "backend_feature_2": "実際のPostgreSQLデータベーステスト",
      "backend_feature_3": "セキュリティスキャンと検証",
      "backend_feature_4": "コードカバレッジ分析（66%+）",
      "backend_title": "🔧 バックエンドテスト",
      "description": "SysManageのCI/CDパイプラインは<strong>コスト効率的なエンタープライズデプロイメントのパラダイムシフト</strong>を表現します。",
      "execution_title": "⚡ パイプライン実行戦略",
      "frontend_desc": "TypeScript/Reactテスト",
      "frontend_feature_1": "63+ TypeScriptユニットテスト",
      "frontend_feature_2": "Mock Service Worker統合",
      "frontend_feature_3": "コンポーネントレンダリング検証",
      "frontend_feature_4": "コードカバレッジ追跡",
      "frontend_title": "🌐 フロントエンドテスト",
      "pipeline_title": "🏗️ パイプラインコンポーネント",
      "title": "CI/CDパイプラインアーキテクチャ",
      "ui_desc": "PlaywrightとSeleniumを使用したクロスプラットフォームUIテスト",
      "ui_feature_1": "モダンブラウザ用Playwright",
      "ui_feature_2": "BSDシステム用Seleniumフォールバック",
      "ui_feature_3": "実際のデータベース統合",
      "ui_feature_4": "クロスブラウザ互換性",
      "ui_title": "🎭 UIテスト",
      "workflow_title": "🔄 ワークフローオーケストレーション"
    },
    "page_title": "マルチOS CI/CDパイプライン - SysManageドキュメント",
    "platform_specific": {
      "api_consistency": "API動作一貫性",
      "config_portability": "設定ポータビリティ",
      "cross_platform_desc": "一貫した動作の確保",
      "cross_platform_title": "🌍 クロスプラットフォーム一貫性",
      "database_compatibility": "データベースドライバ互換性",
      "description": "SysManageは<strong>プラットフォーム対応テスト戦略</strong>を実装します。",
      "linux_desc": "プライマリ開発およびテストプラットフォーム",
      "linux_docker": "Dockerコンテナテスト",
      "linux_full_stack": "PostgreSQLとの完全スタックテスト",
      "linux_packaging": "パッケージ管理テスト",
      "linux_systemd": "systemdサービス統合",
      "linux_title": "🐧 Linux（Ubuntu）テスト",
      "macos_desc": "ネイティブApple Siliconテスト",
      "macos_homebrew": "Homebrewパッケージ管理",
      "macos_launchd": "launchdサービス統合",
      "macos_security": "macOSセキュリティ機能",
      "macos_title": "🍎 macOSテスト",
      "macos_webkit": "WebKit/Safariテスト",
      "network_behavior": "ネットワーク通信一貫性",
      "title": "プラットフォーム固有テスト機能",
      "windows_desc": "Windows Server環境",
      "windows_iis": "IISウェブサーバー統合",
      "windows_powershell": "PowerShellスクリプトテスト",
      "windows_security": "Windowsセキュリティ機能",
      "windows_services": "Windowsサービス管理",
      "windows_title": "🪟 Windowsテスト"
    },
    "tabs": {
      "best_practices": "ベストプラクティス",
      "github_actions": "GitHub Actions",
      "matrix_testing": "マトリックステスト",
      "overview": "概要",
      "platform_specific": "プラットフォーム固有"
    }
  },
  "navigation": {
    "best_practices": "セキュリティ ベストプラクティス →",
    "security_overview": "← セキュリティ 概要",
    "server_configuration": "サーバー 構成 →",
    "server_installation": "← サーバー インストール",
    "title": "Quick Navigation"
  },
  "performance_testing": {
    "artillery": {
      "api_desc": "コアAPIエンドポイントパフォーマンステスト",
      "api_title": "ホスト管理API",
      "auth_desc": "JWT認証パフォーマンス検証",
      "auth_title": "認証フローテスト",
      "budgets_title": "💎 パフォーマンス予算",
      "description": "Artilleryは<strong>エンタープライズグレードロードテスト</strong>を提供します。",
      "error_rate": "最大: < 1%",
      "error_title": "🛡️ エラー率",
      "health_desc": "継続的ヘルスエンドポイント検証",
      "health_title": "ヘルスチェック監視",
      "normal_desc": "典型的な本番負荷",
      "normal_title": "⚡ 通常負荷",
      "peak_desc": "高トラフィックシミュレーション",
      "peak_title": "🚀 ピーク負荷",
      "phases_title": "📈 ロードテストフェーズ",
      "response_p95": "95パーセンタイル: < 500ms",
      "response_p99": "99パーセンタイル: < 1000ms",
      "response_title": "⚡ 応答時間",
      "scenarios_title": "🎯 ロードテストシナリオ",
      "throughput_rate": "最小: 8 RPS",
      "throughput_title": "📊 スループット",
      "title": "Artilleryバックエンドロードテスト",
      "warmup_desc": "システム初期化",
      "warmup_title": "🔥 ウォームアップフェーズ",
      "websocket_desc": "リアルタイム通信パフォーマンス検証",
      "websocket_title": "WebSocket接続テスト"
    },
    "benefit_1": "<strong>本番対応ロードテスト:</strong> 包括的API パフォーマンス検証",
    "benefit_2": "<strong>マルチプラットフォームテスト:</strong> Linux、macOS、Windowsで検証",
    "benefit_3": "<strong>自動回帰検出:</strong> CI/CDでの継続的パフォーマンス監視",
    "benefit_4": "<strong>エンタープライズスケーラビリティ:</strong> パフォーマンス予算とSLA検証",
    "breadcrumb": "パフォーマンステスト",
    "ci": {
      "alerts_desc": "パフォーマンス予算超過時の通知",
      "alerts_title": "🚨 自動アラート",
      "baseline_desc": "履歴パフォーマンスデータ比較",
      "baseline_title": "📊 ベースライン比較",
      "description": "SysManageのパフォーマンステストフレームワークは<strong>GitHub Actions CI/CDパイプライン</strong>と統合されます。",
      "macos_artillery": "Artilleryクロスプラットフォーム検証",
      "macos_native": "ネイティブmacOSアプリケーションパフォーマンス",
      "macos_title": "🍎 macOS",
      "macos_webkit": "WebKit/Safariパフォーマンステスト",
      "matrix_desc": "並列テスト",
      "matrix_title": "🎯 マトリックス実行",
      "platform_title": "🌐 マルチプラットフォームパフォーマンステスト",
      "regression_title": "📈 パフォーマンス回帰検出",
      "reporting_desc": "パフォーマンスメトリクスエクスポート",
      "reporting_title": "📊 結果レポート",
      "title": "CI/CDパフォーマンス統合",
      "trends_desc": "長期パフォーマンストレンド監視",
      "trends_title": "📈 トレンド分析",
      "trigger_desc": "パフォーマンステストの自動実行",
      "trigger_title": "🚀 トリガーイベント",
      "ubuntu_artillery": "Artilleryバックエンドロードテスト",
      "ubuntu_docker": "Dockerコンテナパフォーマンス",
      "ubuntu_playwright": "Playwright UIパフォーマンス",
      "ubuntu_title": "🐧 Ubuntu Linux",
      "validation_desc": "自動パフォーマンス予算実行",
      "validation_title": "✅ パフォーマンス検証",
      "windows_artillery": "Windows固有Artilleryテスト",
      "windows_edge": "Edgeブラウザパフォーマンステスト",
      "windows_powershell": "PowerShell環境検証",
      "windows_title": "🪟 Windows",
      "workflow_title": "🔄 自動パフォーマンスワークフロー"
    },
    "enterprise": {
      "analytics_title": "📈 エンタープライズ分析とレポート",
      "capacity_desc": "予測分析",
      "capacity_title": "📈 キャパシティプランニング",
      "cloud_autoscaling": "オートスケーリング検証",
      "cloud_containers": "コンテナパフォーマンス最適化",
      "cloud_desc": "AWS、Azure、GCPでの包括的テスト",
      "cloud_latency": "クロスリージョンレイテンシテスト",
      "cloud_title": "☁️ クラウドインフラストラクチャテスト",
      "compliance_analytics_desc": "自動コンプライアンス検証",
      "compliance_analytics_title": "🔒 コンプライアンスレポート",
      "compliance_availability": "高可用性テスト",
      "compliance_budgets": "設定可能パフォーマンス予算",
      "compliance_reporting": "エンタープライズグレードレポート",
      "compliance_sla": "SLA応答時間検証",
      "compliance_title": "🛡️ SLAコンプライアンス検証",
      "cost_desc": "パフォーマンス駆動コスト分析",
      "cost_label": "インフラストラクチャコスト削減",
      "cost_title": "💰 コスト最適化",
      "cost_value": "30%",
      "dashboards_desc": "リアルタイムパフォーマンスKPI",
      "dashboards_title": "📊 エグゼクティブダッシュボード",
      "deployment_title": "🌍 マルチ環境デプロイメントテスト",
      "description": "SysManageのパフォーマンステストフレームワークは<strong>エンタープライズグレード機能</strong>を提供します。",
      "hybrid_connectivity": "インタークラウド接続テスト",
      "hybrid_desc": "ハイブリッドクラウドデプロイメント検証",
      "hybrid_failover": "災害復旧検証",
      "hybrid_sync": "データ同期パフォーマンス",
      "hybrid_title": "🔄 ハイブリッドアーキテクチャテスト",
      "load_authentication": "認証フローストレステスト",
      "load_concurrent": "1000+ユーザーまでのシミュレーション",
      "load_realistic": "実際のユーザー行動パターン",
      "load_scenarios": "複数トラフィックシナリオモデリング",
      "load_title": "🚀 本番負荷シミュレーション",
      "monitoring_memory": "メモリリーク検出",
      "monitoring_network": "ネットワークパフォーマンス最適化",
      "monitoring_realtime": "リアルタイムパフォーマンスメトリクス",
      "monitoring_title": "📊 高度パフォーマンス監視",
      "monitoring_vitals": "Core Web Vitalsコンプライアンス検証",
      "onprem_desc": "エンタープライズデータセンターデプロイメントテスト",
      "onprem_hardware": "ハードウェア固有最適化",
      "onprem_integration": "レガシーシステム統合テスト",
      "onprem_security": "セキュリティコンプライアンス検証",
      "onprem_title": "🏢 オンプレミスエンタープライズテスト",
      "response_label": "平均応答時間",
      "response_value": "<500ms",
      "scalability_title": "⚡ エンタープライズスケーラビリティテスト",
      "title": "エンタープライズパフォーマンス機能",
      "uptime_label": "アップタイム信頼性",
      "uptime_value": "99.9%",
      "value_desc": "SysManageのパフォーマンステストフレームワークは<strong>測定可能なROI</strong>を提供します。",
      "value_title": "💎 エンタープライズ価値提案"
    },
    "intro": "SysManageは<strong>包括的パフォーマンステストフレームワーク</strong>を実装します。",
    "key_benefits_title": "🚀 主要なエンタープライズメリット",
    "main_title": "Artilleryによるエンタープライズグレードパフォーマンステスト",
    "overview": {
      "backend_desc": "Artilleryベースロードテスト",
      "backend_feature_1": "マルチフェーズロードテスト",
      "backend_feature_2": "WebSocket接続テスト",
      "backend_feature_3": "認証フロー検証",
      "backend_feature_4": "パフォーマンス予算実行",
      "backend_title": "🔧 バックエンドAPIテスト",
      "description": "SysManageのパフォーマンステストフレームワークは<strong>2層パフォーマンス検証</strong>を提供します。",
      "execution_title": "⚡ パフォーマンステスト実行",
      "framework_title": "📊 テストフレームワークコンポーネント",
      "frontend_desc": "Playwright駆動Core Web Vitals監視",
      "frontend_feature_1": "First Contentful Paint監視",
      "frontend_feature_2": "DOM Content Loadedタイミング",
      "frontend_feature_3": "ネットワークパフォーマンス分析",
      "frontend_feature_4": "メモリ使用量追跡",
      "frontend_title": "🌐 フロントエンドパフォーマンステスト",
      "requirements_desc": "パフォーマンステストには<code>localhost:8001</code>でサーバーが実行されている必要があります。",
      "requirements_title": "📋 前提条件",
      "title": "パフォーマンステストアーキテクチャ"
    },
    "page_title": "Artilleryによるパフォーマンステスト - SysManageドキュメント",
    "playwright": {
      "chromium_desc": "プライマリテストプラットフォーム",
      "chromium_title": "🟦 Chromium/Chrome",
      "cross_browser_title": "🌍 クロスブラウザパフォーマンス検証",
      "dcl_desc": "HTMLドキュメント読み込み時間",
      "dcl_target": "目標: < 1500ms",
      "dcl_title": "📄 DOM Content Loaded",
      "description": "Playwrightは<strong>包括的フロントエンドパフォーマンス監視</strong>を提供します。",
      "fcp_desc": "最初のコンテンツ要素が表示される時間",
      "fcp_target": "目標: < 2000ms",
      "fcp_title": "🎨 First Contentful Paint",
      "firefox_desc": "クロスブラウザパフォーマンス検証",
      "firefox_title": "🟧 Firefox",
      "load_desc": "完全ページ読み込み",
      "load_target": "目標: < 5000ms",
      "load_title": "🌐 ページ読み込み時間",
      "login_flow_desc": "フォーム相互作用検証",
      "login_flow_title": "🚀 ログインフローパフォーマンス",
      "login_page_desc": "ページ読み込みパフォーマンス検証",
      "login_page_title": "🔐 ログインページパフォーマンス",
      "memory_desc": "JavaScript heapメモリ監視",
      "memory_target": "追跡対象: JS Heapサイズ",
      "memory_title": "💾 メモリ使用量",
      "metrics_title": "📊 Core Web Vitals監視",
      "network_desc": "リソース読み込み最適化",
      "network_title": "🌐 ネットワークパフォーマンス分析",
      "tests_title": "🧪 パフォーマンステストシナリオ",
      "title": "Playwrightフロントエンドパフォーマンステスト",
      "webkit_desc": "Safariパフォーマンステスト",
      "webkit_title": "🟪 WebKit (macOS)"
    },
    "tabs": {
      "artillery": "Artilleryバックエンド",
      "ci_integration": "CI/CD統合",
      "enterprise": "エンタープライズ機能",
      "overview": "概要",
      "playwright": "Playwrightフロントエンド"
    }
  },
  "rbac_docs": {
    "best_practices": {
      "audit": {
        "description": "ロール割り当てと権限ベースのアクションの監査ログを監視およびレビューして、潜在的なセキュリティ問題を検出してください。",
        "title": "📝 監査ログ"
      },
      "least_privilege": {
        "description": "ユーザーには、職務遂行に必要な最小限のロールのみを付与してください。絶対に必要でない限り、広範な権限の付与は避けてください。",
        "title": "🔒 最小権限の原則"
      },
      "role_review": {
        "description": "ユーザーのロール割り当てを定期的に確認して、適切性を維持してください。ユーザーが責任を変更したり組織を離れたりした場合は、ロールを削除してください。",
        "title": "🔍 定期的なロールレビュー"
      },
      "separation": {
        "description": "機密性の高い操作については、不正な操作を防ぐために、承認ロールと実行ロールを異なるユーザーに分離することを検討してください。",
        "title": "🔐 職務の分離"
      },
      "title": "ベストプラクティス"
    },
    "breadcrumb": "RBAC",
    "card": {
      "description": "多層防御セキュリティを備えたロールベースアクセス制御",
      "feature1": "詳細な権限システム",
      "feature2": "フロントエンドとバックエンドの検証",
      "feature3": "60以上の個別セキュリティロール",
      "feature4": "簡単な管理のためのロールグループ",
      "feature5": "最小権限の適用",
      "link": "RBACドキュメント →",
      "title": "RBAC"
    },
    "defense_in_depth": {
      "description": "SysManageの保護された操作はすべて、2層のセキュリティ検証アプローチを使用します：",
      "layer1": {
        "description": "UI要素（ボタン、メニュー、アクション）は、ユーザーの権限に基づいて非表示または無効化されます。これにより、ユーザーが不正な操作を試みることを防ぎ、優れたユーザーエクスペリエンスを提供します。",
        "title": "🖥️ フロントエンド層"
      },
      "layer2": {
        "description": "APIエンドポイントは、操作を実行する前にユーザーの権限を検証します。フロントエンドがバイパスされた場合でも、バックエンドは不正なアクセスに対してHTTP 403エラーでセキュリティを適用します。",
        "title": "🔒 バックエンド層"
      },
      "title": "多層防御アーキテクチャ",
      "why": {
        "description": "フロントエンド層は、ユーザーのブラウザで実行され操作可能であるため、セキュリティの適用に信頼できません。バックエンド層が実際のセキュリティ保証を提供します。両者を組み合わせることで、セキュリティ（バックエンド）とユーザビリティ（フロントエンド）の両方を提供します。",
        "title": "なぜ2層なのか？"
      }
    },
    "description": "多層防御セキュリティを備えたSysManageのロールベースアクセス制御システムの包括的なドキュメント。",
    "footer": {
      "auth_link": "← 認証",
      "quick_nav": "クイックナビゲーション",
      "security_index": "セキュリティドキュメント →"
    },
    "groups": {
      "host_management": {
        "description": "ホスト、そのライフサイクル、および運用状態を管理するためのコントロール。",
        "title": "🖥️ ホスト管理"
      },
      "integration_management": {
        "description": "システム統合とメッセージキューを管理するためのコントロール。",
        "title": "🔗 統合管理"
      },
      "package_management": {
        "description": "ソフトウェアパッケージ操作とOSアップグレードのコントロール。",
        "title": "📦 パッケージ管理"
      },
      "report_management": {
        "description": "システムレポートを表示および生成するためのコントロール。",
        "title": "📊 レポート管理"
      },
      "script_management": {
        "description": "ホスト上でスクリプトを管理および実行するためのコントロール。",
        "title": "📜 スクリプト管理"
      },
      "secrets_management": {
        "description": "OpenBAOボルトとシークレット操作のコントロール。",
        "title": "🔐 シークレット管理"
      },
      "ubuntu_pro": {
        "description": "Ubuntu Proサブスクリプション管理のコントロール。",
        "title": "🔷 Ubuntu Pro管理"
      },
      "user_management": {
        "description": "SysManageユーザーとそのアカウントを管理するためのコントロール。",
        "title": "👥 ユーザー管理"
      }
    },
    "header": {
      "subtitle": "すべてのSysManage操作に対する多層防御保護を備えた詳細なセキュリティ権限。",
      "title": "ロールベースアクセス制御（RBAC）"
    },
    "implementation": {
      "assignment": {
        "description": "管理者は、設定→ユーザーインターフェースを通じてユーザーにロールを割り当てることができます。各ユーザーに複数のロールを割り当てることができ、さまざまな組織のニーズに応じた柔軟な権限の組み合わせを提供します。",
        "title": "ロールの割り当て"
      },
      "backend": {
        "description": "FastAPIエンドポイントは、操作を実行する前にユーザーロールを検証します。不正なアクセスはHTTP 403を返します：",
        "title": "バックエンド権限検証"
      },
      "frontend": {
        "description": "ReactフロントエンドはhasPermission()関数を使用してユーザー権限をチェックします。UI要素はこれらのチェックに基づいて条件付きでレンダリングされます：",
        "title": "フロントエンド権限チェック"
      },
      "title": "実装の詳細"
    },
    "overview": {
      "description": "SysManageは、プラットフォームのすべての操作に対して詳細な権限を提供する包括的なロールベースアクセス制御（RBAC）システムを実装しています。このシステムは多層防御セキュリティモデルに基づいて構築されており、複数の層でセキュリティチェックが適用されることを保証します。",
      "title": "セキュリティモデルの概要"
    },
    "role_groups": {
      "description": "セキュリティロールは、制御する機能領域に基づいて論理グループに編成されています：",
      "title": "セキュリティロールグループ"
    },
    "roles": {
      "add_package": "パッケージの追加",
      "add_package_desc": "ホストに新しいソフトウェアパッケージをインストール",
      "add_script": "スクリプトの追加",
      "add_script_desc": "ライブラリに新しいスクリプトを作成",
      "add_secret": "シークレットの追加",
      "add_secret_desc": "ボルトに新しいシークレットを作成",
      "add_user": "ユーザーの追加",
      "add_user_desc": "新しいユーザーアカウントを作成",
      "apply_host_os_upgrade": "ホストOSアップグレードの適用",
      "apply_host_os_upgrade_desc": "主要なOSバージョンアップグレードを実行",
      "apply_software_update": "ソフトウェア更新の適用",
      "apply_software_update_desc": "利用可能なパッケージ更新を適用",
      "approve_host_registration": "ホスト登録の承認",
      "approve_host_registration_desc": "新しいホスト登録リクエストを承認または拒否",
      "attach_ubuntu_pro": "Ubuntu Proのアタッチ",
      "attach_ubuntu_pro_desc": "ホストにUbuntu Proサブスクリプションをアタッチ",
      "change_ubuntu_pro_master_key": "Ubuntu Proマスターキーの変更",
      "change_ubuntu_pro_master_key_desc": "Ubuntu Proマスタートークンを更新",
      "delete_host": "ホストの削除",
      "delete_host_desc": "システムからホストを削除",
      "delete_queue_message": "キューメッセージの削除",
      "delete_queue_message_desc": "メッセージキューからメッセージを削除",
      "delete_script": "スクリプトの削除",
      "delete_script_desc": "ライブラリからスクリプトを削除",
      "delete_script_execution": "スクリプト実行の削除",
      "delete_script_execution_desc": "スクリプト実行履歴を削除",
      "delete_secret": "シークレットの削除",
      "delete_secret_desc": "ボルトからシークレットを削除",
      "delete_user": "ユーザーの削除",
      "delete_user_desc": "システムからユーザーアカウントを削除",
      "deploy_certificate": "証明書のデプロイ",
      "deploy_certificate_desc": "ホストにSSL/TLS証明書をデプロイ",
      "deploy_ssh_key": "SSHキーのデプロイ",
      "deploy_ssh_key_desc": "ホストにSSHキーをデプロイ",
      "detach_ubuntu_pro": "Ubuntu Proのデタッチ",
      "detach_ubuntu_pro_desc": "ホストからUbuntu Proサブスクリプションをデタッチ",
      "edit_script": "スクリプトの編集",
      "edit_script_desc": "既存のスクリプトを変更",
      "edit_secret": "シークレットの編集",
      "edit_secret_desc": "既存のシークレットを変更",
      "edit_tags": "タグの編集",
      "edit_tags_desc": "組織化のためにホストタグを変更",
      "edit_user": "ユーザーの編集",
      "edit_user_desc": "ユーザーアカウントの詳細を変更",
      "enable_grafana_integration": "Grafana統合の有効化",
      "enable_grafana_integration_desc": "Grafana統合を構成して有効化",
      "generate_pdf_report": "PDFレポートの生成",
      "generate_pdf_report_desc": "レポートをPDFドキュメントとしてエクスポート",
      "lock_user": "ユーザーのロック",
      "lock_user_desc": "アクセスを防ぐためにユーザーアカウントをロック",
      "reboot_host": "ホストの再起動",
      "reboot_host_desc": "ホストの再起動を開始",
      "reset_user_password": "ユーザーパスワードのリセット",
      "reset_user_password_desc": "ユーザーアカウントのパスワードをリセット",
      "restart_host_service": "ホストサービスの再起動",
      "restart_host_service_desc": "ホストで実行中のサービスを再起動",
      "run_script": "スクリプトの実行",
      "run_script_desc": "ホストでスクリプトを実行",
      "shutdown_host": "ホストのシャットダウン",
      "shutdown_host_desc": "ホストをシャットダウン",
      "start_host_service": "ホストサービスの開始",
      "start_host_service_desc": "ホストでサービスを開始",
      "start_vault": "ボルトの開始",
      "start_vault_desc": "OpenBAOボルトサービスを開始",
      "stop_host_service": "ホストサービスの停止",
      "stop_host_service_desc": "ホストで実行中のサービスを停止",
      "stop_vault": "ボルトの停止",
      "stop_vault_desc": "OpenBAOボルトサービスを停止",
      "unlock_user": "ユーザーのアンロック",
      "unlock_user_desc": "以前にロックされたユーザーアカウントをアンロック",
      "view_host_details": "ホスト詳細の表示",
      "view_host_details_desc": "ホストに関する詳細情報にアクセス",
      "view_report": "レポートの表示",
      "view_report_desc": "Webインターフェースでレポートを表示"
    },
    "title": "ロールベースアクセス制御 - SysManage"
  },
  "secrets_management": {
    "architecture": {
      "description": "SysManageとOpenBAOの統合は、最も機密性の高いデータを保護する要塞のようなセキュリティアーキテクチャを作成します。",
      "diagram_title": "🔄 安全なデータフロー",
      "principle1": "<strong>ゼロトラスト</strong>：すべてのアクセス要求が認証・認可",
      "principle2": "<strong>あらゆる場所での暗号化</strong>：保存時、転送時、メモリ内でデータ暗号化",
      "principle3": "<strong>最小露出</strong>：シークレットは必要時のみ復号化",
      "principle4": "<strong>包括的監査</strong>：すべての操作がログ記録・追跡可能",
      "principle5": "<strong>最小権限の原則</strong>：必要時のみアクセス付与",
      "principles_title": "🛡️ セキュリティ原則",
      "step1_description": "シークレットはメタデータ追跡付きでOpenBAOボルトに暗号化保存",
      "step1_title": "安全な保存",
      "step2_description": "SysManageは安全なトークンベース認証を使用してOpenBAOで認証",
      "step2_title": "認証",
      "step3_description": "完全な監査ログ付きでオンデマンドでシークレット取得",
      "step3_title": "安全な取得",
      "step4_description": "暗号化WebSocketチャネル経由でエージェントにシークレット送信",
      "step4_title": "暗号化展開",
      "title": "🏗️ セキュリティアーキテクチャ"
    },
    "benefits": {
      "automation_description": "証明書とSSHキー展開の完全自動化により、人的エラーを排除し運用オーバーヘッドを削減。",
      "automation_title": "🤖 ゼロタッチ自動化",
      "compliance_description": "包括的監査証跡と暗号化により、SOC 2、GDPR、HIPAA、その他の規制要件を箱から出してすぐに満たします。",
      "compliance_title": "✅ コンプライアンス対応",
      "description": "SysManageのOpenBAO統合は、他のすべてのシステム管理プラットフォームとは異なるセキュリティ機能を提供します：",
      "enterprise_description": "他のプラットフォームがセキュリティを後付けとして扱う中、SysManageは最初からOpenBAOの実証済みエンタープライズ基盤の上に構築されています。",
      "enterprise_title": "🏢 初日からエンタープライズレディ",
      "integration_description": "ネイティブOpenBAO統合により、複雑な設定やサードパーティ依存関係なし - ただ動作します。",
      "integration_title": "🔗 シームレス統合",
      "monitoring_description": "インフラストラクチャ全体での包括的ログとステータス追跡によるリアルタイムシークレット展開監視。",
      "monitoring_title": "📊 リアルタイム可視性",
      "scalability_description": "単一サーバーから大規模マルチクラウド展開まで、セキュリティやパフォーマンスを犠牲にすることなくアーキテクチャがスケール。",
      "scalability_title": "📈 無限スケール",
      "title": "🏆 競争上の優位性"
    },
    "breadcrumb": "シークレット管理",
    "card": {
      "description": "OpenBAOボルトによる革命的シークレット管理 - SysManageセキュリティアーキテクチャの王冠の宝石。",
      "feature1": "エンタープライズグレードOpenBAOボルト統合",
      "feature2": "自動SSL/TLS証明書展開",
      "feature3": "集中SSHキー管理と展開",
      "feature4": "包括的監査証跡付きゼロトラストアーキテクチャ",
      "feature5": "すべての機密データの軍事レベル暗号化",
      "link": "シークレット管理 →",
      "title": "🔒 OpenBAOエンタープライズシークレット管理"
    },
    "deployment": {
      "cert_step1_description": "SysManage Webインターフェースを通じて証明書をアップロード、OpenBAOボルトに自動保存",
      "cert_step1_title": "アップロードと保存",
      "cert_step2_description": "直感的なWebインターフェースを通じてターゲットホストと展開パスを選択",
      "cert_step2_title": "ターゲット選択",
      "cert_step3_description": "暗号化WebSocket接続を介してエージェントに証明書を安全に送信",
      "cert_step3_title": "安全な転送",
      "cert_step4_description": "エージェントが適切な権限で証明書を展開し成功インストールを検証",
      "cert_step4_title": "展開と検証",
      "certificate_title": "📜 証明書展開プロセス",
      "ssh_step1_description": "メタデータとアクセス制御付きでOpenBAOにSSH公開キーを保存",
      "ssh_step1_title": "キー管理",
      "ssh_step2_description": "きめ細かい権限で特定のユーザーとホストにキーを割り当て",
      "ssh_step2_title": "ユーザー割り当て",
      "ssh_step3_description": "適切なフォーマットでauthorized_keysファイルにキーを自動追加",
      "ssh_step3_title": "自動展開",
      "ssh_step4_description": "SSHアクセスが機能することを確認し、すべてのキー操作の監査証跡を維持",
      "ssh_step4_title": "アクセス検証",
      "ssh_title": "🔑 SSHキー展開プロセス",
      "title": "🚀 展開ワークフロー"
    },
    "description": "SysManageでの安全な証明書展開、SSHキー、および認証情報管理のためのOpenBAOボルトを使用したエンタープライズグレードシークレット管理。",
    "features": {
      "certificates_description": "インフラストラクチャ全体にゼロダウンタイムでSSL/TLS証明書を展開。OpenBAOが証明書と秘密キーを安全に保存し、SysManageがターゲットホストへの自動展開を処理します。",
      "certificates_feature1": "保存時暗号化による安全な証明書保存",
      "certificates_feature2": "複数ホストへの同時自動展開",
      "certificates_feature3": "リアルタイム展開監視とステータス追跡",
      "certificates_feature4": "すべての証明書操作の包括的監査証跡",
      "certificates_title": "📜 自動証明書展開",
      "credentials_description": "軍事レベルの暗号化で機密認証情報を保存・管理し、手動認証情報管理を過去のものにします。",
      "credentials_feature1": "保存されたすべてのシークレットのAES-256暗号化",
      "credentials_feature2": "きめ細かいアクセス制御と権限",
      "credentials_feature3": "シークレットバージョニングとロールバック機能",
      "credentials_feature4": "外部認証システムとの統合",
      "credentials_title": "🛡️ 認証情報ボルト",
      "ssh_description": "手動キー配布を排除する集中キー保存、自動展開、ローテーション機能でSSHアクセス管理を革新。",
      "ssh_feature1": "集中SSHキー保存と管理",
      "ssh_feature2": "authorized_keysファイルへの自動キー展開",
      "ssh_feature3": "ed25519、RSA、ECDSAキータイプのサポート",
      "ssh_feature4": "キーローテーションとライフサイクル管理",
      "ssh_title": "🔑 SSHキー管理",
      "title": "⭐ SysManageの革命的機能"
    },
    "getting_started": {
      "description": "エンタープライズグレードシークレット管理を体験する準備はできましたか？統合OpenBAOセットアップにより、開始が簡単になります：",
      "link1": "完全スタートガイド",
      "link2": "セキュリティベストプラクティス",
      "link3": "管理ガイド",
      "link4": "APIドキュメント",
      "next_title": "📚 次のステップ",
      "step1_description": "<code>sysmanage_secure_installation</code>スクリプトがOpenBAOをプロダクションモードで安全なデフォルト設定で自動設定。",
      "step1_title": "1. 自動セットアップ",
      "step2_description": "Webインターフェースを使用して証明書、SSHキー、その他の機密データを安全にアップロード。",
      "step2_title": "2. シークレットアップロード",
      "step3_description": "リアルタイム監視と包括的監査証跡でターゲットを選択し展開。",
      "step3_title": "3. 確信を持って展開",
      "title": "🚀 はじめに"
    },
    "header": {
      "subtitle": "OpenBAOボルトによる革命的なシークレット管理 - インフラストラクチャセキュリティのゴールドスタンダードを設定。",
      "title": "🔒 OpenBAOエンタープライズシークレット管理"
    },
    "openbao": {
      "benefit1_description": "すべてのシークレットは保存時と転送時に暗号化され、きめ細かいアクセス制御と包括的監査ログを備えています。",
      "benefit1_title": "🔐 ゼロトラストセキュリティ",
      "benefit2_description": "運用に最小限のレイテンシ影響で、稲妻のような高速シークレット取得と保存。",
      "benefit2_title": "🏃‍♂️ 高性能",
      "benefit3_description": "単一インストールから大規模マルチリージョンデプロイメントまでシームレスにスケール。",
      "benefit3_title": "🌐 エンタープライズスケール",
      "benefit4_description": "露出ウィンドウを最小限に抑える短期間で回転可能なシークレットを生成。",
      "benefit4_title": "🔄 動的シークレット",
      "benefits_title": "🎯 OpenBAOがSysManageを優秀にする理由",
      "description": "OpenBAOは機密データにエンタープライズグレードのセキュリティを提供する最先端のオープンソースシークレット管理プラットフォームです。HashiCorp Vaultコードベースから生まれ、OpenBAOは強化されたセキュリティ、より良いパフォーマンス、真のオープンソースガバナンスでシークレット管理の未来を表しています。",
      "title": "🚀 OpenBAOとは何ですか？"
    },
    "overview": {
      "badge_description": "OpenBAOは銀行レベルの暗号化、ゼロトラストアーキテクチャ、エンタープライズ監査証跡を提供し、SysManageを最も安全なシステム管理プラットフォームにします。",
      "badge_title": "🛡️ 軍事レベルのセキュリティ",
      "description": "SysManageは<strong>OpenBAO</strong>（エンタープライズグレードシークレット管理プラットフォーム）と統合し、インフラストラクチャに比類のないセキュリティを提供します。これは単なる別のシークレットマネージャーではありません - システム管理をエンタープライズ標準に押し上げる完全なセキュリティ変革です。",
      "title": "🏆 他に類を見ないセキュリティアーキテクチャ"
    },
    "title": "OpenBAOによるシークレット管理 - SysManage"
  },
  "secure_installation": {
    "accomplishments": {
      "admin_feature1": "Argon2パスワードハッシュによる安全な管理ユーザー作成",
      "admin_feature2": "UUIDベースユーザー識別",
      "admin_feature3": "包括的パスワードポリシー適用",
      "admin_feature4": "ロールベースアクセス制御初期化",
      "admin_title": "👤 管理ユーザーセットアップ",
      "database_feature1": "完全Alembicマイグレーション実行",
      "database_feature2": "強化されたセキュリティのためのUUIDベース主キー",
      "database_feature3": "安全なデータベーススキーマ初期化",
      "database_feature4": "データベース接続検証と最適化",
      "database_title": "🗄️ データベースセキュリティ強化",
      "openbao_feature1": "自動OpenBAOサーバー設定と起動",
      "openbao_feature2": "安全なデフォルト設定でのプロダクションモードボルト初期化",
      "openbao_feature3": "自動ボルト開封とシークレットエンジンセットアップ",
      "openbao_feature4": "安全な認証情報生成と保存",
      "openbao_title": "🏗️ OpenBAOボルト初期化",
      "security_feature1": "暗号学的に安全なJWTシークレット生成",
      "security_feature2": "プロダクションセキュリティデフォルト有効化",
      "security_feature3": "SSL/TLS設定最適化",
      "security_feature4": "セキュリティ警告システム初期化",
      "security_title": "🔒 セキュリティ設定"
    },
    "breadcrumb": "セキュアインストール",
    "card": {
      "description": "SysManageインストールをOpenBAO統合付きエンタープライズグレードセキュリティ要塞に変換する革命的自動セットアップスクリプト。",
      "feature1": "プロダクションモードでの自動OpenBAOボルト初期化",
      "feature2": "クロスプラットフォーム権限管理と昇格",
      "feature3": "暗号学的に安全な管理ユーザー作成",
      "feature4": "エンタープライズセキュリティデフォルトと強化",
      "feature5": "データベースマイグレーションとスキーマ初期化",
      "link": "セキュアインストールガイド →",
      "title": "🔐 セキュアインストール"
    },
    "cross_platform": {
      "description": "セキュアインストールスクリプトは、インテリジェントプラットフォーム検出と権限管理により、SysManageの普遍的互換性へのコミットメントを実証します：",
      "privileges_title": "🔐 インテリジェント権限管理",
      "supported_title": "✅ サポートプラットフォーム",
      "title": "🌐 クロスプラットフォームエクセレンス"
    },
    "description": "自動OpenBAOセットアップとセキュアシステム初期化のためのsysmanage_secure_installationスクリプトの完全ガイド。",
    "flow": {
      "step1_description": "仮想環境、依存関係、システム要件の検証",
      "step1_title": "環境検証",
      "step2_description": "安全なデータベーススキーマセットアップのAlembicマイグレーション実行",
      "step2_title": "データベースマイグレーション",
      "step3_description": "安全なパスワードハッシュで管理ユーザーを作成",
      "step3_title": "管理ユーザー作成",
      "step4_description": "JWTシークレットを生成しセキュリティ強化を適用",
      "step4_title": "セキュリティ設定",
      "step5_description": "プロダクションモードでOpenBAOボルトを設定・初期化",
      "step5_title": "OpenBAO初期化",
      "success_description": "プロダクション使用準備のエンタープライズグレードSysManageインストール",
      "success_title": "プロダクション準備完了！"
    },
    "header": {
      "subtitle": "統合OpenBAOボルト初期化とエンタープライズセキュリティデフォルトによる自動プロダクション準備セットアップ。",
      "title": "🔐 SysManageセキュアインストール"
    },
    "overview": {
      "badge_description": "以前は何時間もの手動設定を要したものが、決してミスをしない防弾自動化で数分で完了します。",
      "badge_title": "🚀 ゼロ設定の卓越性",
      "description": "<code>sysmanage_secure_installation</code>スクリプトは、システム管理展開の量子飛躍を表しています。MySQLの伝説的なセキュアインストールプロセスにインスパイアされ、このスクリプトは基本的なSysManageインストールをエンタープライズグレードのプロダクション準備セキュリティ要塞に変換します。",
      "title": "🏆 初日からプロダクション準備セキュリティ"
    },
    "platforms": {
      "freebsd_description": "doasとsudoサポート付きBSDネイティブ",
      "freebsd_title": "😈 FreeBSD",
      "linux_description": "自動sudo検出付きすべての主要ディストリビューションの完全サポート",
      "linux_title": "🐧 Linux",
      "macos_description": "Homebrew統合付きネイティブmacOSサポート",
      "macos_title": "🍎 macOS",
      "openbsd_description": "doas統合付きOpenBSDセキュリティファーストアプローチ",
      "openbsd_title": "🐡 OpenBSD",
      "windows_description": "管理者権限検出付きPowerShellとMSYS2サポート",
      "windows_title": "🪟 Windows"
    },
    "post_installation": {
      "check1": "<strong>セキュア認証情報</strong>：生成された<code>.vault_credentials</code>ファイルを安全な場所に保存",
      "check2": "<strong>サービス開始</strong>：<code>make start</code>を使用してすべてのサービスを起動",
      "check3": "<strong>Webインターフェースアクセス</strong>：<code>https://your-server:8443</code>にナビゲート",
      "check4": "<strong>ログイン</strong>：インストール時に作成した管理認証情報を使用",
      "check5": "<strong>エージェント展開</strong>：インフラストラクチャにSysManageエージェントをインストールし承認",
      "check6": "<strong>シークレットアップロード</strong>：シークレット管理機能の使用を開始",
      "checklist_title": "✅ インストール後チェックリスト",
      "description": "正常完了後、SysManageインストールはエンタープライズグレードセキュリティでプロダクション準備が整いました。次に行うこと：",
      "link1": "完全スタートガイド",
      "link2": "シークレット管理機能の探索",
      "link3": "エージェントのインストールと設定",
      "link4": "セキュリティベストプラクティスの確認",
      "next_title": "🚀 次のステップ",
      "title": "🎉 インストール後ステップ"
    },
    "privileges": {
      "feature1": "<strong>自動検出</strong>：すべてのプラットフォーム全体で現在の権限レベルを検出",
      "feature2": "<strong>スマート昇格</strong>：適切な昇格方法（sudo、doas、または管理者）を使用",
      "feature3": "<strong>仮想環境</strong>：適切なPython仮想環境コンテキストを維持",
      "feature4": "<strong>安全チェック</strong>：システム変更前に環境を検証"
    },
    "security": {
      "argon2_description": "パスワードハッシュコンペティション勝者のArgon2idを使用し、レインボーテーブルとGPUベース攻撃に対する軍事レベル保護を提供。",
      "argon2_feature1": "専用ハードウェア攻撃に耐性のあるメモリハードアルゴリズム",
      "argon2_feature2": "最適セキュリティのための設定可能時間・メモリパラメータ",
      "argon2_feature3": "レインボーテーブル攻撃に対するソルトベース保護",
      "argon2_title": "🔐 Argon2パスワードハッシュ",
      "jwt_description": "Pythonのsecretsモジュールを使用して暗号学的に安全なJWTシークレットを生成し、破られないトークンセキュリティを実現。",
      "jwt_feature1": "OSレベルランダムネスからの256ビットエントロピー",
      "jwt_feature2": "自動シークレットローテーション機能",
      "jwt_feature3": "安全なトークン検証と有効期限",
      "jwt_title": "🎫 暗号学的JWTシークレット",
      "openbao_description": "シームレスOpenBAO統合により、インストール時からエンタープライズグレードシークレット管理を提供。",
      "openbao_feature1": "自動ボルト初期化と開封",
      "openbao_feature2": "安全なデフォルト設定でのプロダクションモード設定",
      "openbao_feature3": "キー値シークレットエンジンセットアップと設定",
      "openbao_title": "🏦 OpenBAOボルト統合",
      "uuid_description": "すべての主キーが暗号学的に安全なUUIDを使用し、列挙攻撃を排除し強化されたプライバシーを提供。",
      "uuid_feature1": "暗号学的ランダムネス付きバージョン4 UUID",
      "uuid_feature2": "ユーザー列挙と予測可能なリソースURL防止",
      "uuid_feature3": "強化されたプライバシーとGDPRコンプライアンス",
      "uuid_title": "🆔 UUIDベースセキュリティ"
    },
    "security_features": {
      "title": "🛡️ 高度なセキュリティ機能"
    },
    "title": "セキュアインストールガイド - SysManage",
    "troubleshooting": {
      "database_problem": "<strong>問題：</strong>マイグレーション中のデータベース接続失敗",
      "database_solution1": "PostgreSQL実行中を確認：<code>systemctl status postgresql</code>",
      "database_solution2": "設定ファイルのデータベース認証情報を確認",
      "database_solution3": "データベースユーザーにCREATE権限があることを確認",
      "database_solution4": "手動接続テスト：<code>psql -h host -U user -d database</code>",
      "database_solution_title": "解決策：",
      "database_title": "🗄️ データベース接続問題",
      "openbao_problem": "<strong>問題：</strong>OpenBAOバイナリが見つからないか初期化に失敗",
      "openbao_solution1": "OpenBAOインストール：<code>make install-dev</code>（OpenBAO含む）",
      "openbao_solution2": "公式リリースから手動でOpenBAOをインストール",
      "openbao_solution3": "localhost接続のファイアウォール設定を確認",
      "openbao_solution4": "<code>--skip-vault</code>フラグでOpenBAOセットアップを一時的にスキップ",
      "openbao_solution_title": "解決策：",
      "openbao_title": "🏦 OpenBAOインストール問題",
      "privileges_problem": "<strong>問題：</strong>権限拒否エラーでスクリプトが失敗",
      "privileges_solution1": "システムの管理権限があることを確認",
      "privileges_solution2": "Linux/macOSで：<code>sudo</code>を使用するか、ユーザーがsudoersにいることを確認",
      "privileges_solution3": "FreeBSD/OpenBSDで：<code>doas</code>を設定するか<code>sudo</code>を使用",
      "privileges_solution4": "Windowsで：管理者としてターミナルを実行",
      "privileges_solution_title": "解決策：",
      "privileges_title": "❌ 権限問題",
      "title": "🔧 トラブルシューティング",
      "venv_problem": "<strong>問題：</strong>「仮想環境が見つかりません」エラー",
      "venv_solution_title": "解決策：",
      "venv_title": "🐍 仮想環境問題"
    },
    "usage": {
      "advanced_title": "高度なオプション：",
      "basic_title": "基本使用法：",
      "flow_title": "📊 インストールフロー",
      "prereq1": "仮想環境セットアップ付きSysManageインストール（<code>make install-dev</code>）",
      "prereq2": "システムの管理/root権限",
      "prereq3": "PostgreSQLデータベース実行中でアクセス可能",
      "prereq4": "OpenBAOバイナリ利用可能（<code>make install-dev</code>で自動インストール）",
      "prerequisites_title": "📋 前提条件",
      "running_title": "⚡ スクリプト実行",
      "title": "🚀 使用ガイド"
    },
    "what_it_does": {
      "description": "この革命的なスクリプトは、SysManageインストールをエンタープライズグレードセキュリティプラットフォームへの完全変換を自動化します：",
      "title": "⚡ スクリプトが達成すること"
    }
  },
  "security": {
    "authentication": {
      "admin": "Admin",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "auditor": "Auditor",
      "auth_architecture": "Authentication Architecture",
      "authentication_events": "Authentication Events",
      "automatic_rotation": "Automatic Rotation",
      "common_issues": "一般的な問題",
      "default_password_policy": "Default Password Policy",
      "default_roles": "Default Roles",
      "diagnostic_commands": "Diagnostic Commands",
      "email_otp": "Email OTP",
      "external_auth_integration": "External Auth Integration",
      "external_auth_providers": "External Authentication Providers",
      "integration_examples": "Integration Examples",
      "jwt_authentication": "JWT Authentication",
      "jwt_configuration": "JWT Configuration",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "mfa_configuration": "MFA Configuration",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_implementation": "MFA Implementation",
      "mfa_setup_problems": "MFA Setup Problems",
      "monitored_events": "Monitored Events",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "next_steps": "Next Steps",
      "operator": "Operator",
      "overview": "Authentication Overview",
      "password_policies": "Password Policies",
      "password_policy_configuration": "Password Policy Configuration",
      "password_requirements": "Password Requirements",
      "permission_examples": "Permission Examples",
      "permission_system": "Permission System",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "rbac_implementation": "RBAC Implementation",
      "rbac_permission_errors": "RBAC Permission Errors",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "recovery_codes": "Recovery Codes",
      "saml_integration": "SAML 2.0 Integration",
      "security_events": "Security Events",
      "security_monitoring": "Authentication Security Monitoring",
      "session_architecture": "Session Architecture",
      "session_configuration": "Session Configuration",
      "session_features": "Session Features",
      "session_management": "Session Management",
      "session_monitoring": "Session Monitoring",
      "session_security": "Session Security",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "supported_mfa_methods": "Supported MFA Methods",
      "suspicious_activities": "Suspicious Activities",
      "title": "Authentication & Authorization",
      "token_based_sessions": "Token-Based Sessions",
      "token_blacklisting": "Token Blacklisting",
      "token_expired_errors": "Token Expired Errors",
      "token_generation_process": "Token Generation Process",
      "token_rotation_security": "Token Rotation & Security",
      "token_validation_flow": "Token Validation Flow",
      "totp": "TOTP (Time-based OTP)",
      "troubleshooting": "Troubleshooting Authentication",
      "viewer": "Viewer"
    },
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "title": "Security Documentation"
  },
  "security_docs": {
    "database_security": {
      "description": "UUIDBベースの主キーと強化されたセキュリティのための安全なデータベース設計パターン。",
      "gdpr_compliance": "データ匿名化のためのGDPRコンプライアンスサポート",
      "information_leakage": "予測可能なリソースURLパターンを排除",
      "link": "データベースセキュリティ →",
      "privacy_enhanced": "関連付けできない識別子による強化されたプライバシー",
      "replay_protection": "非連続識別子はリプレイ攻撃を防止",
      "secure_installation": "一意のトークンを持つセキュアインストールスクリプト",
      "title": "🗄️ データベースセキュリティ",
      "uuid_keys": "UUIDベースの主キーはID列挙攻撃を防止"
    },
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "header": {
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments.",
      "title": "Security Documentation"
    },
    "section_title": "セキュリティ",
    "title": "Security Documentation - SysManage"
  },
  "ui_testing": {
    "best_practices": {
      "description": "Industry best practices for maintainable and reliable UI testing.",
      "maintenance": {
        "coverage": "Coverage Analysis: Ensure adequate coverage of critical user workflows",
        "flaky_test": "Flaky テスト Management: Identify and fix unreliable tests promptly",
        "performance": "パフォーマンス 監視: Track test execution times and optimize slow tests",
        "regular_updates": "Regular 更新s: Keep browser and framework versions current",
        "title": "Maintenance Guidelines"
      },
      "test_design": {
        "data_driven": "Data-Driven テストs: Parameterized tests for comprehensive scenario coverage",
        "idempotent": "Idempotent テストs: テストs can run multiple times with consistent results",
        "independent": "テスト Independence: Each test runs independently without dependencies",
        "page_object": "Page Object Pattern: Encapsulate page interactions in reusable objects",
        "title": "🎯 テスト Design Principles"
      },
      "title": "ベストプラクティス"
    },
    "breadcrumb": "UI テスト",
    "cicd_integration": {
      "badges": {
        "integration": "README Integration: Visible test status in project documentation",
        "real_time": "リアルタイム 更新s: 自動matic badge updates on test completion",
        "title": "ステータス Badges",
        "ui_tests": "UI テストs: Green 'Passing' / Red 'Failing' status badge"
      },
      "description": "Enterprise-grade CI/CD integration with GitHub Actions providing automated testing on every commit and pull request.",
      "github_actions": {
        "artifact_collection": "Artifact Collection: Screenshots and logs preserved for analysis",
        "comprehensive_logging": "Comprehensive ログging: Detailed output for debugging failed tests",
        "fail_fast": "Fail-Fast ログic: 停止 execution immediately on first test failure",
        "parallel_execution": "Parallel Execution: 戻るend, Frontend, and UI tests run concurrently",
        "title": "🚀 GitHub Actions Workflow"
      },
      "title": "CI/CD Integration",
      "workflow_steps": {
        "cleanup": "Cleanup: リソース cleanup and artifact preservation",
        "database_setup": "データベース セットアップ: PostgreSQL initialization and schema migration",
        "dependency_install": "Dependency インストール: 戻るend and frontend dependencies",
        "server_startup": "サーバー 開始up: アプリケーション startup with health checks",
        "setup": "環境 セットアップ: Python, ノード.js, and browser installation",
        "test_execution": "テスト Execution: Parallel test suite execution with failure detection",
        "title": "Workflow Execution Steps"
      }
    },
    "cross_platform": {
      "description": "Comprehensive testing strategy ensuring consistent behavior across all supported operating systems.",
      "intelligent_selection": {
        "makefile_logic": "Makefile ログic: 自動matic framework selection based on platform detection",
        "playwright_preferred": "Playwright Preferred: Used when available for superior performance",
        "selenium_fallback": "Selenium Fallback: 自動matic fallback for unsupported platforms",
        "title": "🧠 Intelligent フレームワーク Selection",
        "transparent_switching": "Transparent Switching: Same test interface regardless of underlying framework"
      },
      "platform_matrix": {
        "freebsd": "FreeBSD: Selenium with Chrome/Firefox support",
        "linux": "Linux: Playwright with full browser support (Chrome, Firefox, WebKit excluded)",
        "macos": "macOS: Playwright with complete browser support (Chrome, Firefox, WebKit)",
        "openbsd": "OpenBSD: Selenium with Chrome/Firefox support",
        "title": "📊 プラットフォーム テスト Matrix",
        "windows": "Windows: Playwright with full browser support (Chrome, Firefox, WebKit excluded)"
      },
      "title": "Cross-プラットフォーム テスト Strategy"
    },
    "database_integration": {
      "database_setup": {
        "real_postgres": "Real PostgreSQL: テストs run against actual production database schema",
        "rollback_support": "ロールバック サポート: Clean state restoration between test runs",
        "schema_sync": "スキーマ Synchronization: 自動matic schema migration before tests",
        "title": "データベース セットアップ",
        "transaction_isolation": "トランザクション Isolation: Each test runs in isolated database transaction"
      },
      "description": "Sophisticated database integration ensuring tests run against real PostgreSQL with proper user lifecycle management.",
      "title": "データベース Integration",
      "user_injection": {
        "argon2_hashing": "Argon2 パスワード Hashing: 本番-grade password security with configurable salt",
        "proper_cleanup": "Proper Cleanup: テスト users automatically removed after test completion",
        "title": "🔐 テスト ユーザー Injection",
        "unique_users": "Unique テスト ユーザーs: Each test run creates isolated test users",
        "yaml_configuration": "YAML 構成: Salt and database credentials from sysmanage.yaml"
      }
    },
    "debugging": {
      "common_issues": {
        "browser_not_found": "Browser いいえt Found: インストール missing browsers with make install-browsers",
        "database_connection": "データベース 接続: Verify PostgreSQL is running and accessible",
        "permission_errors": "権限 エラーs: Check file permissions for screenshot directory",
        "timeout_errors": "Timeout エラーs: Increase wait times for slow-loading elements",
        "title": "Common イシューs and Solutions"
      },
      "description": "Comprehensive debugging capabilities ensuring rapid issue resolution and test reliability.",
      "logging": {
        "browser_logs": "Browser ログs: Console output and JavaScript errors captured",
        "network_logs": "ネットワーク ログs: HTTP requests and responses monitored",
        "timing_info": "Timing 情報rmation: パフォーマンス metrics for slow operations",
        "title": "ログging and Diagnostics",
        "verbose_output": "Verbose Output: Detailed test execution logs"
      },
      "screenshot_capture": {
        "automatic": "自動matic Capture: Screenshots taken on test failure",
        "browser_context": "Browser Context: Screenshots include browser and page state",
        "storage_location": "ストレージ Location: Screenshots saved to /tmp/claude/ for examination",
        "timestamped": "Timestamped ファイルs: Screenshots saved with timestamp for analysis",
        "title": "📸 Screenshot Capture"
      },
      "title": "デバッグging and Troubleshooting"
    },
    "description": "Revolutionary triple testing framework featuring Playwright (primary), Selenium (fallback), and comprehensive CI/CD integration for cross-platform UI testing excellence.",
    "header": {
      "subtitle": "Enterprise-grade UI testing with intelligent browser selection and cross-platform compatibility",
      "title": "Cross-プラットフォーム UI テスト フレームワーク"
    },
    "makefile_integration": {
      "commands": {
        "install_browsers": "make install-browsers: インストール required browser dependencies",
        "test_all": "make test: 実行 complete test suite (戻るend + Frontend + UI)",
        "test_playwright": "make test-playwright: Force Playwright execution (if available)",
        "test_selenium": "make test-selenium: Force Selenium execution",
        "test_ui": "make test-ui: 実行 all UI tests with intelligent framework selection",
        "title": "🔧 利用可能 Commands"
      },
      "description": "Seamless integration with existing build system providing simple commands for complex testing operations.",
      "platform_detection": {
        "automatic": "自動matic Detection: Makefile detects OS and selects appropriate framework",
        "dependency_check": "Dependency Check: Verifies required browsers and drivers are available",
        "error_reporting": "エラー レポートing: Clear messages when dependencies are missing",
        "graceful_fallback": "Graceful Fallback: Falls back to Selenium if Playwright unavailable",
        "title": "プラットフォーム Detection ログic"
      },
      "title": "Makefile Integration"
    },
    "navigation": {
      "database_security": "データベースセキュリティ →",
      "testing": "← テスト 概要",
      "title": "Quick Navigation"
    },
    "overview": {
      "architecture": {
        "cicd_integration": "CI/CD Integration: GitHub Actions with fail-fast logic and comprehensive error reporting",
        "playwright_primary": "Playwright (Primary): Linux, macOS, Windows - Full cross-browser support with Chrome, Firefox, and WebKit",
        "selenium_fallback": "Selenium (Fallback): OpenBSD, FreeBSD - Reliable WebDriver automation where Playwright is unavailable",
        "title": "🏗️ Triple テスト アーキテクチャ"
      },
      "benefits": {
        "ci_optimization": "CI/CD Optimized: Fail-fast execution with comprehensive debugging output",
        "cross_browser": "Cross-Browser Compatibility: Chrome, Firefox, Safari/WebKit support",
        "cross_platform": "Cross-プラットフォーム Excellence: Seamless testing across 5 operating systems",
        "intelligent_selection": "Intelligent Selection: フレームワーク automatically chooses optimal testing tool per platform",
        "production_parity": "本番 Parity: Real database integration with proper user lifecycle management",
        "title": "Key Benefits"
      },
      "description": "SysManage implements a revolutionary triple testing framework that automatically adapts to platform capabilities, ensuring comprehensive UI test coverage across all supported environments.",
      "title": "フレームワーク 概要"
    },
    "playwright": {
      "browser_support": {
        "chromium": "Chromium: Full support on all platforms (Linux, macOS, Windows)",
        "firefox": "Firefox: Full support on all platforms",
        "title": "Browser サポート Matrix",
        "webkit": "WebKit (Safari): macOS only - automatically excluded on other platforms"
      },
      "configuration": {
        "authentication": "Argon2 password hashing with salt from sysmanage.yaml",
        "cleanup": "自動matic test user cleanup after test completion",
        "conftest": "Playwright fixtures defined in /tests/ui/conftest.py",
        "database": "Real PostgreSQL database integration with proper user injection",
        "title": "構成"
      },
      "description": "Modern browser automation framework providing cross-browser testing with enterprise-grade reliability.",
      "features": {
        "async_native": "Async Native: Built for modern JavaScript with native async/await support",
        "auto_wait": "自動-Wait: Intelligent waiting for elements without explicit sleeps",
        "cross_browser": "Cross-Browser テスト: Chromium, Firefox, WebKit (Safari) support",
        "mobile_testing": "Mobile テスト: Device emulation and touch interaction support",
        "network_interception": "ネットワーク Interception: Mock and monitor network requests",
        "screenshots": "自動matic Screenshots: Failure debugging with visual evidence",
        "title": "🎭 Playwright 機能"
      },
      "title": "Playwright テスト (Primary フレームワーク)"
    },
    "selenium": {
      "configuration": {
        "browser_detection": "Intelligent browser detection and driver selection",
        "screenshot_support": "Screenshot capture for debugging failed tests",
        "timeout_handling": "Robust timeout and error handling",
        "title": "構成",
        "webdriver_manager": "自動matic WebDriver management with webdriver-manager"
      },
      "description": "Reliable WebDriver automation framework serving as intelligent fallback for platforms where Playwright is unavailable.",
      "features": {
        "broad_support": "Broad Browser サポート: Chrome, Firefox, Edge, Safari compatibility",
        "cross_platform": "Cross-プラットフォーム: Consistent behavior across all operating systems",
        "stable_api": "Stable API: Mature and well-documented automation interface",
        "title": "Selenium 機能",
        "webdriver": "WebDriver Standard: Industry-standard browser automation protocol"
      },
      "title": "Selenium テスト (Fallback フレームワーク)",
      "use_cases": {
        "freebsd": "FreeBSD: Primary testing framework (Playwright unavailable)",
        "legacy_systems": "Legacy システムs: Broader compatibility with older browsers",
        "openbsd": "OpenBSD: Primary testing framework (Playwright unavailable)",
        "specific_drivers": "Specific Drivers: When particular WebDriver features are required",
        "title": "🔄 When Selenium is Used"
      }
    },
    "test_structure": {
      "description": "Well-organized test structure ensuring maintainability and comprehensive coverage.",
      "file_organization": {
        "conftest_playwright": "/tests/ui/conftest.py - Playwright fixtures and configuration",
        "conftest_selenium": "/tests/ui/conftest_selenium.py - Selenium fixtures and configuration",
        "cross_browser": "/tests/ui/test_login_cross_browser.py - Cross-browser login testing",
        "test_files": "/tests/ui/test_*.py - Individual test files with specific scenarios",
        "title": "📁 ファイル Organization"
      },
      "test_scenarios": {
        "cross_browser": "Cross-Browser: Identical tests across Chrome, Firefox, WebKit",
        "error_handling": "エラー Handling: Invalid credentials and error message validation",
        "login_flow": "ログイン Flow: Complete authentication workflow testing",
        "navigation": "Navigation: Post-login navigation and user interface validation",
        "responsive": "Responsive Design: UI testing across different viewport sizes",
        "title": "テスト Scenarios"
      },
      "title": "テスト Structure and Organization"
    },
    "title": "Cross-プラットフォーム UI テスト フレームワーク - SysManage"
  }
}