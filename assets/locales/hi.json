{
  "administration": {
    "host_management": {
      "agent_deployment": "Agent Deployment",
      "agent_lifecycle_management": "Agent Lifecycle Management",
      "agent_troubleshooting": "Agent Troubleshooting",
      "agent_updates": "Agent Updates",
      "approval_criteria": "Approval Criteria",
      "approval_workflow": "Approval Workflow",
      "automation_integration": "Automation Integration",
      "available_bulk_operations": "Available Bulk Operations",
      "best_practices": "Host Management Best Practices",
      "bulk_operation_process": "Bulk Operation Process",
      "bulk_operations": "Bulk Operations",
      "cloud_integration": "Cloud Integration",
      "collected_information": "Collected Information",
      "common_issues": "Common Issues",
      "common_tag_categories": "Common Tag Categories",
      "configuration_management": "Configuration Management",
      "creating_host_groups": "Creating Host Groups",
      "deployment_best_practices": "Deployment Best Practices",
      "deployment_methods": "Deployment Methods",
      "diagnostic_tools": "Diagnostic Tools",
      "dynamic_group_assignment": "Dynamic Group Assignment",
      "group_types": "Group Types",
      "hardware_inventory": "Hardware Inventory",
      "host_groups": "Host Groups",
      "host_organization": "Host Organization",
      "host_registration_approval": "Host Registration and Approval",
      "inventory_management": "Infrastructure Inventory Management",
      "inventory_reports": "Inventory Reports",
      "key_concepts": "Key Concepts",
      "mass_actions": "Mass Management Actions",
      "operational_practices": "Operational Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "overview": "Overview",
      "registration_process": "Registration Process",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "security_practices": "Security Best Practices",
      "software_inventory": "Software Inventory",
      "software_reports": "Software Reports",
      "software_tracking": "Software Tracking",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "tag_management": "Tag Management",
      "tagging_metadata": "Tagging and Metadata",
      "title": "Host Management",
      "update_process": "Update Process",
      "update_strategy": "Update Strategy"
    },
    "monitoring": {
      "access_control": "Access Control",
      "agent_performance": "Agent Performance",
      "alert_configuration": "Alert Configuration",
      "alert_design": "Alert Design Best Practices",
      "alert_suppression": "Alert Suppression",
      "alert_types": "Alert Types",
      "alerting_system": "Alerting System",
      "api_integration": "API Integration",
      "application_dashboards": "Application Dashboards",
      "application_service_metrics": "Application and Service Metrics",
      "channel_configuration": "Channel Configuration",
      "collection_intervals": "Collection Intervals",
      "collection_optimization": "Collection Optimization",
      "core_system_checks": "Core System Checks",
      "cpu_metrics": "CPU Metrics",
      "custom_health_checks": "Custom Health Checks",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_customization": "Dashboard Customization",
      "dashboard_design": "Dashboard Design Best Practices",
      "dashboard_types": "Dashboard Types",
      "data_retention": "Data Retention Policies",
      "database_monitoring": "Database Monitoring",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "executive_dashboards": "Executive Dashboards",
      "health_checks": "Health Check Configuration",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "layout_options": "Layout Options",
      "memory_metrics": "Memory Metrics",
      "metrics_collection": "Metrics Collection",
      "monitoring_best_practices": "Monitoring Best Practices",
      "monitoring_capabilities": "Monitoring Capabilities",
      "network_metrics": "Network Metrics",
      "notification_channels": "Notification Channels",
      "operational_practices": "Operational Best Practices",
      "operations_dashboards": "Operations Dashboards",
      "overview": "Overview",
      "performance_optimization": "Monitoring Performance Optimization",
      "retention_strategies": "Retention Strategies",
      "service_health_checks": "Service Health Checks",
      "service_monitoring": "Service Monitoring",
      "storage_metrics": "Storage Metrics",
      "storage_optimization": "Storage Optimization",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "supported_channels": "Supported Channels",
      "system_health": "System Health Checks",
      "system_performance_metrics": "System Performance Metrics",
      "threshold_configuration": "Threshold Configuration",
      "title": "Monitoring & Alerts",
      "web_server_monitoring": "Web Server Monitoring",
      "widget_types": "Widget Types"
    },
    "subtitle": "Comprehensive system administration guides and procedures",
    "title": "Administration",
    "user_management": {
      "account_deactivation": "Account Deactivation",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deletion": "Account Deletion",
      "account_security": "Account Security",
      "active_session_monitoring": "Active Session Monitoring",
      "administrative_updates": "Administrative Updates",
      "administrator": "Administrator",
      "api_example": "API Example",
      "auditor": "Auditor",
      "authentication_methods": "Authentication Methods",
      "authentication_security": "Authentication Security",
      "built_in_roles": "Built-in Roles",
      "common_user_workflows": "Common User Management Workflows",
      "compliance_considerations": "Compliance Considerations",
      "creating_custom_roles": "Creating Custom Roles",
      "creating_user_accounts": "Creating User Accounts",
      "custom_roles": "Custom Roles",
      "employee_offboarding": "Employee Offboarding",
      "external_authentication": "External Authentication",
      "integration_issues": "Integration Issues",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "local_authentication": "Local Authentication",
      "login_problems": "Login Problems",
      "mfa_configuration": "MFA Configuration",
      "modifying_user_accounts": "Modifying User Accounts",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "new_employee_onboarding": "New Employee Onboarding",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "operator": "Operator",
      "overview": "Overview",
      "password_policy_configuration": "Password Policy Configuration",
      "permission_issues": "Permission Issues",
      "permission_matrix": "Permission Matrix",
      "profile_updates": "Profile Updates",
      "role_change_process": "Role Change Process",
      "roles_permissions": "Roles and Permissions",
      "saml_integration": "SAML 2.0 Integration",
      "security_best_practices": "Security Best Practices",
      "security_incident_response": "Security Incident Response",
      "session_configuration": "Session Configuration",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "supported_mfa_methods": "Supported MFA Methods",
      "title": "User Management",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "user_account_management": "User Account Management",
      "viewer": "Viewer",
      "web_interface": "Web Interface"
    },
    "grafana_setup": {
      "title": "Grafana एकीकरण सेटअप",
      "subtitle": "OpenTelemetry का उपयोग करके उन्नत मेट्रिक्स विज़ुअलाइज़ेशन और मॉनिटरिंग के लिए SysManage को Grafana के साथ एकीकृत करने के लिए संपूर्ण गाइड।",
      "overview": "अवलोकन",
      "integration_benefits": "एकीकरण लाभ",
      "architecture_overview": "आर्किटेक्चर अवलोकन",
      "prerequisites": "पूर्वापेक्षाएँ",
      "grafana_server_requirements": "Grafana सर्वर आवश्यकताएँ",
      "network_connectivity": "नेटवर्क कनेक्टिविटी",
      "required_ports": "आवश्यक पोर्ट",
      "installing_grafana_alloy": "Grafana Alloy इंस्टॉल करना",
      "repository_setup": "रिपॉजिटरी सेटअप",
      "debian_ubuntu": "Debian/Ubuntu",
      "rhel_centos": "RHEL/CentOS",
      "package_installation": "पैकेज इंस्टॉलेशन",
      "service_enablement": "सेवा सक्रियण",
      "configuring_alloy_otlp": "OTLP मेट्रिक्स प्राप्त करने के लिए Alloy को कॉन्फ़िगर करना",
      "config_file_location": "कॉन्फ़िगरेशन फ़ाइल स्थान",
      "otlp_receiver_setup": "OTLP रिसीवर सेटअप",
      "receiver_configuration": "रिसीवर कॉन्फ़िगरेशन",
      "batch_processor": "बैच प्रोसेसर",
      "batch_processor_configuration": "बैच प्रोसेसर कॉन्फ़िगरेशन",
      "prometheus_exporter": "Prometheus एक्सपोर्टर",
      "exporter_configuration": "एक्सपोर्टर कॉन्फ़िगरेशन",
      "remote_write_config": "स्थानीय Prometheus में रिमोट राइट",
      "remote_write_configuration": "रिमोट राइट कॉन्फ़िगरेशन",
      "complete_config_example": "पूर्ण कॉन्फ़िगरेशन उदाहरण",
      "configuring_prometheus": "रिमोट राइट के लिए Prometheus को कॉन्फ़िगर करना",
      "prometheus_config_description": "Grafana Alloy से रिमोट राइट अनुरोधों को स्वीकार करने के लिए Prometheus को कॉन्फ़िगर किया जाना चाहिए। इसके लिए रिमोट राइट रिसीवर फ़ीचर को सक्षम करना आवश्यक है।",
      "enable_remote_write": "रिमोट राइट रिसीवर सक्षम करें",
      "enable_remote_write_description": "--web.enable-remote-write-receiver फ़्लैग जोड़ने के लिए Prometheus systemd सेवा फ़ाइल को संपादित करें:",
      "apply_prometheus_changes": "कॉन्फ़िगरेशन परिवर्तन लागू करें",
      "warning": "चेतावनी",
      "prometheus_warning": "--web.enable-remote-write-receiver फ़्लैग के बिना, Alloy को Prometheus में मेट्रिक्स लिखने का प्रयास करते समय \"404 Not Found\" त्रुटियाँ प्राप्त होंगी। यह एक आवश्यक कॉन्फ़िगरेशन चरण है।",
      "restart_alloy_after_prometheus": "Prometheus कॉन्फ़िगरेशन के बाद Alloy को पुनः आरंभ करें",
      "restart_alloy_description": "यदि Prometheus को कॉन्फ़िगर करने से पहले Alloy पहले से ही चल रहा था और त्रुटियों का सामना कर रहा था, तो किसी भी रीट्राई बैकऑफ़ स्थिति को साफ़ करने के लिए इसे पुनः आरंभ करें:",
      "enabling_grafana_integration": "SysManage में Grafana एकीकरण सक्षम करना",
      "web_ui_settings": "वेब UI सेटिंग्स",
      "accessing_settings": "एकीकरण सेटिंग्स तक पहुँचना",
      "providing_grafana_url": "Grafana URL प्रदान करना",
      "url_format": "URL फ़ॉर्मेट",
      "testing_connection": "कनेक्शन परीक्षण",
      "deploying_opentelemetry": "प्रबंधित होस्ट पर OpenTelemetry तैनात करना",
      "using_deploy_button": "OpenTelemetry तैनात करें बटन का उपयोग करना",
      "deployment_process": "तैनाती प्रक्रिया",
      "automatic_configuration": "स्वचालित कॉन्फ़िगरेशन",
      "service_status_monitoring": "सेवा स्थिति मॉनिटरिंग",
      "verifying_deployment": "तैनाती सत्यापित करना",
      "verifying_telemetry_flow": "टेलीमेट्री फ़्लो सत्यापित करना",
      "checking_collector_logs": "कलेक्टर लॉग जाँचना",
      "log_locations": "लॉग स्थान",
      "log_interpretation": "लॉग व्याख्या",
      "viewing_metrics_grafana": "Grafana में मेट्रिक्स देखना",
      "creating_dashboards": "डैशबोर्ड बनाना",
      "exploring_metrics": "मेट्रिक्स एक्सप्लोर करना",
      "sample_queries": "नमूना Prometheus क्वेरी",
      "troubleshooting": "सामान्य समस्याओं का निवारण",
      "connection_issues": "कनेक्शन समस्याएँ",
      "alloy_not_receiving_metrics": "Alloy मेट्रिक्स प्राप्त नहीं कर रहा है",
      "metrics_not_appearing_grafana": "मेट्रिक्स Grafana में दिखाई नहीं दे रहे हैं",
      "collector_service_issues": "OpenTelemetry कलेक्टर सेवा समस्याएँ",
      "performance_issues": "प्रदर्शन समस्याएँ",
      "security_considerations": "सुरक्षा विचार",
      "tls_configuration": "TLS कॉन्फ़िगरेशन",
      "authentication": "प्रमाणीकरण",
      "network_security": "नेटवर्क सुरक्षा",
      "best_practices": "सर्वोत्तम प्रथाएँ",
      "deployment_strategy": "तैनाती रणनीति",
      "monitoring_setup": "मॉनिटरिंग सेटअप सर्वोत्तम प्रथाएँ",
      "maintenance": "रखरखाव और अपडेट"
    },
    "third_party_repositories": {
      "adding": {
        "examples": {
          "chocolatey_private": "Chocolatey Private Repository Example",
          "freebsd_custom": "FreeBSD Custom Repository Example",
          "homebrew_tap": "Homebrew Tap Example",
          "rhel_epel": "RHEL EPEL Example",
          "title": "Repository Configuration Examples",
          "ubuntu_ppa": "Ubuntu PPA Example",
          "ubuntu_ppa_gpg": "Ubuntu Ppa Gpg"
        },
        "title": "Adding Third-Party Repositories",
        "web_interface": {
          "automatic_detection": "Automatic OS Detection",
          "automatic_detection_desc": "When you add a repository for a specific operating system (e.g., Ubuntu 24.04), SysManage automatically:",
          "detection_feature1": "Identifies all hosts running that OS version",
          "detection_feature2": "Sends repository configuration to matching agents",
          "detection_feature3": "Imports GPG keys if provided",
          "detection_feature4": "Updates package cache",
          "detection_feature5": "Reports success/failure for each host",
          "step1": "Navigate to Settings → Third-Party Repositories",
          "step2": "Select the target operating system from the dropdown",
          "step3": "Enter the repository configuration (format varies by OS)",
          "step4": "Optionally provide GPG key URL or content (for Linux systems)",
          "step5": "Review the configuration in the preview pane",
          "step6": "Click \"Add Repository\" to apply to all compatible hosts",
          "step_by_step": "Step-by-Step Process",
          "title": "Using the Web Interface"
        }
      },
      "api": {
        "add_repository": "Add Repository",
        "automation": {
          "bash_script": "Bash Script Example",
          "title": "Automation Examples"
        },
        "endpoints": {
          "title": "REST API Endpoints"
        },
        "list_repositories": "List Repositories",
        "remove_repository": "Remove Repository",
        "title": "API Integration"
      },
      "best_practices": {
        "organizational": {
          "approval_workflow": "Approval Workflow:",
          "approval_workflow_desc": "Require manager approval before adding repositories",
          "documentation": "Documentation:",
          "documentation_desc": "Maintain a registry of approved repositories and their purposes",
          "periodic_review": "Periodic Review:",
          "periodic_review_desc": "Quarterly reviews of all third-party repositories",
          "testing_procedure": "Testing Procedure:",
          "testing_procedure_desc": "Establish testing protocols for new repositories",
          "title": "Organizational Best Practices",
          "version_control": "Version Control:",
          "version_control_desc": "Track repository configurations in version control systems"
        },
        "technical": {
          "backup_keys": "Backup Keys:",
          "backup_keys_desc": "Maintain offline backups of GPG keys",
          "mirror_repos": "Mirror Repositories:",
          "mirror_repos_desc": "Host internal mirrors of critical third-party repositories",
          "monitor_changes": "Monitor Changes:",
          "monitor_changes_desc": "Set up alerts for repository configuration changes",
          "pin_versions": "Pin Versions:",
          "pin_versions_desc": "Use version-specific repository URLs where possible",
          "staged_rollout": "Staged Rollout:",
          "staged_rollout_desc": "Deploy to dev → test → production environments sequentially",
          "title": "Technical Best Practices"
        },
        "title": "Best Practices"
      },
      "database": {
        "field_added_by": "Administrator who added the repository",
        "field_descriptions": "Field Descriptions",
        "field_gpg_key_content": "GPG key content (alternative to URL)",
        "field_gpg_key_url": "URL to GPG signing key (for verification)",
        "field_os_name": "Target operating system name",
        "field_os_version": "Specific OS version",
        "field_repository_config": "Complete repository configuration text",
        "table_description": "The",
        "table_title": "Third-Party Repositories Table",
        "title": "Database Schema"
      },
      "management": {
        "removing": {
          "description": "To remove a third-party repository:",
          "step1": "Locate the repository in the list",
          "step2": "Click the \"Remove\" button",
          "step3": "Confirm the removal in the dialog",
          "step4": "SysManage removes the configuration from all affected hosts",
          "step5": "Package cache is updated on each host",
          "title": "Removing Repositories",
          "warning": "Warning"
        },
        "title": "Repository Management",
        "updating": {
          "description": "To modify an existing repository configuration:",
          "note": "SysManage currently does not support in-place editing of repository configurations to prevent accidental changes across the infrastructure.",
          "step1": "Remove the old repository configuration",
          "step2": "Add the new configuration with updated settings",
          "title": "Updating Repository Configurations"
        },
        "viewing": {
          "configuration_preview": "Configuration Preview:",
          "configuration_preview_desc": "View full repository configuration",
          "description": "The Third-Party Repositories page displays all configured repositories organized by operating system:",
          "host_count": "Host Count:",
          "host_count_desc": "Number of hosts using this repository",
          "metadata": "Metadata:",
          "metadata_desc": "Added by user, timestamp, GPG key status",
          "os_grouping": "OS Grouping:",
          "os_grouping_desc": "Repositories grouped by target OS (Ubuntu 24.04, RHEL 9, etc.)",
          "title": "Viewing Configured Repositories"
        }
      },
      "overview": {
        "description": "SysManage provides centralized management of third-party package repositories across multiple operating systems. This feature allows administrators to add, configure, and manage additional software sources for all supported platforms except OpenBSD, which by design does not support third-party repositories.",
        "feature_automatic_detection_desc": "OS-specific repository format and GPG key handling",
        "feature_automatic_detection_title": "Automatic Detection:",
        "feature_centralized_desc": "Manage repositories across entire fleet from single interface",
        "feature_centralized_title": "Centralized Management:",
        "feature_cross_platform_desc": "Manage repositories on Debian, Ubuntu, RHEL, CentOS, Fedora, SUSE, FreeBSD, NetBSD, Windows, and macOS",
        "feature_cross_platform_title": "Cross-Platform Support:",
        "feature_gpg_key_desc": "Automated GPG key import and verification",
        "feature_gpg_key_title": "GPG Key Management:",
        "feature_user_attribution_desc": "Track which administrator added each repository",
        "feature_user_attribution_title": "User Attribution:",
        "feature_validation_desc": "Syntax validation and confirmation dialogs",
        "feature_validation_title": "Validation & Safety:",
        "key_features": "Key Features",
        "title": "Overview"
      },
      "related_api": "Third-Party Repositories API →",
      "related_docs": "Related Documentation",
      "related_host_management": "Host Management →",
      "related_package_management": "Package Management →",
      "security": {
        "best_practices": {
          "audit_regularly": "Audit Regularly:",
          "audit_regularly_desc": "Review configured repositories periodically",
          "document_purpose": "Document Purpose:",
          "document_purpose_desc": "Maintain documentation of why each repository was added",
          "gpg_keys": "Use GPG Keys:",
          "gpg_keys_desc": "Always provide GPG keys for package verification on Linux systems",
          "https": "HTTPS Required:",
          "https_desc": "Use HTTPS repository URLs to prevent man-in-the-middle attacks",
          "test_first": "Test First:",
          "test_first_desc": "Test new repositories on non-production systems first",
          "title": "Best Practices",
          "verify_sources": "Verify Sources:",
          "verify_sources_desc": "Only add repositories from trusted, verified sources"
        },
        "compliance": {
          "approval_process": "Establish formal approval processes for adding repositories",
          "audit_trail": "Maintain audit trails of repository additions and removals",
          "description": "When managing third-party repositories in regulated environments:",
          "license_compliance": "Verify license compliance for software from third-party sources",
          "risk_assessment": "Perform security risk assessments before adding new sources",
          "title": "Compliance Considerations",
          "vendor_support": "Document vendor support implications of third-party software"
        },
        "title": "Security Considerations",
        "warnings": {
          "abandoned_repos": "Abandoned Repos",
          "http_repos": "Http Repos",
          "malicious_packages": "Malicious Packages",
          "title": "Security Warnings",
          "untrusted_keys": "Untrusted Keys"
        }
      },
      "subtitle": "Comprehensive guide to managing third-party package repositories across your infrastructure for Debian, Ubuntu, RHEL-based, SUSE-based, FreeBSD, NetBSD, Windows, and macOS systems.",
      "supported_systems": {
        "debian_ubuntu": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Imported via",
          "repository_format": "Repository Format:",
          "storage_location": "Storage Location:",
          "title": "Debian & Ubuntu",
          "update_command": "Update Command:"
        },
        "freebsd": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Package signature verification via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "Repository URL configuration",
          "storage_location": "Storage Location:",
          "title": "FreeBSD",
          "update_command": "Update Command:"
        },
        "macos": {
          "add_command": "Add Command:",
          "authentication": "Authentication:",
          "authentication_desc": "Git-based authentication for private taps",
          "repository_format": "Repository Format:",
          "repository_format_desc": "Tap URLs (GitHub or custom)",
          "title": "macOS (Homebrew)",
          "update_command": "Update Command:"
        },
        "netbsd": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Package signature verification via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "environment variable",
          "storage_location": "Storage Location:",
          "title": "NetBSD",
          "update_command": "Update Command:"
        },
        "openbsd": {
          "description": "OpenBSD does not support third-party package repositories by design. The OpenBSD package system exclusively uses official release-specific repositories maintained by the OpenBSD project. This is a deliberate security and stability design decision by the OpenBSD team.",
          "title": "OpenBSD - Not Supported"
        },
        "rhel_based": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Imported via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "files with INI-style configuration",
          "storage_location": "Storage Location:",
          "title": "RHEL-Based (CentOS, Fedora, Rocky, AlmaLinux)",
          "update_command": "Update Command:",
          "update_command_desc": "or"
        },
        "suse_based": {
          "gpg_keys": "GPG Keys:",
          "gpg_keys_desc": "Imported via",
          "repository_format": "Repository Format:",
          "repository_format_desc": "files managed via",
          "storage_location": "Storage Location:",
          "title": "SUSE-Based (openSUSE, SLES)",
          "update_command": "Update Command:"
        },
        "title": "Supported Operating Systems",
        "windows": {
          "add_command": "Add Command:",
          "authentication": "Authentication:",
          "authentication_desc": "Supports username/password and API key authentication",
          "repository_format": "Repository Format:",
          "repository_format_desc": "Repository URL or local path",
          "ssl_verification": "SSL Verification:",
          "ssl_verification_desc": "Optional certificate validation bypass",
          "title": "Windows (Chocolatey)"
        }
      },
      "title": "Third-Party Repository Management",
      "troubleshooting": {
        "common_issues": {
          "title": "Common Issues and Solutions"
        },
        "diagnostic_commands": {
          "debian_ubuntu": "Debian/Ubuntu",
          "description": "Run these commands on target hosts to diagnose repository issues:",
          "freebsd": "FreeBSD",
          "rhel_based": "RHEL-Based Systems",
          "title": "Diagnostic Commands"
        },
        "gpg_key_import_failed": "GPG Key Import Failed",
        "gpg_key_import_failed_solution1": "Verify GPG key URL is accessible from target hosts",
        "gpg_key_import_failed_solution2": "Check network connectivity and firewall rules",
        "gpg_key_import_failed_solution3": "Try providing GPG key content directly instead of URL",
        "gpg_key_import_failed_solution4": "Verify key format is correct for the operating system",
        "gpg_key_import_failed_solutions": "Gpg Key Import Failed Solutions",
        "gpg_key_import_failed_symptoms": "Gpg Key Import Failed Symptoms",
        "hosts_not_receiving": "Some Hosts Not Receiving Repository Configuration",
        "hosts_not_receiving_solution1": "Verify hosts are online and connected to SysManage",
        "hosts_not_receiving_solution2": "Check OS name and version match exactly",
        "hosts_not_receiving_solution3": "Review WebSocket connection status for affected hosts",
        "hosts_not_receiving_solution4": "Check for agent permission issues (root/administrator required)",
        "hosts_not_receiving_solutions": "Hosts Not Receiving Solutions",
        "hosts_not_receiving_symptoms": "Hosts Not Receiving Symptoms",
        "permission_denied": "Permission Denied Errors",
        "permission_denied_solution1": "Ensure SysManage agent is running with elevated privileges",
        "permission_denied_solution2": "Check file permissions on repository configuration directories",
        "permission_denied_solution3": "Verify SELinux/AppArmor policies allow repository modifications",
        "permission_denied_solutions": "Permission Denied Solutions",
        "permission_denied_symptoms": "Permission Denied Symptoms",
        "repository_not_found": "Repository Not Found After Adding",
        "repository_not_found_solution1": "Verify repository URL is correct and accessible",
        "repository_not_found_solution2": "Check OS version matches repository configuration",
        "repository_not_found_solution3": "Ensure package cache was updated on target hosts",
        "repository_not_found_solution4": "Review agent logs for error messages",
        "repository_not_found_solutions": "Repository Not Found Solutions",
        "repository_not_found_symptoms": "Repository Not Found Symptoms",
        "title": "Troubleshooting"
      }
    }
  },
  "agent_docs": {
    "architecture": {
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "description": "The agent operates as a persistent service with the following workflow:",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity",
      "title": "Agent Architecture"
    },
    "configuration": {
      "auto_discovery": "Auto-discovery setup (recommended)",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "link": "Configuration Guide →",
      "logging": "Logging and internationalization",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "title": "⚙️ Configuration"
    },
    "cross_platform": {
      "bsd": "BSD-specific considerations",
      "description": "Platform-specific features, package managers, and system integration details.",
      "link": "Cross-Platform Guide →",
      "linux": "Linux distributions and package managers",
      "macos": "macOS launchd configuration",
      "title": "🌍 Cross-Platform Support",
      "windows": "Windows service integration"
    },
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms.",
      "title": "Agent Documentation"
    },
    "installation": {
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "link": "Installation Guide →",
      "methods": "Installation methods (source, packages)",
      "prerequisites": "Prerequisites and system requirements",
      "service": "Service configuration",
      "title": "🚀 Installation",
      "venv": "Virtual environment setup"
    },
    "navigation": {
      "api": "API Reference →",
      "server": "← Server Documentation",
      "title": "Quick Navigation"
    },
    "overview": {
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "features_title": "Key Features",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "platform_freebsd": "🔒 FreeBSD",
      "platform_linux": "🐧 Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_macos": "🍎 macOS (Intel and Apple Silicon)",
      "platform_openbsd": "🛡️ OpenBSD",
      "platform_windows": "🪟 Windows (10, 11, Server 2019/2022)",
      "platforms_title": "Supported Platforms",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "title": "Overview",
      "platform_netbsd": "🔧 NetBSD"
    },
    "privileged": {
      "cross_platform": "Cross-platform privileged execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "link": "Privileged Execution →",
      "scripts": "Automated privilege scripts",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "title": "🔐 Privileged Execution"
    },
    "section_title": "Agent",
    "security": {
      "certificates": "Certificate management",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) authentication",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "title": "🔒 Security"
    },
    "title": "Agent Documentation - SysManage",
    "troubleshooting": {
      "connection": "Connection and network issues",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "link": "Troubleshooting Guide →",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "title": "🔧 Troubleshooting"
    }
  },
  "agent_installation": {
    "breadcrumb": {
      "agent": "प्रतिनिधि",
      "documentation": "प्रलेखन",
      "installation": "इंस्टालेशन"
    },
    "configuration": {
      "auto_discovery": {
        "agent_ports": "एजेंट पोर्ट (आउटबाउंड):",
        "description": "SysManage एजेंट में स्वचालित सर्वर डिस्कवरी शामिल है जो मैनुअल कॉन्फ़िगरेशन को समाप्त करता है:",
        "how_it_works": "🔍 ऑटो-डिस्कवरी कैसे काम करता है",
        "network_ports": "🌐 आवश्यक नेटवर्क पोर्ट",
        "step1": "कोई कॉन्फ़िगरेशन की आवश्यकता नहीं है:",
        "step1_desc": "यदि कोई कॉन्फ़िगरेशन फ़ाइल मौजूद नहीं है, तो एजेंट स्वचालित रूप से सर्वर की खोज करने का प्रयास करता है",
        "step2": "नेटवर्क स्कैनिंग:",
        "step2_desc": "UDP प्रसारण खोज अनुरोध भेजता है और सर्वर घोषणाओं के लिए सुनता है",
        "step3": "सर्वर मूल्यांकन:",
        "step3_desc": "स्कोरिंग सिस्टम का उपयोग करता है (एसएसएल वरीयता, स्थानीय नेटवर्क वरीयता)",
        "step4": "स्वचालित कॉन्फ़िगरेशन:",
        "step4_desc": "पूर्ण कॉन्फ़िगरेशन फ़ाइल लिखता है और सामान्य ऑपरेशन शुरू करता है",
        "tcp_6443": "टीसीपी 6443",
        "tcp_6443_desc": "(या सर्वर पोर्ट) - खोजे गए सर्वर के लिए HTTPS कनेक्शन",
        "title": "स्वत: खोज (अनुशंसित)",
        "udp_31337": "UDP 31337",
        "udp_31337_desc": "सर्वर को खोज अनुरोध भेजें",
        "udp_31338": "यूडीपी 31338",
        "udp_31338_desc": "सर्वर घोषणाओं के लिए सुनें"
      },
      "manual": {
        "create_text": "या मैन्युअल रूप से कॉन्फ़िगरेशन फ़ाइल बनाएं:",
        "generator_link": "विन्यास बिल्डर उपकरण",
        "generator_suffix": "अपने वातावरण के लिए अनुकूलित एजेंट कॉन्फ़िगरेशन फ़ाइलें उत्पन्न करने के लिए।",
        "generator_text": "इंटरैक्टिव का उपयोग करें",
        "generator_title": "💡 कॉन्फ़िगरेशन जनरेटर उपलब्ध है",
        "linux_path": "लिनक्स/मैकओएस/बीएसडी:",
        "title": "मैनुअल कॉन्फ़िगरेशन (वैकल्पिक)",
        "windows_path": "Windows:"
      },
      "title": "विन्यास"
    },
    "description": "Linux, Windows, macOS, FreeBSD, OpenBSD, और NetBSD प्लेटफ़ॉर्म पर SysManage एजेंट के लिए संपूर्ण स्थापना मार्गदर्शिका।",
    "header": {
      "subtitle": "सभी समर्थित प्लेटफार्मों में sysmanage एजेंटों को तैनात करने के लिए चरण-दर-चरण स्थापना गाइड को पूरा करें।",
      "title": "एजेंट स्थापना मार्गदर्शिका"
    },
    "installation": {
      "method1": {
        "title": "विधि 1: स्रोत से (अनुशंसित)"
      },
      "method2": {
        "title": "विधि 2: प्रत्यक्ष स्थापना"
      },
      "title": "स्थापना विधियाँ"
    },
    "navigation": {
      "next": "कॉन्फ़िगरेशन गाइड →",
      "prev": "← एजेंट डॉक्यूमेंटेशन"
    },
    "openbsd_notes": {
      "description": "OpenBSD उपयोगकर्ताओं को जंग की स्थापना पर विशेष ध्यान देने की आवश्यकता है:",
      "security_note_text": "एजेंट को सुरक्षित प्रमाणपत्र-आधारित प्रमाणीकरण के लिए क्रिप्टोग्राफी समर्थन की आवश्यकता होती है। इन सुरक्षा पैकेजों के निर्माण के लिए जंग अनिवार्य है। रन स्क्रिप्ट स्वचालित रूप से पता लगाती है कि क्या जंग उपलब्ध है और उपयुक्त स्थापना विधियों का उपयोग करती है।",
      "security_note_title": "🔐 सुरक्षा नोट",
      "title": "OpenBSD- विशिष्ट स्थापना नोट्स"
    },
    "permissions": {
      "certificate": {
        "linux_path": "लिनक्स/मैकओएस/बीएसडी:",
        "title": "प्रमाणपत्र भंडारण",
        "windows_path": "Windows:"
      },
      "config": {
        "title": "विन्यास संचिका"
      },
      "dev_note_text": "विकास और परीक्षण के दौरान, एप्लिकेशन स्वचालित रूप से परीक्षण वातावरण का पता लगाता है और अनुमति के मुद्दों से बचने के लिए अस्थायी निर्देशिकाओं का उपयोग करता है।",
      "dev_note_title": "📝 विकास नोट",
      "log": {
        "title": "लॉग निर्देशिका"
      },
      "title": "आवश्यक निर्देशिका और अनुमतियाँ",
      "user": {
        "title": "सेवा उपयोगकर्ता खाता"
      }
    },
    "prerequisites": {
      "centos": {
        "tab": "सेंटोस/आरएचईएल",
        "title": "सेंटोस/आरएचईएल/फेडोरा"
      },
      "freebsd": {
        "tab": "FreeBSD",
        "title": "FreeBSD"
      },
      "macos": {
        "tab": "मैक ओएस",
        "title": "मैक ओएस"
      },
      "netbsd": {
        "important_text": "क्रिप्टोग्राफी पैकेज बनाने के लिए जंग की आवश्यकता है। एजेंट प्रमाणपत्र-आधारित प्रमाणीकरण का उपयोग करता है जिसे सुरक्षा के लिए क्रिप्टोग्राफी समर्थन की आवश्यकता होती है।",
        "important_title": "Net NetBSD के लिए महत्वपूर्ण है",
        "tab": "नेटबीएसडी",
        "title": "नेटबीएसडी"
      },
      "openbsd": {
        "important_text": "क्रिप्टोग्राफी पैकेज बनाने के लिए जंग की आवश्यकता है। एजेंट प्रमाणपत्र-आधारित प्रमाणीकरण का उपयोग करता है जिसे सुरक्षा के लिए क्रिप्टोग्राफी समर्थन की आवश्यकता होती है।",
        "important_title": "Open OpenBSD के लिए महत्वपूर्ण है",
        "tab": "OpenBSD",
        "title": "OpenBSD"
      },
      "opensuse": {
        "leap_desc": "स्थिर पैकेज का उपयोग करता है, मैनुअल जंग स्थापना की आवश्यकता हो सकती है",
        "leap_note": "OpenSuse लीप:",
        "note_title": "📦 पैकेज मैनेजर नोट्स",
        "python_desc": "पायथन 3.9+ के साथ लीप जहाज, नवीनतम स्थिर के साथ tumbleweed",
        "python_note": "पायथन संस्करण:",
        "tab": "खोलना",
        "title": "OpenSuse लीप/tumbleweed",
        "tumbleweed_desc": "रोलिंग रिलीज़, जंग उपलब्ध जिप्पर के माध्यम से उपलब्ध है",
        "tumbleweed_note": "Opensuse tumbleweed:"
      },
      "sles": {
        "firewall": "फ़ायरवॉल:",
        "firewall_desc": "Susefirewall2 या फ़ायरवॉल्ड एजेंट पोर्ट को ब्लॉक कर सकते हैं",
        "note_title": "🏢 उद्यम विचार",
        "selinux": "सेलिनक्स:",
        "selinux_desc": "सक्षम होने पर नीति समायोजन की आवश्यकता हो सकती है",
        "sles12": "SLES 12:",
        "sles12_desc": "नए पायथन के लिए सॉफ्टवेयर कलेक्शंस (SCL) की आवश्यकता हो सकती है",
        "sles15": "SLES 15:",
        "sles15_desc": "पायथन 3.6+ शामिल, लेकिन 3.9+ की सिफारिश की",
        "subscription": "सदस्यता:",
        "subscription_desc": "कुछ पैकेजों को सक्रिय एसएलईएस सदस्यता की आवश्यकता होती है",
        "tab": "स्लीस",
        "title": "SUSE LINUX एंटरप्राइज सर्वर (SLES)"
      },
      "title": "मंच-विशिष्ट आवश्यक शर्तें",
      "ubuntu": {
        "tab": "उबंटू/डेबियन",
        "title": "उबंटू 22.04 - 24.10"
      },
      "ubuntu25": {
        "note": "टिप्पणी:",
        "note_text": "Ubuntu 25.04+ केवल पायथन 3.13 के साथ जहाज। आपको स्रोत से पायथन 3.12 का निर्माण करना होगा:",
        "tab": "उबंटू 25.04+",
        "title": "Ubuntu 25.04+ (स्रोत से पायथन 3.12)"
      },
      "windows": {
        "step1": {
          "avoid": "अजगर 3.13 से बचें",
          "avoid_reason": "पैकेज संगतता मुद्दे",
          "check_path": "स्थापना के दौरान \"पायथन को पथ पर जोड़ें\" की जाँच करें",
          "download": "से डाउनलोड करना",
          "sqlite_included": "SQLite3 विंडोज पर पायथन के साथ शामिल है",
          "title": "पायथन 3.9-3.12:"
        },
        "step2": {
          "download": "से डाउनलोड करना",
          "instruction": "रस्टअप-init.exe चलाएं और संकेतों का पालन करें",
          "title": "जंग:"
        },
        "step3": {
          "description": "पायथन पैकेज के लिए आवश्यक बिल्ड टूल शामिल हैं",
          "download": "से डाउनलोड करना",
          "title": "खिड़कियों के लिए git:"
        },
        "step4": {
          "download": "डाउनलोड करना",
          "title": "विंडोज बिल्ड टूल्स (यदि आवश्यक हो):"
        },
        "tab": "खिंचाव",
        "title": "खिंचाव"
      }
    },
    "requirements": {
      "network": {
        "description": "आउटबाउंड HTTPS SysManage सर्वर तक पहुंच",
        "ports": "कोई इनबाउंड बंदरगाहों की आवश्यकता नहीं है",
        "required": "आवश्यक:",
        "title": "🌐 नेटवर्क एक्सेस"
      },
      "os": {
        "description": "क्रॉस-प्लेटफॉर्म संगतता",
        "platforms": "लिनक्स (उबंटू, सेंटोस/आरएचईएल, ओपनस्यूज़, एसएलईएस), विंडोज, मैकओएस, फ्रीबीएसडी, ओपनबीएसडी, नेटबीएसडी",
        "supported": "का समर्थन किया:",
        "title": "💻 ऑपरेटिंग सिस्टम"
      },
      "privileges": {
        "description": "व्यवस्था प्रबंधन के लिए प्रशासनिक अधिकार",
        "limitation": "सीमाओं के साथ नियमित उपयोगकर्ता के रूप में चला सकते हैं",
        "optional": "वैकल्पिक:",
        "title": "🛡 विशेषाधिकार"
      },
      "python": {
        "note": "नोट: पैकेज संगतता के कारण पायथन 3.13 अभी तक समर्थित नहीं है",
        "required": "आवश्यक:",
        "title": "🐍 पायथन",
        "version": "3.9, 3.11, या 3.12"
      },
      "title": "सिस्टम आवश्यकताएं"
    },
    "running": {
      "development": {
        "title": "विकास विधा"
      },
      "options": {
        "title": "कमांड लाइन विकल्प"
      },
      "title": "एजेंट चलाना"
    },
    "service": {
      "macos": {
        "create_text": "बनाएं",
        "create_title": "लॉन्च सेवा बनाएँ",
        "load_title": "सेवा लोड करें",
        "tab": "मैकओएस (लॉन्च)"
      },
      "opensuse": {
        "apparmor": "Apparmor:",
        "apparmor_desc": "Suse डिफ़ॉल्ट रूप से सेलिनक्स के बजाय Apparmor का उपयोग करता है",
        "commands_title": "सेवा प्रबंधन कमान",
        "create_text": "बनाएं",
        "firewall": "फ़ायरवॉल:",
        "firewall_desc": "YAST या फ़ायरवॉल-CMD के माध्यम से आवश्यक बंदरगाहों को खोलें",
        "logging": "लॉगिंग:",
        "logging_desc": "JournalCTL या/var/लॉग/संदेश के माध्यम से उपलब्ध लॉग",
        "note_title": "🏢 Suse एंटरप्राइज नोट्स",
        "selinux": "सेलिनक्स:",
        "selinux_desc": "सेटसेबूल या कस्टम नीतियों की आवश्यकता हो सकती है",
        "service_title": "OpenSuse/SLES SystemD Service",
        "tab": "OpenSuse/SLES"
      },
      "systemd": {
        "create_text": "बनाएं",
        "create_title": "SystemD सेवा फ़ाइल बनाएँ",
        "enable_title": "सेवा सक्षम करें और शुरू करें",
        "tab": "लिनक्स"
      },
      "title": "सेवा स्थापना",
      "windows": {
        "tab": "विंडोज सेवा",
        "title": "विंडोज सेवा स्थापना"
      }
    },
    "title": "एजेंट इंस्टॉलेशन गाइड - sysmanage",
    "troubleshooting": {
      "connection": {
        "dns": "DNS संकल्प:",
        "server": "सर्वर कनेक्टिविटी:",
        "ssl": "SSL प्रमाणपत्र:",
        "title": "कनेक्शन मुद्दे"
      },
      "discovery": {
        "firewall": "एजेंट और सर्वर दोनों पर फ़ायरवॉल नियमों की जाँच करें",
        "ports": "सुनिश्चित करें कि UDP पोर्ट 31337 और 31338 सुलभ हैं",
        "service": "सत्यापित सर्वर डिस्कवरी सेवा सक्षम है",
        "title": "ऑटो-डिस्कवरी मुद्दे"
      },
      "packages": {
        "crypto": "क्रिप्टोग्राफी निर्माण त्रुटियां:",
        "crypto_desc": "सुनिश्चित करें कि जंग स्थापित है और पथ में है",
        "missing": "गुम निर्भरता:",
        "missing_desc": "बिल्ड टूल और डेवलपमेंट लाइब्रेरी इंस्टॉल करें",
        "python313": "पायथन 3.13 संगतता:",
        "python313_desc": "इसके बजाय पायथन 3.11 या 3.12 का उपयोग करें",
        "title": "पायथन पैकेज मुद्दे"
      },
      "permission": {
        "check_log": "लॉग फाइल एक्सेस की जाँच करें:",
        "check_user": "एजेंट उपयोगकर्ता अनुमतियों की जाँच करें:",
        "title": "अनुमति के मुद्दे",
        "verify_file": "फ़ाइल अनुमतियों को सत्यापित करें:"
      },
      "title": "समस्या निवारण"
    }
  },
  "api": {
    "authentication": {
      "authentication_flow": "Authentication Flow",
      "error_responses": "Error Responses",
      "example": "Example",
      "login": "Login",
      "overview": "Overview",
      "password_reset": "Password Reset",
      "path_parameters": "Path Parameters",
      "refresh_token": "Refresh Token",
      "request_body": "Request Body",
      "reset_password": "Reset Password",
      "response": "Response",
      "security_best_practices": "Security Best Practices",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "title": "Authentication API",
      "token_expiration": "Token Expiration",
      "using_auth_tokens": "Using Authentication Tokens",
      "validate_reset_token": "Validate Reset Token"
    },
    "hosts": {
      "authentication_required": "Authentication Required",
      "bulk_operations": "Bulk Operations",
      "fleet_management": "Fleet Management",
      "hardware_system_info": "Hardware and System Information",
      "host_operations": "Host Operations",
      "important_notes": "Important Notes",
      "overview": "Overview",
      "software_package_info": "Software and Package Information",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "title": "Host Management API"
    },
    "packages": {
      "important_notes": "Important Notes",
      "os_upgrades": "OS Upgrades",
      "overview": "Overview",
      "package_cache_management": "Package Cache Management",
      "package_discovery": "Package Discovery",
      "package_installation": "Package Installation",
      "package_search": "Package Search",
      "package_updates": "Package Updates",
      "query_parameters": "Query Parameters",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "title": "Package Management API"
    },
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "title": "API Reference"
  },
  "api_docs": {
    "description": "Complete REST API documentation for integrating with SysManage.",
    "header": {
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically.",
      "title": "API Reference"
    },
    "overview": {
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features",
      "title": "Overview"
    },
    "section_title": "API Reference",
    "title": "API Reference - SysManage"
  },
  "architecture": {
    "agent_features": "Agent Features",
    "auto_discovery": "Auto-Discovery",
    "auto_discovery_desc": "Automatic server detection on the network",
    "cross_platform": "Cross-Platform",
    "cross_platform_desc": "Native support for all major operating systems",
    "lightweight_desc": "Minimal resource footprint",
    "lightweight_design": "Lightweight Design",
    "secure_communication": "Secure Communication",
    "secure_communication_desc": "mTLS and certificate-based authentication",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "agent_capacity": "Agent Capacity",
      "agent_features": "एजेंट सुविधाएँ",
      "agent_scaling": "Agent Scaling",
      "agent_server_communication": "Agent-to-Server Communication",
      "application_layer": "Application Layer",
      "architecture": "Architecture",
      "architecture_overview": "Architecture Overview",
      "authentication_systems": "Authentication Systems",
      "auto_discovery": "स्वत: खोज",
      "auto_discovery_desc": "नेटवर्क पर स्वचालित सर्वर का पता लगाना",
      "automation_orchestration": "Automation & Orchestration",
      "backend_technologies": "Backend Technologies",
      "certificate_based_auth": "Certificate-Based Authentication",
      "communication_security": "Communication & Security",
      "core_components": "Core Components",
      "cross_platform": "क्रॉस-प्लेटफॉर्म",
      "cross_platform_desc": "सभी प्रमुख ऑपरेटिंग सिस्टम के लिए देशी समर्थन",
      "data_flow_architecture": "Data Flow Architecture",
      "data_layer": "Data Layer",
      "deployment_patterns": "Deployment Patterns",
      "devops_deployment": "DevOps & Deployment",
      "external_system_integration": "External System Integration",
      "frontend_technologies": "Frontend Technologies",
      "high_availability": "High Availability Deployment",
      "high_level_architecture": "High-Level Architecture",
      "horizontal_scaling": "Horizontal Scaling",
      "integration_points": "Integration Points",
      "key_features": "Key Features",
      "lightweight_desc": "न्यूनतम संसाधन पदचिह्न",
      "lightweight_design": "हल्के डिजाइन",
      "monitoring_alerting": "Monitoring & Alerting",
      "multi_region": "Multi-Region Deployment",
      "network_security": "Network Security",
      "next_steps": "Next Steps",
      "package_repositories": "Package Repositories",
      "performance_characteristics": "Performance Characteristics",
      "resource_usage": "Resource Usage",
      "response_times": "Response Times",
      "rest_api": "REST API",
      "scalability_design": "Scalability Design",
      "secure_communication": "सुरक्षित संचार",
      "secure_communication_desc": "MTLS और प्रमाणपत्र-आधारित प्रमाणीकरण",
      "security_architecture": "Security Architecture",
      "server_scaling": "Server Scaling",
      "single_instance": "Single Instance Deployment",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "sysmanage_agents": "SysManage Agents",
      "sysmanage_server": "SysManage Server",
      "technology_stack": "Technology Stack",
      "title": "System Overview",
      "transport_layer": "Transport Layer",
      "use_cases": "Use Cases",
      "user_request_processing": "User Request Processing",
      "view_agent_repo": "Sysmanage एजेंट रिपॉजिटरी देखें",
      "web_interface": "Web Interface"
    },
    "title": "Architecture Documentation",
    "view_agent_repo": "View SysManage Agent Repository"
  },
  "common": {
    "back_to_top": "Back to Top",
    "configuration": "Configuration",
    "documentation": "Documentation",
    "download": "Download",
    "features": "Features",
    "github": "GitHub",
    "installation": "Installation",
    "learn_more": "Learn More",
    "next": "Next",
    "overview": "Overview",
    "previous": "Previous",
    "read_more": "Read More",
    "security": "Security",
    "troubleshooting": "Troubleshooting"
  },
  "configuration": {
    "advanced_features": "Advanced Features",
    "basic_config": "Basic Configuration",
    "security_config": "Security Configuration",
    "title": "Configuration Guide"
  },
  "database_security": {
    "best_practices": {
      "backup": {
        "access_control": "बैकअप एक्सेस कंट्रोल को लागू करें",
        "encrypted": "एन्क्रिप्टेड डेटाबेस बैकअप का उपयोग करें",
        "retention": "डेटा प्रतिधारण नीतियों का पालन करें",
        "secure_storage": "सुरक्षित स्थानों में बैकअप स्टोर करें",
        "testing": "नियमित रूप से बैकअप बहाली का परीक्षण करें",
        "title": "💾 बैकअप और रिकवरी"
      },
      "maintenance": {
        "audit_logs": "व्यापक ऑडिट लॉग बनाए रखें",
        "migration_testing": "स्टेजिंग में टेस्ट डेटाबेस माइग्रेशन",
        "patches": "सुरक्षा पैच तुरंत लागू करें",
        "performance": "मॉनिटर डेटाबेस प्रदर्शन और सुरक्षा मैट्रिक्स",
        "schema_review": "सुरक्षा निहितार्थ के लिए स्कीमा परिवर्तनों की समीक्षा करें",
        "title": "🔧 रखरखाव और अपडेट"
      },
      "production": {
        "credentials": "स्टोर डेटाबेस क्रेडेंशियल्स सुरक्षित रूप से",
        "encryption": "बाकी पर डेटाबेस एन्क्रिप्शन सक्षम करें",
        "monitoring": "डेटाबेस गतिविधि निगरानी लागू करें",
        "network": "डेटाबेस नेटवर्क एक्सेस को प्रतिबंधित करें",
        "ssl": "डेटाबेस कनेक्शन के लिए SSL/TLS का उपयोग करें",
        "title": "🏭 उत्पादन परिनियोजन"
      },
      "title": "डेटाबेस सुरक्षा सर्वोत्तम अभ्यास"
    },
    "breadcrumb": "डेटाबेस सुरक्षा",
    "description": "UUID- आधारित प्राथमिक कुंजी, सुरक्षित स्थापना और डेटाबेस सख्त सहित sysmanage के लिए व्यापक डेटाबेस सुरक्षा प्रलेखन।",
    "examples": {
      "secure": "✅ सुरक्षित (uuid):",
      "vulnerable": "❌ कमजोर (अनुक्रमिक):"
    },
    "header": {
      "subtitle": "UUID- आधारित प्राथमिक कुंजी, सुरक्षित स्थापना प्रक्रियाओं और डेटाबेस सख्त तकनीकों सहित उन्नत डेटाबेस सुरक्षा सुविधाएँ।",
      "title": "डेटाबेस सुरक्षा"
    },
    "implementation": {
      "api_security": {
        "authorization": {
          "no_enumeration": "अमान्य uuids के लिए भी कोई सूचना प्रकटीकरण नहीं",
          "rbac": "UUID- संदर्भित संसाधनों पर लागू भूमिका-आधारित अभिगम नियंत्रण",
          "resource_ownership": "UUID संकल्प से पहले संसाधन स्वामित्व मान्य है",
          "title": "प्राधिकरण चेक"
        },
        "title": "एपीआई सुरक्षा विचार",
        "validation": {
          "format": "सभी UUID इनपुट उचित प्रारूप के लिए मान्य हैं",
          "pydantic": "Pydantic मॉडल uuid टाइपिंग लागू करते हैं",
          "rejection": "अमान्य uuids को तुरंत खारिज कर दिया जाता है",
          "title": "Uuid सत्यापन"
        }
      },
      "database_schema": {
        "description": "SysManage में सभी प्राथमिक कुंजी अधिकतम सुरक्षा के लिए UUID संस्करण 4 (यादृच्छिक) का उपयोग करें:",
        "example_title": "उदाहरण तालिका परिभाषाएँ:",
        "title": "डेटाबेस स्कीमा डिजाइन"
      },
      "title": "कार्यान्वयन विवरण"
    },
    "migration": {
      "benefits": {
        "attack_surface": "नाटकीय रूप से कम हमले की सतह",
        "compliance": "बढ़ाया नियामक अनुपालन मुद्रा",
        "enumeration": "आईडी एन्यूमरेशन कमजोरियों को समाप्त कर दिया",
        "future_proof": "अनुक्रमिक आईडी-आधारित हमलों के खिलाफ भविष्य का प्रूफ",
        "information_disclosure": "पूर्वानुमानित आईडी के माध्यम से सूचना प्रकटीकरण को रोक दिया",
        "title": "माइग्रेशन सुरक्षा लाभ"
      },
      "description": "SysManage को एक व्यापक प्रवासन रणनीति का उपयोग करके अनुक्रमिक पूर्णांक IDs से UUIDs तक पूरी तरह से माइग्रेट किया गया है।",
      "process": {
        "step1": {
          "description": "एलेम्बिक माइग्रेशन ने सभी प्राथमिक कुंजियों और विदेशी कुंजियों को पूर्णांक से यूयूआईडी में बदल दिया",
          "title": "चरण 1: स्कीमा माइग्रेशन"
        },
        "step2": {
          "description": "मौजूदा डेटा को रिश्तों को संरक्षित करते हुए नए UUID पहचानकर्ताओं के साथ माइग्रेट किया गया था",
          "title": "चरण 2: डेटा माइग्रेशन"
        },
        "step3": {
          "description": "सभी API समापन बिंदु UUID मापदंडों और प्रतिक्रियाओं को संभालने के लिए अपडेट किए गए",
          "title": "चरण 3: एपीआई अपडेट"
        },
        "step4": {
          "description": "UUID पहचानकर्ताओं के साथ काम करने के लिए फ्रंटेंड घटक अपडेट किए गए",
          "title": "चरण 4: फ्रंटेंड अपडेट"
        },
        "title": "प्रवासन प्रक्रिया"
      },
      "title": "अनुक्रमिक आईडी से प्रवासन"
    },
    "navigation": {
      "best_practices": "सुरक्षा सर्वोत्तम अभ्यास →",
      "security_docs": "← सुरक्षा प्रलेखन"
    },
    "secure_installation": {
      "description": "SysManage में एक अनिवार्य सुरक्षित स्थापना स्क्रिप्ट शामिल है जिसे उचित सुरक्षा नींव स्थापित करने के लिए नए प्रतिष्ठानों पर चलाया जाना चाहिए।",
      "features": {
        "admin_user": {
          "no_defaults": "डिफ़ॉल्ट या उदाहरण क्रेडेंशियल के उपयोग को रोकता है",
          "password_validation": "पासवर्ड जटिलता आवश्यकताओं को लागू करता है",
          "secure_password": "सुरक्षित व्यवस्थापक पासवर्ड के लिए संकेत देता है",
          "title": "👤 प्रारंभिक व्यवस्थापक उपयोगकर्ता निर्माण"
        },
        "config_hardening": {
          "file_permissions": "प्रतिबंधात्मक फ़ाइल अनुमतियाँ सेट करता है (600)",
          "ownership": "उचित फ़ाइल स्वामित्व सुनिश्चित करता है",
          "title": "⚙ कॉन्फ़िगरेशन फ़ाइल हार्डनिंग",
          "validation": "कॉन्फ़िगरेशन सुरक्षा सेटिंग्स को मान्य करता है"
        },
        "jwt_security": {
          "entropy": "टोकन पीढ़ी के लिए उच्च-प्रवेश रैंडम डेटा का उपयोग करता है",
          "prevents_reuse": "प्रतिष्ठानों में क्रेडेंशियल पुन: उपयोग को रोकता है",
          "title": "🔐 JWT सुरक्षा टोकन पीढ़ी",
          "unique_secret": "क्रिप्टोग्राफिक रूप से सुरक्षित अद्वितीय JWT गुप्त उत्पन्न करता है"
        },
        "password_salt": {
          "rainbow_protection": "इंद्रधनुष टेबल हमलों को रोकता है",
          "secure_hashing": "पासवर्ड हैशिंग सुरक्षा बढ़ाता है",
          "title": "🧂 पासवर्ड नमक पीढ़ी",
          "unique_salt": "प्रत्येक स्थापना के लिए अद्वितीय पासवर्ड नमक बनाता है"
        },
        "title": "कार्यान्वित सुरक्षा सुविधाएँ"
      },
      "requirements": {
        "backup": "कॉन्फ़िगरेशन बैकअप:",
        "backup_desc": "स्क्रिप्ट निष्पादन के बाद बैकअप कॉन्फ़िगरेशन फ़ाइल",
        "mandatory": "अनिवार्य निष्पादन:",
        "mandatory_desc": "स्क्रिप्ट को पहले उपयोग से पहले चलाया जाना चाहिए",
        "no_defaults": "कोई डिफ़ॉल्ट क्रेडेंशियल नहीं:",
        "no_defaults_desc": "सिस्टम डिफ़ॉल्ट सुरक्षा टोकन के साथ कार्य नहीं करेगा",
        "run_once": "केवल एक बार दौड़ें:",
        "run_once_desc": "केवल एक बार प्रति स्थापना निष्पादित करें",
        "title": "⚠ सुरक्षा आवश्यकताएँ"
      },
      "script_location": {
        "path": "स्क्रिप्ट/sysmanage_secure_installation",
        "title": "स्क्रिप्ट स्थान"
      },
      "title": "सुरक्षित स्थापना स्क्रिप्ट"
    },
    "title": "डेटाबेस सुरक्षा - sysmanage",
    "uuid_architecture": {
      "benefits": {
        "distributed": {
          "description": "UUID विश्व स्तर पर अद्वितीय हैं, वितरित प्रणालियों में आईडी संघर्षों को रोकते हैं और बहु-किरायेदार वातावरण में हमले की सतह को कम करते हैं।",
          "title": "🌐 वितरित सिस्टम सुरक्षा"
        },
        "enumeration": {
          "description": "अनुक्रमिक आईडी (1, 2, 3 ...) हमलावरों को आसानी से संसाधनों की गणना करने की अनुमति देता है। UUIDs गैर-पूर्ववर्ती पहचानकर्ताओं का उपयोग करके इस भेद्यता को समाप्त करते हैं।",
          "title": "🛡 आईडी एन्यूमरेशन अटैक प्रिवेंशन"
        },
        "gdpr": {
          "description": "UUIDS पहचानकर्ता प्रदान करके डेटा अनाम आवश्यकताओं का समर्थन करता है जो आसानी से सिस्टम में सहसंबद्ध नहीं किया जा सकता है।",
          "title": "📋 GDPR अनुपालन समर्थन"
        },
        "information_leakage": {
          "description": "अनुक्रमिक आईडी व्यापार मेट्रिक्स (उपयोगकर्ताओं की संख्या, होस्ट, आदि) को प्रकट कर सकता है। UUIDS इस जानकारी के प्रकटीकरण को रोकता है।",
          "title": "🔒 सूचना रिसाव की रोकथाम"
        },
        "privacy": {
          "description": "UUIDs गैर-सहसंबंध योग्य पहचानकर्ता प्रदान करते हैं जो उपयोगकर्ता गोपनीयता को बढ़ाते हैं और क्रॉस-सिस्टम ट्रैकिंग को रोकते हैं।",
          "title": "🕵 बढ़ाया गोपनीयता संरक्षण"
        },
        "replay": {
          "description": "गैर-अनुक्रमिक पहचानकर्ता हमलावरों को रिप्ले हमलों या स्वचालित स्कैनिंग के लिए वैध संसाधन आईडी की भविष्यवाणी करने से रोकते हैं।",
          "title": "🔄 रिप्ले अटैक प्रोटेक्शन"
        },
        "title": "सुरक्षा लाभ"
      },
      "description": "SysManage पारंपरिक अनुक्रमिक पूर्णांक आईडी के बजाय सभी डेटाबेस तालिकाओं में UUID- आधारित प्राथमिक कुंजियों को लागू करता है। यह वास्तुशिल्प निर्णय महत्वपूर्ण सुरक्षा लाभ प्रदान करता है और सामान्य हमले वैक्टर को रोकता है।",
      "title": "Uuid- आधारित प्राथमिक कुंजी आर्किटेक्चर"
    }
  },
  "docs": {
    "additional_resources": {
      "agent_repo": "Agent Repository",
      "community_discussions": "Community Discussions",
      "github_repo": "GitHub Repository",
      "issue_tracker": "Issue Tracker",
      "title": "Additional Resources"
    },
    "administration": {
      "backup": "Backup & Recovery",
      "description": "Administrative guides for managing users, hosts, and system settings.",
      "host_management": "Host Management",
      "maintenance": "Maintenance",
      "monitoring": "Monitoring & Alerts",
      "title": "Administration",
      "user_management": "User Management",
      "view_docs": "View Admin Docs →",
      "grafana_setup": "Grafana एकीकरण सेटअप"
    },
    "agent": {
      "configuration": "Configuration",
      "cross_platform": "Cross-Platform Support",
      "description": "Setup and management guide for SysManage agents across all platforms.",
      "installation": "Installation Guide",
      "privileged_execution": "Privileged Execution",
      "title": "Agent Documentation",
      "troubleshooting": "Troubleshooting",
      "view_docs": "View Agent Docs →"
    },
    "api": {
      "authentication": "Authentication",
      "description": "Complete REST API documentation for integrating with SysManage.",
      "hosts": "Host Management",
      "monitoring": "Monitoring",
      "packages": "Package Management & Uninstallation",
      "title": "API Reference",
      "view_docs": "View API Docs →",
      "websockets": "WebSocket API"
    },
    "architecture": {
      "database_schema": "Database Design",
      "description": "Technical architecture documentation including system design, message flow, and component interactions.",
      "message_flow": "Message Flow & Queuing",
      "multi_os_cicd": "बहु-ओएस सीआई/सीडी पाइपलाइन",
      "performance_metrics": "Performance & Scalability",
      "performance_testing": "प्रदर्शन परीक्षण ढांचा",
      "system_overview": "System Overview",
      "testing_excellence": "Testing Excellence",
      "title": "Architecture",
      "view_docs": "View Architecture →",
      "websocket_protocol": "Communication Protocols"
    },
    "description": "Complete documentation for SysManage server and agent components.",
    "getting_started": {
      "agent_approval": "Agent Approval",
      "basic_management": "Basic Management",
      "description": "Quick start guides and tutorials for new users.",
      "first_deployment": "First Deployment",
      "quick_start": "Quick Start",
      "title": "Getting Started",
      "tutorials": "Tutorials",
      "view_docs": "Get Started →",
      "webui_overview": "Web Interface Overview"
    },
    "header": {
      "subtitle": "Comprehensive guides for deploying, configuring, and managing SysManage.",
      "title": "Documentation"
    },
    "security": {
      "authentication": "Authentication & Authorization",
      "best_practices": "Best Practices",
      "description": "Security features, best practices, and vulnerability reporting.",
      "mtls": "Mutual TLS (mTLS)",
      "reporting": "Vulnerability Reporting",
      "scanning": "Security Scanning",
      "title": "Security",
      "view_docs": "View Security Docs →"
    },
    "server": {
      "configuration": "Configuration",
      "deployment": "Deployment",
      "description": "Complete guide for installing, configuring, and managing the SysManage server.",
      "features": "Features",
      "installation": "Installation Guide",
      "reports": "Reports & PDF Generation",
      "testing": "Testing & Playwright",
      "title": "Server Documentation",
      "troubleshooting": "Troubleshooting",
      "view_docs": "View Server Docs →"
    },
    "title": "Documentation - SysManage"
  },
  "features": {
    "cross_platform": {
      "description": "एकल इंटरफ़ेस से Linux, Windows, macOS, FreeBSD, OpenBSD, और NetBSD सिस्टम प्रबंधित करें।",
      "title": "Cross-Platform Support"
    },
    "modern_ui": {
      "description": "Responsive React-based interface with real-time dashboards and comprehensive reporting.",
      "title": "Modern Web UI"
    },
    "multilingual": {
      "description": "Native support for 14 languages including English, Spanish, French, German, and more.",
      "title": "Multi-Language Support"
    },
    "osVersionUpgrades": {
      "bsdSupport": {
        "description": "OpenBSD sysupgrade and FreeBSD version upgrades",
        "title": "BSD Support"
      },
      "majorVersionDetection": {
        "description": "Automatic detection of available OS major version upgrades",
        "title": "Major Version Detection"
      },
      "multiPlatformSupport": {
        "description": "Ubuntu LTS upgrades, Fedora version upgrades, macOS updates, Windows feature updates",
        "title": "Multi-Platform Support"
      },
      "opensuseIntegration": {
        "description": "Distribution upgrade detection and management",
        "title": "OpenSUSE Integration"
      },
      "rebootManagement": {
        "description": "Automatic reboot scheduling for OS upgrades requiring system restart",
        "title": "Reboot Management"
      },
      "safetyFeatures": {
        "description": "Dry-run capabilities and upgrade validation before deployment",
        "title": "Safety Features"
      },
      "title": "⬆️ OS Version Upgrades"
    },
    "package_management": {
      "description": "Remote software installation, updates, and management across all supported platforms.",
      "title": "Package Management"
    },
    "real_time": {
      "description": "WebSocket-based real-time communication for instant system updates and monitoring.",
      "title": "Real-Time Monitoring"
    },
    "security": {
      "description": "JWT authentication, mTLS, role-based access control, and comprehensive security scanning.",
      "title": "Enterprise Security"
    },
    "title": "Key Features"
  },
  "footer": {
    "agent_docs": "Agent Docs",
    "agent_github_repo": "Agent GitHub Repository",
    "api_reference": "API Reference",
    "community": "Community",
    "copyright": "© 2024 SysManage. All rights reserved.",
    "description": "Modern system management platform for comprehensive infrastructure monitoring and automation.",
    "discussions": "Discussions",
    "documentation": "Documentation",
    "github_repo": "GitHub Repository",
    "issue_tracker": "Issue Tracker",
    "license": "License",
    "licensed_under": "Licensed under AGPLv3",
    "security": "Security",
    "server_docs": "Server Docs",
    "server_github_repo": "Server GitHub Repository",
    "view_license": "View License"
  },
  "getting_started": {
    "breadcrumb": "Getting Started",
    "cards": {
      "quick_start": {
        "description": "Get SysManage up and running quickly with our streamlined installation guide. Perfect for evaluation and small deployments.",
        "features": {
          "config": "Initial configuration and setup",
          "docker": "Installation with Docker Compose",
          "login": "First login and basic navigation",
          "requirements": "System requirements and prerequisites"
        },
        "link": "Quick Start Guide →",
        "title": "🚀 Quick Start"
      },
      "webui": {
        "description": "Comprehensive tour of the SysManage web interface and its key features for monitoring and management.",
        "features": {
          "dashboard": "Dashboard overview and navigation",
          "hosts": "Host management interface",
          "monitoring": "Monitoring and alerts",
          "packages": "Package management features"
        },
        "link": "Web Interface Guide →",
        "title": "🌐 Web Interface Overview"
      }
    },
    "description": "Quick start guides and tutorials to get up and running with SysManage for infrastructure monitoring and automation.",
    "header": {
      "description": "Quick start guides and tutorials to get up and running with SysManage for infrastructure monitoring and automation.",
      "title": "Getting Started"
    },
    "help": {
      "community": {
        "description": "Connect with other SysManage users and contributors",
        "title": "💬 Community"
      },
      "docs": {
        "description": "Comprehensive guides covering all aspects of SysManage",
        "title": "📖 Documentation"
      },
      "title": "Getting Help",
      "troubleshooting": {
        "description": "Common issues and their solutions",
        "title": "🔧 Troubleshooting"
      }
    },
    "journey": {
      "description": "Follow these guided steps to get SysManage up and running in your environment:",
      "steps": {
        "agents": {
          "description": "Install and approve your first agents",
          "title": "Agent Setup"
        },
        "deployment": {
          "description": "Deploy your first SysManage server instance",
          "title": "First Deployment"
        },
        "management": {
          "description": "Learn essential management tasks",
          "title": "Basic Management"
        },
        "quick_start": {
          "description": "Get SysManage installed and running in minutes",
          "title": "Quick Start"
        }
      },
      "title": "Your Journey Starts Here"
    },
    "learning_path": {
      "title": "Recommended Learning Path"
    },
    "navigation": {
      "docs_home": "← Documentation Home",
      "quick_start": "Quick Start →",
      "title": "Quick Navigation"
    },
    "prerequisites": {
      "knowledge": {
        "title": "Required Knowledge"
      },
      "needed": {
        "title": "What You'll Need"
      },
      "system": {
        "platforms": {
          "title": "Supported Platforms"
        },
        "server": {
          "title": "Server Requirements"
        },
        "title": "System Requirements"
      },
      "title": "Before You Begin"
    },
    "title": "Getting Started - SysManage",
    "use_cases": {
      "large": {
        "title": "🌐 Large Organization"
      },
      "medium": {
        "title": "🏭 Medium Enterprise"
      },
      "small": {
        "title": "🏢 Small Business"
      },
      "title": "Common Use Cases"
    },
    "welcome": {
      "description": "SysManage is a comprehensive infrastructure monitoring and automation platform that helps you manage hosts, packages, and system health across your entire infrastructure. Whether you're managing a few servers or thousands of hosts, SysManage provides the tools you need to maintain and monitor your systems effectively.",
      "title": "Welcome to SysManage"
    }
  },
  "hero": {
    "get_started": "Get Started",
    "subtitle": "अपनी संपूर्ण बुनियादी ढांचे के लिए केंद्रीकृत निगरानी, प्रबंधन और स्वचालन। Linux, Windows, macOS, FreeBSD, OpenBSD, और NetBSD के लिए समर्थन।",
    "title": "Modern System Management Made Simple",
    "view_agent_github": "Agent GitHub",
    "view_github": "View on GitHub",
    "view_server_github": "Server GitHub"
  },
  "installation": {
    "installation_steps": "Installation Steps",
    "prerequisites": "Prerequisites",
    "system_requirements": "System Requirements",
    "title": "Installation Guide",
    "troubleshooting": "Troubleshooting"
  },
  "multi_os_cicd": {
    "benefit_1": "<strong>Zero Infrastructure Costs:</strong> Complete CI/CD pipeline using GitHub's free runners",
    "benefit_2": "<strong>Multi-Platform Excellence:</strong> Simultaneous testing across 3 major operating systems",
    "benefit_3": "<strong>Fail-Fast Architecture:</strong> Immediate failure detection saves compute resources",
    "benefit_4": "<strong>Enterprise Reliability:</strong> Production-grade testing with comprehensive validation",
    "best_practices": {
      "automated_deployment": "Automated deployment to staging environments",
      "branch_protection": "Branch protection rules enforce quality gates",
      "compliance_reporting": "Compliance reporting and audit trails",
      "cost_desc": "Delivering premium CI/CD capabilities without infrastructure investment",
      "cost_savings": "$0/month",
      "cost_savings_label": "Infrastructure Costs",
      "cost_title": "💰 Zero-Cost Enterprise Benefits",
      "coverage_label": "Platform Coverage",
      "coverage_metric": "100%",
      "dependency_checking": "Dependency security validation",
      "description": "SysManage's CI/CD pipeline implements <strong>industry-leading best practices</strong> delivering enterprise-grade reliability and efficiency typically found in costly commercial CI/CD platforms.",
      "enterprise_desc": "Seamless integration with enterprise development workflows",
      "enterprise_title": "🏢 Enterprise Integration",
      "failure_detection": "Immediate failure detection and notification",
      "github_runners": "GitHub-hosted runners eliminate server costs",
      "health_checks": "Automated health checks and service validation",
      "intelligent_caching": "Intelligent caching reduces execution time and costs",
      "matrix_efficiency": "Matrix strategy maximizes testing coverage per dollar",
      "performance_monitoring": "Performance monitoring and optimization",
      "reliability_desc": "Production-grade reliability with comprehensive monitoring",
      "reliability_label": "Pipeline Reliability",
      "reliability_metric": "99.9%",
      "reliability_title": "🛡️ Reliability and Monitoring",
      "required_checks": "Required status checks prevent broken deployments",
      "resource_optimization": "Resource optimization minimizes compute usage",
      "retry_logic": "Intelligent retry logic for transient failures",
      "rollback_capability": "Automated rollback capability for failed deployments",
      "secret_management": "Secure secret management with GitHub Secrets",
      "security_desc": "Enterprise-grade security integrated throughout the pipeline",
      "security_title": "🔒 Security and Compliance",
      "title": "Enterprise CI/CD Best Practices",
      "value_desc": "SysManage's CI/CD pipeline delivers <strong>measurable enterprise value</strong> through reduced deployment risks, faster time-to-market, improved code quality, and zero infrastructure overhead - typically saving organizations thousands of dollars in CI/CD platform costs while delivering superior reliability and performance.",
      "value_title": "💎 Enterprise Value Proposition",
      "vulnerability_scanning": "Automated vulnerability scanning in every build"
    },
    "breadcrumb": "Multi-OS CI/CD",
    "github_actions": {
      "caching": "Intelligent dependency caching across runs",
      "description": "SysManage leverages <strong>GitHub Actions matrix strategy</strong> to deliver enterprise-grade CI/CD capabilities with zero infrastructure costs, providing the reliability and scalability typically associated with expensive dedicated CI/CD platforms.",
      "fail_fast": "Fail-fast strategy stops execution on first failure",
      "manual": "Manual workflow dispatch",
      "matrix_desc": "Parallel execution across multiple environments",
      "matrix_title": "🎯 Matrix Strategy Implementation",
      "optimization_desc": "Advanced pipeline optimization techniques",
      "optimization_title": "⚡ Performance Optimization",
      "os_macos": "macos-latest (Apple Silicon)",
      "os_ubuntu": "ubuntu-latest (Primary Linux)",
      "os_windows": "windows-latest (Windows Server)",
      "parallel": "Parallel job execution maximizes throughput",
      "pull_requests": "All pull requests",
      "push_main": "Push to main branch",
      "python_versions": "Python 3.11 and 3.12 support",
      "resource": "Resource-efficient execution minimizes costs",
      "schedule": "Scheduled maintenance runs",
      "title": "GitHub Actions Implementation",
      "triggers_desc": "Pipeline executes automatically on code changes",
      "triggers_title": "🚀 Automated Triggers",
      "workflow_title": "📋 Workflow Configuration"
    },
    "intro": "SysManage implements a <strong>revolutionary zero-cost multi-OS CI/CD pipeline</strong> using GitHub Actions, delivering enterprise-grade testing and deployment capabilities across Linux, macOS, and Windows platforms without infrastructure costs.",
    "key_benefits_title": "🚀 Key Enterprise Benefits",
    "main_title": "Enterprise Multi-OS CI/CD Pipeline",
    "matrix_testing": {
      "bsd_simulation": "BSD: Simulated testing via Docker containers",
      "comprehensive_desc": "Every commit tested across all target platforms",
      "comprehensive_reporting": "Comprehensive reporting across all platforms",
      "comprehensive_title": "📊 Comprehensive Platform Coverage",
      "description": "SysManage's matrix testing strategy delivers <strong>comprehensive cross-platform validation</strong> ensuring consistent behavior across all supported operating systems while maintaining zero infrastructure costs.",
      "framework_selection": "Optimal testing framework selection per platform",
      "graceful_degradation": "Graceful degradation for unsupported features",
      "integration_tests": "Integration Tests: Cross-component interaction validation",
      "intelligent_desc": "Smart test execution adapts to platform capabilities",
      "intelligent_title": "🧠 Intelligent Test Execution",
      "linux_testing": "Linux: Ubuntu LTS with full dependency stack",
      "macos_testing": "macOS: Native Apple Silicon execution environment",
      "platform_detection": "Automatic platform capability detection",
      "security_tests": "Security Tests: Vulnerability scanning and compliance",
      "strategy_title": "🎯 Testing Strategy",
      "title": "Multi-OS Matrix Testing Strategy",
      "ui_tests": "UI Tests: User interface and workflow validation",
      "unit_tests": "Unit Tests: Component-level functionality validation",
      "validation_desc": "Multi-layered validation ensures production readiness",
      "validation_title": "✅ Validation Levels",
      "windows_testing": "Windows: Server 2022 with PowerShell automation"
    },
    "overview": {
      "backend_desc": "Comprehensive Python test suite with pytest, database integration, and security validation",
      "backend_feature_1": "1,432+ unit and integration tests",
      "backend_feature_2": "Real PostgreSQL database testing",
      "backend_feature_3": "Security scanning and validation",
      "backend_feature_4": "Code coverage analysis (66%+)",
      "backend_title": "🔧 Backend Testing",
      "description": "SysManage's CI/CD pipeline represents a <strong>paradigm shift in cost-effective enterprise deployment</strong>, leveraging GitHub Actions' matrix strategy to deliver comprehensive multi-OS testing without dedicated infrastructure investment.",
      "execution_title": "⚡ Pipeline Execution Strategy",
      "frontend_desc": "TypeScript/React testing with Vitest, Mock Service Worker, and component validation",
      "frontend_feature_1": "63+ TypeScript unit tests",
      "frontend_feature_2": "Mock Service Worker integration",
      "frontend_feature_3": "Component rendering validation",
      "frontend_feature_4": "Code coverage tracking",
      "frontend_title": "🌐 Frontend Testing",
      "pipeline_title": "🏗️ Pipeline Components",
      "title": "CI/CD Pipeline Architecture",
      "ui_desc": "Cross-platform UI testing with Playwright and Selenium fallback for comprehensive browser coverage",
      "ui_feature_1": "Playwright for modern browsers",
      "ui_feature_2": "Selenium fallback for BSD systems",
      "ui_feature_3": "Real database integration",
      "ui_feature_4": "Cross-browser compatibility",
      "ui_title": "🎭 UI Testing",
      "workflow_title": "🔄 Workflow Orchestration"
    },
    "page_title": "Multi-OS CI/CD Pipeline - SysManage Documentation",
    "platform_specific": {
      "api_consistency": "API behavior consistency validation",
      "config_portability": "Configuration file portability testing",
      "cross_platform_desc": "Ensuring consistent behavior across all platforms",
      "cross_platform_title": "🌍 Cross-Platform Consistency",
      "database_compatibility": "Database driver compatibility across platforms",
      "description": "SysManage implements <strong>platform-aware testing strategies</strong> that leverage unique capabilities of each operating system while maintaining consistent validation standards across all platforms.",
      "linux_desc": "Primary development and testing platform with comprehensive tooling",
      "linux_docker": "Docker container testing and validation",
      "linux_full_stack": "Full stack testing with PostgreSQL",
      "linux_packaging": "Package management testing (apt/dpkg)",
      "linux_systemd": "systemd service integration testing",
      "linux_title": "🐧 Linux (Ubuntu) Testing",
      "macos_desc": "Native Apple Silicon testing with platform-specific features",
      "macos_homebrew": "Homebrew package management testing",
      "macos_launchd": "launchd service integration testing",
      "macos_security": "macOS security feature validation",
      "macos_title": "🍎 macOS Testing",
      "macos_webkit": "WebKit/Safari browser testing",
      "network_behavior": "Network communication consistency validation",
      "title": "Platform-Specific Testing Features",
      "windows_desc": "Windows Server environment with PowerShell automation",
      "windows_iis": "IIS web server integration testing",
      "windows_powershell": "PowerShell script testing and validation",
      "windows_security": "Windows security feature validation",
      "windows_services": "Windows service management testing",
      "windows_title": "🪟 Windows Testing"
    },
    "tabs": {
      "best_practices": "Best Practices",
      "github_actions": "GitHub Actions",
      "matrix_testing": "Matrix Testing",
      "overview": "Overview",
      "platform_specific": "Platform-Specific"
    }
  },
  "nav": {
    "config_builder": "विन्यास बिल्डर",
    "documentation": "Documentation",
    "features": "Features",
    "getting_started": "Getting Started",
    "github": "GitHub",
    "github_agent": "Agent GitHub",
    "github_server": "Server GitHub"
  },
  "navigation": {
    "best_practices": "सुरक्षा सर्वोत्तम अभ्यास →",
    "security_overview": "← सुरक्षा अवलोकन",
    "server_configuration": "सर्वर कॉन्फ़िगरेशन →",
    "server_installation": "← सर्वर इंस्टॉलेशन",
    "title": "त्वरित नेविगेशन"
  },
  "performance_testing": {
    "artillery": {
      "api_desc": "Core API endpoint performance testing (20% of traffic)",
      "api_title": "Host Management APIs",
      "auth_desc": "JWT authentication performance validation (40% of traffic)",
      "auth_title": "Authentication Flow Testing",
      "budgets_title": "💎 Performance Budgets",
      "description": "Artillery provides <strong>enterprise-grade load testing</strong> for SysManage's backend APIs, simulating realistic user loads and validating system performance under various traffic patterns.",
      "error_rate": "Maximum: < 1%",
      "error_title": "🛡️ Error Rate",
      "health_desc": "Continuous health endpoint validation (30% of traffic)",
      "health_title": "Health Check Monitoring",
      "normal_desc": "30 seconds at 5 requests/second - Typical production load",
      "normal_title": "⚡ Normal Load",
      "peak_desc": "20 seconds at 10 requests/second - High traffic simulation",
      "peak_title": "🚀 Peak Load",
      "phases_title": "📈 Load Testing Phases",
      "response_p95": "95th percentile: < 500ms",
      "response_p99": "99th percentile: < 1000ms",
      "response_title": "⚡ Response Time",
      "scenarios_title": "🎯 Load Testing Scenarios",
      "throughput_rate": "Minimum: 8 RPS",
      "throughput_title": "📊 Throughput",
      "title": "Artillery Backend Load Testing",
      "warmup_desc": "10 seconds at 2 requests/second - System initialization",
      "warmup_title": "🔥 Warm-up Phase",
      "websocket_desc": "Real-time communication performance validation (10% of traffic)",
      "websocket_title": "WebSocket Connection Testing"
    },
    "benefit_1": "<strong>Production-Ready Load Testing:</strong> Comprehensive API performance validation",
    "benefit_2": "<strong>Multi-Platform Testing:</strong> Validated across Linux, macOS, and Windows",
    "benefit_3": "<strong>Automated Regression Detection:</strong> Continuous performance monitoring in CI/CD",
    "benefit_4": "<strong>Enterprise Scalability:</strong> Performance budgets and SLA validation",
    "breadcrumb": "Performance Testing",
    "ci": {
      "alerts_desc": "Immediate notification when performance budgets are exceeded",
      "alerts_title": "🚨 Automated Alerts",
      "baseline_desc": "Historical performance data comparison with configurable tolerance bands",
      "baseline_title": "📊 Baseline Comparison",
      "description": "SysManage's performance testing framework integrates seamlessly with <strong>GitHub Actions CI/CD pipelines</strong>, providing automated performance validation on every code change across multiple operating systems.",
      "macos_artillery": "Artillery cross-platform validation",
      "macos_native": "Native macOS application performance",
      "macos_title": "🍎 macOS",
      "macos_webkit": "WebKit/Safari performance testing",
      "matrix_desc": "Parallel testing across Ubuntu, macOS, and Windows environments",
      "matrix_title": "🎯 Matrix Execution",
      "platform_title": "🌐 Multi-Platform Performance Testing",
      "regression_title": "📈 Performance Regression Detection",
      "reporting_desc": "Performance metrics exported for trend analysis and monitoring",
      "reporting_title": "📊 Results Reporting",
      "title": "CI/CD Performance Integration",
      "trends_desc": "Long-term performance trend monitoring and capacity planning",
      "trends_title": "📈 Trend Analysis",
      "trigger_desc": "Performance tests execute on every push to main branch and pull request",
      "trigger_title": "🚀 Trigger Events",
      "ubuntu_artillery": "Artillery backend load testing",
      "ubuntu_docker": "Docker container performance validation",
      "ubuntu_playwright": "Playwright UI performance (Chrome, Firefox)",
      "ubuntu_title": "🐧 Ubuntu Linux",
      "validation_desc": "Automated performance budget enforcement and regression detection",
      "validation_title": "✅ Performance Validation",
      "windows_artillery": "Windows-specific Artillery testing",
      "windows_edge": "Edge browser performance testing",
      "windows_powershell": "PowerShell environment validation",
      "windows_title": "🪟 Windows",
      "workflow_title": "🔄 Automated Performance Workflows"
    },
    "enterprise": {
      "analytics_title": "📈 Enterprise Analytics & Reporting",
      "capacity_desc": "Predictive analytics for infrastructure scaling and resource optimization",
      "capacity_title": "📈 Capacity Planning",
      "cloud_autoscaling": "Auto-scaling validation",
      "cloud_containers": "Container performance optimization",
      "cloud_desc": "Comprehensive testing across AWS, Azure, GCP, and hybrid cloud environments",
      "cloud_latency": "Cross-region latency testing",
      "cloud_title": "☁️ Cloud Infrastructure Testing",
      "compliance_analytics_desc": "Automated compliance validation and audit trail generation for enterprise governance",
      "compliance_analytics_title": "🔒 Compliance Reporting",
      "compliance_availability": "High availability testing scenarios",
      "compliance_budgets": "Configurable performance budgets",
      "compliance_reporting": "Enterprise-grade reporting and analytics",
      "compliance_sla": "SLA response time validation",
      "compliance_title": "🛡️ SLA Compliance Validation",
      "cost_desc": "Performance-driven cost analysis and infrastructure efficiency recommendations",
      "cost_label": "Infrastructure Cost Reduction",
      "cost_title": "💰 Cost Optimization",
      "cost_value": "30%",
      "dashboards_desc": "Real-time performance KPIs and executive-level reporting for informed decision making",
      "dashboards_title": "📊 Executive Dashboards",
      "deployment_title": "🌍 Multi-Environment Deployment Testing",
      "description": "SysManage's performance testing framework delivers <strong>enterprise-grade capabilities</strong> designed for mission-critical production environments, ensuring optimal performance at scale.",
      "hybrid_connectivity": "Inter-cloud connectivity testing",
      "hybrid_desc": "Complex hybrid cloud and multi-cloud deployment validation",
      "hybrid_failover": "Disaster recovery validation",
      "hybrid_sync": "Data synchronization performance",
      "hybrid_title": "🔄 Hybrid Architecture Testing",
      "load_authentication": "Authentication flow stress testing",
      "load_concurrent": "Concurrent user simulation up to 1000+ users",
      "load_realistic": "Realistic user behavior patterns",
      "load_scenarios": "Multiple traffic scenario modeling",
      "load_title": "🚀 Production Load Simulation",
      "monitoring_memory": "Memory leak detection and analysis",
      "monitoring_network": "Network performance optimization insights",
      "monitoring_realtime": "Real-time performance metrics collection",
      "monitoring_title": "📊 Advanced Performance Monitoring",
      "monitoring_vitals": "Core Web Vitals compliance validation",
      "onprem_desc": "Dedicated testing for enterprise data center deployments",
      "onprem_hardware": "Hardware-specific optimization",
      "onprem_integration": "Legacy system integration testing",
      "onprem_security": "Security compliance validation",
      "onprem_title": "🏢 On-Premises Enterprise Testing",
      "response_label": "Average Response Time",
      "response_value": "<500ms",
      "scalability_title": "⚡ Enterprise Scalability Testing",
      "title": "Enterprise Performance Features",
      "uptime_label": "Uptime Reliability",
      "uptime_value": "99.9%",
      "value_desc": "SysManage's performance testing framework provides <strong>measurable ROI</strong> through reduced downtime, optimized infrastructure costs, improved user satisfaction, and enterprise-grade reliability that scales with your organization's growth.",
      "value_title": "💎 Enterprise Value Proposition"
    },
    "intro": "SysManage implements a <strong>comprehensive performance testing framework</strong> using Artillery for backend API load testing, combined with Playwright for frontend performance monitoring. This enterprise-grade approach ensures optimal system performance across all deployment environments and scales.",
    "key_benefits_title": "🚀 Key Enterprise Benefits",
    "main_title": "Enterprise-Grade Performance Testing with Artillery",
    "overview": {
      "backend_desc": "Artillery-based load testing with realistic user scenarios, authentication flows, and API endpoint validation",
      "backend_feature_1": "Multi-phase load testing (warm-up, normal, peak)",
      "backend_feature_2": "WebSocket connection testing",
      "backend_feature_3": "Authentication flow validation",
      "backend_feature_4": "Performance budget enforcement",
      "backend_title": "🔧 Backend API Testing",
      "description": "SysManage's performance testing framework provides <strong>dual-layer performance validation</strong> covering both backend API performance and frontend user experience metrics. This comprehensive approach ensures optimal performance across the entire application stack.",
      "execution_title": "⚡ Performance Testing Execution",
      "framework_title": "📊 Testing Framework Components",
      "frontend_desc": "Playwright-powered Core Web Vitals monitoring and user experience performance validation",
      "frontend_feature_1": "First Contentful Paint (FCP) monitoring",
      "frontend_feature_2": "DOM Content Loaded (DCL) timing",
      "frontend_feature_3": "Network performance analysis",
      "frontend_feature_4": "Memory usage tracking",
      "frontend_title": "🌐 Frontend Performance Testing",
      "requirements_desc": "Ensure SysManage server is running on <code>localhost:8001</code> before executing performance tests. The testing framework validates against a live instance for realistic performance metrics.",
      "requirements_title": "📋 Prerequisites",
      "title": "Performance Testing Architecture"
    },
    "page_title": "Performance Testing with Artillery - SysManage Documentation",
    "playwright": {
      "chromium_desc": "Primary testing platform with full performance API support",
      "chromium_title": "🟦 Chromium/Chrome",
      "cross_browser_title": "🌍 Cross-Browser Performance Validation",
      "dcl_desc": "Time for initial HTML document to load and parse",
      "dcl_target": "Target: < 1500ms",
      "dcl_title": "📄 DOM Content Loaded (DCL)",
      "description": "Playwright provides <strong>comprehensive frontend performance monitoring</strong> focusing on Core Web Vitals and user experience metrics critical for enterprise applications.",
      "fcp_desc": "Measures when the first content element becomes visible",
      "fcp_target": "Target: < 2000ms",
      "fcp_title": "🎨 First Contentful Paint (FCP)",
      "firefox_desc": "Cross-browser performance validation and compatibility testing",
      "firefox_title": "🟧 Firefox",
      "load_desc": "Complete page loading including all resources",
      "load_target": "Target: < 5000ms",
      "load_title": "🌐 Page Load Time",
      "login_flow_desc": "Form interaction and authentication response time validation",
      "login_flow_title": "🚀 Login Flow Performance",
      "login_page_desc": "Comprehensive page load performance and Core Web Vitals validation",
      "login_page_title": "🔐 Login Page Performance",
      "memory_desc": "JavaScript heap memory consumption monitoring",
      "memory_target": "Tracked: JS Heap Size",
      "memory_title": "💾 Memory Usage",
      "metrics_title": "📊 Core Web Vitals Monitoring",
      "network_desc": "Resource loading optimization and network request monitoring",
      "network_title": "🌐 Network Performance Analysis",
      "tests_title": "🧪 Performance Test Scenarios",
      "title": "Playwright Frontend Performance Testing",
      "webkit_desc": "Safari performance testing on macOS environments",
      "webkit_title": "🟪 WebKit (macOS)"
    },
    "tabs": {
      "artillery": "Artillery Backend",
      "ci_integration": "CI/CD Integration",
      "enterprise": "Enterprise Features",
      "overview": "Overview",
      "playwright": "Playwright Frontend"
    }
  },
  "platforms": {
    "opensuse": {
      "leap_note": "Uses stable packages, may need manual Rust installation",
      "package_notes": "Package Manager Notes",
      "python_versions": "Leap ships with Python 3.9+, Tumbleweed with latest stable",
      "title": "openSUSE Leap/Tumbleweed",
      "tumbleweed_note": "Rolling release, Rust available via zypper"
    },
    "sles": {
      "apparmor_note": "SUSE uses AppArmor instead of SELinux by default",
      "enterprise_considerations": "Enterprise Considerations",
      "firewall_config": "Open required ports via YaST or firewall-cmd",
      "firewall_note": "SuSEfirewall2 or firewalld may block agent ports",
      "logging_note": "Logs available via journalctl or /var/log/messages",
      "selinux_note": "May require policy adjustments if enabled",
      "service_notes": "SUSE Enterprise Notes",
      "sles12_note": "May require Software Collections (SCL) for newer Python",
      "sles15_note": "Python 3.6+ included, but 3.9+ recommended",
      "subscription_note": "Some packages require active SLES subscription",
      "title": "SUSE Linux Enterprise Server (SLES)"
    }
  },
  "quick_start": {
    "step1": {
      "description": "Deploy the SysManage server on your infrastructure",
      "link": "Server Installation Guide →",
      "title": "Install Server"
    },
    "step2": {
      "description": "Install agents on systems you want to manage",
      "link": "Agent Installation Guide →",
      "title": "Deploy Agents"
    },
    "step3": {
      "description": "Access the web interface and approve your agents",
      "link": "Getting Started Guide →",
      "title": "Start Managing"
    },
    "title": "Quick Start"
  },
  "rbac_docs": {
    "best_practices": {
      "audit": {
        "description": "Monitor and review audit logs for role assignments and permission-based actions to detect potential security issues.",
        "title": "📝 Audit Logging"
      },
      "least_privilege": {
        "description": "Grant users only the minimum roles necessary to perform their job functions. Avoid giving broad permissions unless absolutely required.",
        "title": "🔒 Principle of Least Privilege"
      },
      "role_review": {
        "description": "Periodically review user role assignments to ensure they remain appropriate. Remove roles when users change responsibilities or leave the organization.",
        "title": "🔍 Regular Role Reviews"
      },
      "separation": {
        "description": "For sensitive operations, consider separating approval and execution roles across different users to prevent unauthorized actions.",
        "title": "🔐 Separation of Duties"
      },
      "title": "Best Practices"
    },
    "breadcrumb": "RBAC",
    "card": {
      "description": "Role-based access control with defense-in-depth security",
      "feature1": "Fine-grained permission system",
      "feature2": "Frontend and backend validation",
      "feature3": "60+ individual security roles",
      "feature4": "Role groups for easy management",
      "feature5": "Least privilege enforcement",
      "link": "RBAC Documentation →",
      "title": "RBAC"
    },
    "defense_in_depth": {
      "description": "Every protected operation in SysManage uses a two-layer security validation approach:",
      "layer1": {
        "description": "UI elements (buttons, menus, actions) are hidden or disabled based on user permissions. This prevents users from attempting unauthorized actions and provides a better user experience.",
        "title": "🖥️ Frontend Layer"
      },
      "layer2": {
        "description": "API endpoints validate user permissions before executing any operation. Even if the frontend is bypassed, the backend enforces security with HTTP 403 errors for unauthorized access.",
        "title": "🔒 Backend Layer"
      },
      "title": "Defense-in-Depth Architecture",
      "why": {
        "description": "The frontend layer cannot be trusted for security enforcement since it runs in the user's browser and can be manipulated. The backend layer provides the actual security guarantee. Together, they offer both security (backend) and usability (frontend).",
        "title": "Why Two Layers?"
      }
    },
    "description": "Comprehensive documentation for SysManage's role-based access control system with defense-in-depth security.",
    "footer": {
      "auth_link": "← Authentication",
      "quick_nav": "Quick Navigation",
      "security_index": "Security Documentation →"
    },
    "groups": {
      "host_management": {
        "description": "Controls for managing hosts, their lifecycle, and operational states.",
        "title": "🖥️ Host Management"
      },
      "integration_management": {
        "description": "Controls for managing system integrations and message queues.",
        "title": "🔗 Integration Management"
      },
      "package_management": {
        "description": "Controls for software package operations and OS upgrades.",
        "title": "📦 Package Management"
      },
      "report_management": {
        "description": "Controls for viewing and generating system reports.",
        "title": "📊 Report Management"
      },
      "script_management": {
        "description": "Controls for managing and executing scripts on hosts.",
        "title": "📜 Script Management"
      },
      "secrets_management": {
        "description": "Controls for OpenBAO vault and secrets operations.",
        "title": "🔐 Secrets Management"
      },
      "ubuntu_pro": {
        "description": "Controls for Ubuntu Pro subscription management.",
        "title": "🔷 Ubuntu Pro Management"
      },
      "user_management": {
        "description": "Controls for managing SysManage users and their accounts.",
        "title": "👥 User Management"
      }
    },
    "header": {
      "subtitle": "Fine-grained security permissions with defense-in-depth protection for all SysManage operations.",
      "title": "Role-Based Access Control (RBAC)"
    },
    "implementation": {
      "assignment": {
        "description": "Administrators can assign roles to users through the Settings → Users interface. Multiple roles can be assigned to each user, providing flexible permission combinations for different organizational needs.",
        "title": "Role Assignment"
      },
      "backend": {
        "description": "FastAPI endpoints validate user roles before executing operations. Unauthorized access returns HTTP 403:",
        "title": "Backend Permission Validation"
      },
      "frontend": {
        "description": "The React frontend uses the hasPermission() function to check user permissions. UI elements are conditionally rendered based on these checks:",
        "title": "Frontend Permission Checks"
      },
      "title": "Implementation Details"
    },
    "overview": {
      "description": "SysManage implements a comprehensive role-based access control (RBAC) system that provides fine-grained permissions for every operation in the platform. The system is built on a defense-in-depth security model, ensuring that security checks are enforced at multiple layers.",
      "title": "Security Model Overview"
    },
    "role_groups": {
      "description": "Security roles are organized into logical groups based on the functional areas they control:",
      "title": "Security Role Groups"
    },
    "roles": {
      "add_package": "Add Package",
      "add_package_desc": "Install new software packages on hosts",
      "add_script": "Add Script",
      "add_script_desc": "Create new scripts in the library",
      "add_secret": "Add Secret",
      "add_secret_desc": "Create new secrets in the vault",
      "add_user": "Add User",
      "add_user_desc": "Create new user accounts",
      "apply_host_os_upgrade": "Apply Host OS Upgrade",
      "apply_host_os_upgrade_desc": "Perform major OS version upgrades",
      "apply_software_update": "Apply Software Update",
      "apply_software_update_desc": "Apply available package updates",
      "approve_host_registration": "Approve Host Registration",
      "approve_host_registration_desc": "Approve or reject new host registration requests",
      "attach_ubuntu_pro": "Attach Ubuntu Pro",
      "attach_ubuntu_pro_desc": "Attach Ubuntu Pro subscriptions to hosts",
      "change_ubuntu_pro_master_key": "Change Ubuntu Pro Master Key",
      "change_ubuntu_pro_master_key_desc": "Update the Ubuntu Pro master token",
      "delete_host": "Delete Host",
      "delete_host_desc": "Remove hosts from the system",
      "delete_queue_message": "Delete Queue Message",
      "delete_queue_message_desc": "Remove messages from the message queue",
      "delete_script": "Delete Script",
      "delete_script_desc": "Remove scripts from the library",
      "delete_script_execution": "Delete Script Execution",
      "delete_script_execution_desc": "Remove script execution history",
      "delete_secret": "Delete Secret",
      "delete_secret_desc": "Remove secrets from the vault",
      "delete_user": "Delete User",
      "delete_user_desc": "Remove user accounts from the system",
      "deploy_certificate": "Deploy Certificate",
      "deploy_certificate_desc": "Deploy SSL/TLS certificates to hosts",
      "deploy_ssh_key": "Deploy SSH Key",
      "deploy_ssh_key_desc": "Deploy SSH keys to hosts",
      "detach_ubuntu_pro": "Detach Ubuntu Pro",
      "detach_ubuntu_pro_desc": "Detach Ubuntu Pro subscriptions from hosts",
      "edit_script": "Edit Script",
      "edit_script_desc": "Modify existing scripts",
      "edit_secret": "Edit Secret",
      "edit_secret_desc": "Modify existing secrets",
      "edit_tags": "Edit Tags",
      "edit_tags_desc": "Modify host tags for organization",
      "edit_user": "Edit User",
      "edit_user_desc": "Modify user account details",
      "enable_grafana_integration": "Enable Grafana Integration",
      "enable_grafana_integration_desc": "Configure and enable Grafana integration",
      "generate_pdf_report": "Generate PDF Report",
      "generate_pdf_report_desc": "Export reports as PDF documents",
      "lock_user": "Lock User",
      "lock_user_desc": "Lock user accounts to prevent access",
      "reboot_host": "Reboot Host",
      "reboot_host_desc": "Initiate host reboots",
      "reset_user_password": "Reset User Password",
      "reset_user_password_desc": "Reset passwords for user accounts",
      "restart_host_service": "Restart Host Service",
      "restart_host_service_desc": "Restart services running on hosts",
      "run_script": "Run Script",
      "run_script_desc": "Execute scripts on hosts",
      "shutdown_host": "Shutdown Host",
      "shutdown_host_desc": "Shut down hosts",
      "start_host_service": "Start Host Service",
      "start_host_service_desc": "Start services on hosts",
      "start_vault": "Start Vault",
      "start_vault_desc": "Start the OpenBAO vault service",
      "stop_host_service": "Stop Host Service",
      "stop_host_service_desc": "Stop services running on hosts",
      "stop_vault": "Stop Vault",
      "stop_vault_desc": "Stop the OpenBAO vault service",
      "unlock_user": "Unlock User",
      "unlock_user_desc": "Unlock previously locked user accounts",
      "view_host_details": "View Host Details",
      "view_host_details_desc": "Access detailed information about hosts",
      "view_report": "View Report",
      "view_report_desc": "View reports in the web interface"
    },
    "title": "Role-Based Access Control - SysManage"
  },
  "secrets_management": {
    "architecture": {
      "description": "The integration between SysManage and OpenBAO creates a fortress-like security architecture that protects your most sensitive data.",
      "diagram_title": "🔄 Secure Data Flow",
      "principle1": "<strong>Zero Trust</strong>: Every access request is authenticated and authorized",
      "principle2": "<strong>Encryption Everywhere</strong>: Data encrypted at rest, in transit, and in memory",
      "principle3": "<strong>Minimal Exposure</strong>: Secrets are only decrypted when needed",
      "principle4": "<strong>Comprehensive Auditing</strong>: Every operation is logged and traceable",
      "principle5": "<strong>Principle of Least Privilege</strong>: Access granted only as needed",
      "principles_title": "🛡️ Security Principles",
      "step1_description": "Secrets are encrypted and stored in OpenBAO vault with metadata tracking",
      "step1_title": "Secure Storage",
      "step2_description": "SysManage authenticates with OpenBAO using secure token-based auth",
      "step2_title": "Authentication",
      "step3_description": "Secrets are retrieved on-demand with full audit logging",
      "step3_title": "Secure Retrieval",
      "step4_description": "Secrets transmitted to agents via encrypted WebSocket channels",
      "step4_title": "Encrypted Deployment",
      "title": "🏗️ Security Architecture"
    },
    "benefits": {
      "automation_description": "Complete automation of certificate and SSH key deployment eliminates human error and reduces operational overhead.",
      "automation_title": "🤖 Zero-Touch Automation",
      "compliance_description": "Meets SOC 2, GDPR, HIPAA, and other regulatory requirements out of the box with comprehensive audit trails and encryption.",
      "compliance_title": "✅ Compliance-Ready",
      "description": "SysManage's OpenBAO integration delivers security capabilities that set it apart from every other system management platform:",
      "enterprise_description": "While other platforms treat security as an afterthought, SysManage builds on OpenBAO's enterprise-proven foundation from the ground up.",
      "enterprise_title": "🏢 Enterprise-Ready from Day One",
      "integration_description": "Native OpenBAO integration means no complex configurations or third-party dependencies - it just works.",
      "integration_title": "🔗 Seamless Integration",
      "monitoring_description": "Monitor secret deployments in real-time with comprehensive logging and status tracking across all your infrastructure.",
      "monitoring_title": "📊 Real-Time Visibility",
      "scalability_description": "From single servers to massive multi-cloud deployments, the architecture scales without compromising security or performance.",
      "scalability_title": "📈 Infinite Scale",
      "title": "🏆 Competitive Advantages"
    },
    "breadcrumb": "Secrets Management",
    "card": {
      "description": "Revolutionary secrets management powered by OpenBAO vault - the crown jewel of SysManage's security architecture.",
      "feature1": "Enterprise-grade OpenBAO vault integration",
      "feature2": "Automated SSL/TLS certificate deployment",
      "feature3": "Centralized SSH key management and deployment",
      "feature4": "Zero-trust architecture with comprehensive audit trails",
      "feature5": "Military-grade encryption for all sensitive data",
      "link": "Secrets Management →",
      "title": "🔒 Enterprise Secrets Management with OpenBAO"
    },
    "deployment": {
      "cert_step1_description": "Upload certificates through SysManage web interface, automatically stored in OpenBAO vault",
      "cert_step1_title": "Upload & Store",
      "cert_step2_description": "Choose target hosts and deployment paths through intuitive web interface",
      "cert_step2_title": "Select Targets",
      "cert_step3_description": "Certificates securely transmitted via encrypted WebSocket connections to agents",
      "cert_step3_title": "Secure Transfer",
      "cert_step4_description": "Agents deploy certificates with proper permissions and verify successful installation",
      "cert_step4_title": "Deployment & Verification",
      "certificate_title": "📜 Certificate Deployment Process",
      "ssh_step1_description": "Store SSH public keys in OpenBAO with metadata and access controls",
      "ssh_step1_title": "Key Management",
      "ssh_step2_description": "Assign keys to specific users and hosts with granular permissions",
      "ssh_step2_title": "User Assignment",
      "ssh_step3_description": "Keys automatically added to authorized_keys files with proper formatting",
      "ssh_step3_title": "Automated Deployment",
      "ssh_step4_description": "Verify SSH access works and maintain audit trail of all key operations",
      "ssh_step4_title": "Access Verification",
      "ssh_title": "🔑 SSH Key Deployment Process",
      "title": "🚀 Deployment Workflow"
    },
    "description": "Enterprise-grade secrets management using OpenBAO vault for secure certificate deployment, SSH keys, and credentials management in SysManage.",
    "features": {
      "certificates_description": "Deploy SSL/TLS certificates across your entire infrastructure with zero downtime. OpenBAO securely stores certificates and private keys, while SysManage handles automated deployment to target hosts.",
      "certificates_feature1": "Secure certificate storage with encryption at rest",
      "certificates_feature2": "Automated deployment to multiple hosts simultaneously",
      "certificates_feature3": "Real-time deployment monitoring and status tracking",
      "certificates_feature4": "Comprehensive audit trail for all certificate operations",
      "certificates_title": "📜 Automated Certificate Deployment",
      "credentials_description": "Store and manage sensitive credentials with military-grade encryption, making manual credential management a thing of the past.",
      "credentials_feature1": "AES-256 encryption for all stored secrets",
      "credentials_feature2": "Granular access controls and permissions",
      "credentials_feature3": "Secret versioning and rollback capabilities",
      "credentials_feature4": "Integration with external authentication systems",
      "credentials_title": "🛡️ Credentials Vault",
      "ssh_description": "Revolutionize SSH access management with centralized key storage, automated deployment, and rotation capabilities that eliminate manual key distribution.",
      "ssh_feature1": "Centralized SSH key storage and management",
      "ssh_feature2": "Automated key deployment to authorized_keys files",
      "ssh_feature3": "Support for ed25519, RSA, and ECDSA key types",
      "ssh_feature4": "Key rotation and lifecycle management",
      "ssh_title": "🔑 SSH Key Management",
      "title": "⭐ Revolutionary Features in SysManage"
    },
    "getting_started": {
      "description": "Ready to experience enterprise-grade secrets management? The integrated OpenBAO setup makes getting started effortless:",
      "link1": "Complete Getting Started Guide",
      "link2": "Security Best Practices",
      "link3": "Administration Guide",
      "link4": "API Documentation",
      "next_title": "📚 Next Steps",
      "step1_description": "The <code>sysmanage_secure_installation</code> script automatically configures OpenBAO in production mode with secure defaults.",
      "step1_title": "1. Automated Setup",
      "step2_description": "Use the web interface to securely upload certificates, SSH keys, and other sensitive data.",
      "step2_title": "2. Upload Secrets",
      "step3_description": "Select targets and deploy with real-time monitoring and comprehensive audit trails.",
      "step3_title": "3. Deploy with Confidence",
      "title": "🚀 Getting Started"
    },
    "header": {
      "subtitle": "Revolutionary secrets management powered by OpenBAO vault - setting the gold standard for infrastructure security.",
      "title": "🔒 Enterprise Secrets Management with OpenBAO"
    },
    "openbao": {
      "benefit1_description": "Every secret is encrypted at rest and in transit, with granular access controls and comprehensive audit logging.",
      "benefit1_title": "🔐 Zero-Trust Security",
      "benefit2_description": "Lightning-fast secret retrieval and storage with minimal latency impact on your operations.",
      "benefit2_title": "🏃‍♂️ High Performance",
      "benefit3_description": "Scales from single installations to massive multi-region deployments seamlessly.",
      "benefit3_title": "🌐 Enterprise Scale",
      "benefit4_description": "Generate short-lived, rotatable secrets that minimize exposure windows.",
      "benefit4_title": "🔄 Dynamic Secrets",
      "benefits_title": "🎯 Why OpenBAO Makes SysManage Exceptional",
      "description": "OpenBAO is a cutting-edge, open-source secrets management platform that provides enterprise-grade security for sensitive data. Born from the HashiCorp Vault codebase, OpenBAO represents the future of secrets management with enhanced security, better performance, and true open-source governance.",
      "title": "🚀 What is OpenBAO?"
    },
    "overview": {
      "badge_description": "OpenBAO provides bank-level encryption, zero-trust architecture, and enterprise audit trails that make SysManage the most secure system management platform available.",
      "badge_title": "🛡️ Military-Grade Security",
      "description": "SysManage integrates with <strong>OpenBAO</strong>, the enterprise-grade secrets management platform, to deliver unparalleled security for your infrastructure. This isn't just another secrets manager - it's a complete security transformation that elevates your system management to enterprise standards.",
      "title": "🏆 Second-to-None Security Architecture"
    },
    "title": "Secrets Management with OpenBAO - SysManage"
  },
  "secure_installation": {
    "accomplishments": {
      "admin_feature1": "Secure admin user creation with Argon2 password hashing",
      "admin_feature2": "UUID-based user identification",
      "admin_feature3": "Comprehensive password policy enforcement",
      "admin_feature4": "Role-based access control initialization",
      "admin_title": "👤 Administrative User Setup",
      "database_feature1": "Complete Alembic migration execution",
      "database_feature2": "UUID-based primary keys for enhanced security",
      "database_feature3": "Secure database schema initialization",
      "database_feature4": "Database connection validation and optimization",
      "database_title": "🗄️ Database Security Hardening",
      "openbao_feature1": "Automatic OpenBAO server configuration and startup",
      "openbao_feature2": "Production-mode vault initialization with secure defaults",
      "openbao_feature3": "Automated vault unsealing and secrets engine setup",
      "openbao_feature4": "Secure credential generation and storage",
      "openbao_title": "🏗️ OpenBAO Vault Initialization",
      "security_feature1": "Cryptographically secure JWT secret generation",
      "security_feature2": "Production security defaults activation",
      "security_feature3": "SSL/TLS configuration optimization",
      "security_feature4": "Security warning system initialization",
      "security_title": "🔒 Security Configuration"
    },
    "breadcrumb": "Secure Installation",
    "card": {
      "description": "Revolutionary automated setup script that transforms your SysManage installation into an enterprise-grade security fortress with OpenBAO integration.",
      "feature1": "Automated OpenBAO vault initialization in production mode",
      "feature2": "Cross-platform privilege management and elevation",
      "feature3": "Cryptographically secure admin user creation",
      "feature4": "Enterprise security defaults and hardening",
      "feature5": "Database migration and schema initialization",
      "link": "Secure Installation Guide →",
      "title": "🔐 Secure Installation"
    },
    "cross_platform": {
      "description": "The secure installation script demonstrates SysManage's commitment to universal compatibility with intelligent platform detection and privilege management:",
      "privileges_title": "🔐 Intelligent Privilege Management",
      "supported_title": "✅ Supported Platforms",
      "title": "🌐 Cross-Platform Excellence"
    },
    "description": "Complete guide to the sysmanage_secure_installation script for automated OpenBAO setup and secure system initialization.",
    "flow": {
      "step1_description": "Validates virtual environment, dependencies, and system requirements",
      "step1_title": "Environment Validation",
      "step2_description": "Executes Alembic migrations to set up secure database schema",
      "step2_title": "Database Migration",
      "step3_description": "Creates administrative user with secure password hashing",
      "step3_title": "Admin User Creation",
      "step4_description": "Generates JWT secrets and applies security hardening",
      "step4_title": "Security Configuration",
      "step5_description": "Configures and initializes OpenBAO vault in production mode",
      "step5_title": "OpenBAO Initialization",
      "success_description": "Enterprise-grade SysManage installation ready for production use",
      "success_title": "Production Ready!"
    },
    "header": {
      "subtitle": "Automated production-ready setup with integrated OpenBAO vault initialization and enterprise security defaults.",
      "title": "🔐 SysManage Secure Installation"
    },
    "overview": {
      "badge_description": "What used to take hours of manual configuration now happens in minutes with bulletproof automation that never makes mistakes.",
      "badge_title": "🚀 Zero-Configuration Excellence",
      "description": "The <code>sysmanage_secure_installation</code> script represents a quantum leap in system management deployment. Inspired by MySQL's legendary secure installation process, this script transforms a basic SysManage installation into an enterprise-grade, production-ready security fortress.",
      "title": "🏆 Production-Ready Security from Day One"
    },
    "platforms": {
      "freebsd_description": "BSD-native with doas and sudo support",
      "freebsd_title": "😈 FreeBSD",
      "linux_description": "Full support for all major distributions with automatic sudo detection",
      "linux_title": "🐧 Linux",
      "macos_description": "Native macOS support with Homebrew integration",
      "macos_title": "🍎 macOS",
      "openbsd_description": "OpenBSD security-first approach with doas integration",
      "openbsd_title": "🐡 OpenBSD",
      "windows_description": "PowerShell and MSYS2 support with Administrator privilege detection",
      "windows_title": "🪟 Windows"
    },
    "post_installation": {
      "check1": "<strong>Secure Credentials</strong>: Store the generated <code>.vault_credentials</code> file in a secure location",
      "check2": "<strong>Start Services</strong>: Use <code>make start</code> to launch all services",
      "check3": "<strong>Access Web Interface</strong>: Navigate to <code>https://your-server:8443</code>",
      "check4": "<strong>Login</strong>: Use the admin credentials you created during installation",
      "check5": "<strong>Deploy Agents</strong>: Install and approve SysManage agents on your infrastructure",
      "check6": "<strong>Upload Secrets</strong>: Begin using the secrets management features",
      "checklist_title": "✅ Post-Installation Checklist",
      "description": "After successful completion, your SysManage installation is production-ready with enterprise-grade security. Here's what to do next:",
      "link1": "Complete Getting Started Guide",
      "link2": "Explore Secrets Management Features",
      "link3": "Install and Configure Agents",
      "link4": "Review Security Best Practices",
      "next_title": "🚀 Next Steps",
      "title": "🎉 Post-Installation Steps"
    },
    "privileges": {
      "feature1": "<strong>Automatic Detection</strong>: Detects current privilege level across all platforms",
      "feature2": "<strong>Smart Elevation</strong>: Uses appropriate elevation method (sudo, doas, or Administrator)",
      "feature3": "<strong>Virtual Environment</strong>: Maintains proper Python virtual environment context",
      "feature4": "<strong>Safety Checks</strong>: Validates environment before making system changes"
    },
    "security": {
      "argon2_description": "Uses Argon2id, the winner of the Password Hashing Competition, providing military-grade protection against rainbow table and GPU-based attacks.",
      "argon2_feature1": "Memory-hard algorithm resistant to specialized hardware attacks",
      "argon2_feature2": "Configurable time and memory parameters for optimal security",
      "argon2_feature3": "Salt-based protection against rainbow table attacks",
      "argon2_title": "🔐 Argon2 Password Hashing",
      "jwt_description": "Generates cryptographically secure JWT secrets using Python's secrets module for unbreakable token security.",
      "jwt_feature1": "256-bit entropy from OS-level randomness",
      "jwt_feature2": "Automatic secret rotation capabilities",
      "jwt_feature3": "Secure token validation and expiration",
      "jwt_title": "🎫 Cryptographic JWT Secrets",
      "openbao_description": "Seamless OpenBAO integration provides enterprise-grade secrets management from the moment of installation.",
      "openbao_feature1": "Automatic vault initialization and unsealing",
      "openbao_feature2": "Production-mode configuration with secure defaults",
      "openbao_feature3": "Key-value secrets engine setup and configuration",
      "openbao_title": "🏦 OpenBAO Vault Integration",
      "uuid_description": "All primary keys use cryptographically secure UUIDs, eliminating enumeration attacks and providing enhanced privacy.",
      "uuid_feature1": "Version 4 UUIDs with cryptographic randomness",
      "uuid_feature2": "Prevents user enumeration and predictable resource URLs",
      "uuid_feature3": "Enhanced privacy and GDPR compliance",
      "uuid_title": "🆔 UUID-Based Security"
    },
    "security_features": {
      "title": "🛡️ Advanced Security Features"
    },
    "title": "Secure Installation Guide - SysManage",
    "troubleshooting": {
      "database_problem": "<strong>Problem:</strong> Database connection failures during migration",
      "database_solution1": "Verify PostgreSQL is running: <code>systemctl status postgresql</code>",
      "database_solution2": "Check database credentials in configuration file",
      "database_solution3": "Ensure database user has CREATE privileges",
      "database_solution4": "Test connection manually: <code>psql -h host -U user -d database</code>",
      "database_solution_title": "Solution:",
      "database_title": "🗄️ Database Connection Issues",
      "openbao_problem": "<strong>Problem:</strong> OpenBAO binary not found or initialization fails",
      "openbao_solution1": "Install OpenBAO: <code>make install-dev</code> (includes OpenBAO)",
      "openbao_solution2": "Manually install OpenBAO from official releases",
      "openbao_solution3": "Check firewall settings for localhost connections",
      "openbao_solution4": "Use <code>--skip-vault</code> flag to skip OpenBAO setup temporarily",
      "openbao_solution_title": "Solution:",
      "openbao_title": "🏦 OpenBAO Installation Issues",
      "privileges_problem": "<strong>Problem:</strong> Script fails with permission denied errors",
      "privileges_solution1": "Ensure you have administrative privileges on your system",
      "privileges_solution2": "On Linux/macOS: Use <code>sudo</code> or ensure your user is in sudoers",
      "privileges_solution3": "On FreeBSD/OpenBSD: Configure <code>doas</code> or use <code>sudo</code>",
      "privileges_solution4": "On Windows: Run terminal as Administrator",
      "privileges_solution_title": "Solution:",
      "privileges_title": "❌ Privilege Issues",
      "title": "🔧 Troubleshooting",
      "venv_problem": "<strong>Problem:</strong> \"Virtual environment not found\" error",
      "venv_solution_title": "Solution:",
      "venv_title": "🐍 Virtual Environment Issues"
    },
    "usage": {
      "advanced_title": "Advanced Options:",
      "basic_title": "Basic Usage:",
      "flow_title": "📊 Installation Flow",
      "prereq1": "SysManage installation with virtual environment set up (<code>make install-dev</code>)",
      "prereq2": "Administrative/root privileges on the system",
      "prereq3": "PostgreSQL database running and accessible",
      "prereq4": "OpenBAO binary available (automatically installed with <code>make install-dev</code>)",
      "prerequisites_title": "📋 Prerequisites",
      "running_title": "⚡ Running the Script",
      "title": "🚀 Usage Guide"
    },
    "what_it_does": {
      "description": "This revolutionary script automates the complete transformation of your SysManage installation into an enterprise-grade security platform:",
      "title": "⚡ What the Script Accomplishes"
    }
  },
  "security": {
    "authentication": {
      "admin": "Admin",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "auditor": "Auditor",
      "auth_architecture": "Authentication Architecture",
      "authentication_events": "Authentication Events",
      "automatic_rotation": "Automatic Rotation",
      "common_issues": "Common Issues",
      "default_password_policy": "Default Password Policy",
      "default_roles": "Default Roles",
      "diagnostic_commands": "Diagnostic Commands",
      "email_otp": "Email OTP",
      "external_auth_integration": "External Auth Integration",
      "external_auth_providers": "External Authentication Providers",
      "integration_examples": "Integration Examples",
      "jwt_authentication": "JWT Authentication",
      "jwt_configuration": "JWT Configuration",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "mfa_configuration": "MFA Configuration",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_implementation": "MFA Implementation",
      "mfa_setup_problems": "MFA Setup Problems",
      "monitored_events": "Monitored Events",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "next_steps": "Next Steps",
      "operator": "Operator",
      "overview": "Authentication Overview",
      "password_policies": "Password Policies",
      "password_policy_configuration": "Password Policy Configuration",
      "password_requirements": "Password Requirements",
      "permission_examples": "Permission Examples",
      "permission_system": "Permission System",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "rbac_implementation": "RBAC Implementation",
      "rbac_permission_errors": "RBAC Permission Errors",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "recovery_codes": "Recovery Codes",
      "saml_integration": "SAML 2.0 Integration",
      "security_events": "Security Events",
      "security_monitoring": "Authentication Security Monitoring",
      "session_architecture": "Session Architecture",
      "session_configuration": "Session Configuration",
      "session_features": "Session Features",
      "session_management": "Session Management",
      "session_monitoring": "Session Monitoring",
      "session_security": "Session Security",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "supported_mfa_methods": "Supported MFA Methods",
      "suspicious_activities": "Suspicious Activities",
      "title": "Authentication & Authorization",
      "token_based_sessions": "Token-Based Sessions",
      "token_blacklisting": "Token Blacklisting",
      "token_expired_errors": "Token Expired Errors",
      "token_generation_process": "Token Generation Process",
      "token_rotation_security": "Token Rotation & Security",
      "token_validation_flow": "Token Validation Flow",
      "totp": "TOTP (Time-based OTP)",
      "troubleshooting": "Troubleshooting Authentication",
      "viewer": "Viewer"
    },
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "title": "Security Documentation"
  },
  "security_docs": {
    "database_security": {
      "description": "UUID-based primary keys and secure database design patterns for enhanced security.",
      "gdpr_compliance": "GDPR compliance support for data anonymization",
      "information_leakage": "Eliminates predictable resource URL patterns",
      "link": "Database Security →",
      "privacy_enhanced": "Enhanced privacy through non-correlatable identifiers",
      "replay_protection": "Non-sequential identifiers prevent replay attacks",
      "secure_installation": "Secure installation script with unique tokens",
      "title": "🗄️ Database Security",
      "uuid_keys": "UUID-based primary keys prevent ID enumeration attacks"
    },
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "header": {
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments.",
      "title": "Security Documentation"
    },
    "section_title": "Security",
    "title": "Security Documentation - SysManage"
  },
  "security_page": {
    "features": "Security Features",
    "overview": "Security Overview",
    "title": "Security Documentation",
    "vulnerability_reporting": "Vulnerability Reporting"
  },
  "server_configuration": {
    "advanced": {
      "discovery": {
        "service": {
          "description": "Allows agents to automatically discover and configure themselves with available servers on the network.",
          "title": "📡 Discovery Service"
        },
        "title": "Agent Discovery Service"
      },
      "logging": {
        "title": "Logging Configuration"
      },
      "performance": {
        "title": "Performance Tuning"
      },
      "title": "Advanced Features"
    },
    "basic": {
      "api_server": {
        "notes": {
          "host_binding": "<strong>Host binding:</strong> Use <code>0.0.0.0</code> for external access, <code>localhost</code> for local only",
          "port_selection": "<strong>Port selection:</strong> Ensure the port is not in use by other services",
          "ssl_certificates": "<strong>SSL certificates:</strong> If not provided, server falls back to HTTP",
          "title": "📝 Notes"
        },
        "title": "API Server Settings"
      },
      "database": {
        "security_warning": {
          "description": "The example password <code>abc123</code> is for development only. <strong>Always use strong passwords in production!</strong>",
          "title": "⚠️ Security Warning"
        },
        "title": "Database Configuration"
      },
      "title": "Basic Configuration",
      "webui": {
        "title": "Web UI Settings"
      }
    },
    "breadcrumb": {
      "configuration": "Configuration",
      "server": "Server"
    },
    "certificates": {
      "mtls": {
        "description": "Mutual TLS settings are automatically managed by the server. When hosts are approved, client certificates are generated and stored in the certificate directory.",
        "title": "mTLS Configuration",
        "workflow": {
          "step1": "<strong>Host Registration:</strong> Agent registers with pending status",
          "step2": "<strong>Manual Approval:</strong> Administrator approves host in web interface",
          "step3": "<strong>Certificate Generation:</strong> Server generates unique client certificate",
          "step4": "<strong>Secure Authentication:</strong> Subsequent connections use mTLS",
          "title": "🔄 mTLS Workflow"
        }
      },
      "storage": {
        "permissions": {
          "certificates": "<strong>Certificates:</strong> <code>0644</code> (owner rw, others read)",
          "directory": "<strong>Certificate directory:</strong> <code>0755</code> (owner rwx, group/others rx)",
          "private_keys": "<strong>Private keys:</strong> <code>0600</code> (owner read/write only)",
          "title": "🔒 Required Permissions"
        },
        "title": "Certificate Storage"
      },
      "title": "Certificate Management"
    },
    "description": "Complete configuration guide for SysManage server including security settings, database configuration, and advanced features.",
    "email": {
      "smtp": {
        "providers": {
          "exchange": "Exchange",
          "gmail": "Gmail",
          "gmail_note": "<strong>Note:</strong> Requires 2FA and App Password. Visit <a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Google App Passwords</a> for setup.",
          "office365": "Office 365",
          "postfix": "Postfix",
          "title": "📧 Common SMTP Configurations"
        },
        "title": "SMTP Settings"
      },
      "title": "Email Configuration"
    },
    "environment": {
      "description": "Configuration can also be set via environment variables (overrides YAML file):",
      "title": "Environment Variables"
    },
    "file_locations": {
      "development": "🛠️ Development",
      "linux_macos_bsd": "🐧 Linux/macOS/BSD",
      "title": "Configuration File Locations",
      "windows": "🪟 Windows"
    },
    "header": {
      "description": "Comprehensive configuration options for customizing your SysManage server deployment.",
      "title": "Server Configuration Guide"
    },
    "navigation": {
      "deployment": "Deployment Guide →",
      "installation": "← Installation Guide"
    },
    "permissions": {
      "directory": {
        "title": "Required Directory Structure"
      },
      "security_checklist": {
        "cert_directory": "✅ Certificate directory has restricted access",
        "config_file": "✅ Configuration file is readable only by service user",
        "db_credentials": "✅ Database credentials are unique and strong",
        "jwt_rotation": "✅ JWT secrets are regularly rotated",
        "private_keys": "✅ Private keys are protected with 0600 permissions",
        "strong_passwords": "✅ Strong passwords and secrets are used",
        "title": "🛡️ Security Checklist"
      },
      "title": "File Permissions and Security"
    },
    "security": {
      "core": {
        "generating_values": {
          "title": "🔐 Generating Secure Values"
        },
        "title": "Core Security Settings"
      },
      "password_policy": {
        "notes": {
          "flexible_requirements": "<strong>Flexible requirements:</strong> Adjust policies to meet your organization's needs",
          "multilanguage": "<strong>Multi-language:</strong> Error messages available in all 14 supported languages",
          "realtime_validation": "<strong>Real-time validation:</strong> Policies are enforced in both frontend and backend",
          "title": "📝 Password Policy Notes"
        },
        "title": "Password Policy Configuration"
      },
      "title": "Security Configuration"
    },
    "testing": {
      "title": "Testing Configuration",
      "validation": {
        "database": "<strong>Database Connection:</strong>",
        "email": "<strong>Email Configuration:</strong>",
        "ssl": "<strong>SSL Certificates:</strong>",
        "syntax": "<strong>Configuration Syntax:</strong>",
        "title": "Validation Steps"
      }
    },
    "title": "Server Configuration Guide - SysManage"
  },
  "server_deployment": {
    "backup": {
      "database": {
        "title": "Database Backup"
      },
      "disaster": {
        "step1": "<strong>Assessment:</strong> Determine scope of failure and affected systems",
        "step2": "<strong>Communication:</strong> Notify stakeholders and users of the incident",
        "step3": "<strong>Isolation:</strong> Isolate failed components to prevent further damage",
        "step4": "<strong>Recovery:</strong> Restore from backups or failover to standby systems",
        "step5": "<strong>Verification:</strong> Test restored systems and verify functionality",
        "step6": "<strong>Post-mortem:</strong> Document incident and improve procedures",
        "title": "Disaster Recovery Plan"
      },
      "title": "Backup & Disaster Recovery"
    },
    "breadcrumb": {
      "deployment": "Deployment",
      "server": "Server"
    },
    "checklist": {
      "performance": {
        "assets": "Frontend assets minified and compressed",
        "caching": "Caching headers configured",
        "limits": "Resource limits set for application processes",
        "logging": "Log levels set appropriately for production",
        "pooling": "Database connection pooling configured",
        "title": "Performance Optimization"
      },
      "pre_deployment": {
        "database": "PostgreSQL database server prepared",
        "dns": "DNS records configured",
        "hardware": "Server hardware/VM specifications meet requirements",
        "monitoring": "Backup and monitoring systems in place",
        "network": "Network connectivity and firewall rules configured",
        "ssl": "SSL certificates obtained and validated",
        "title": "Pre-Deployment"
      },
      "security": {
        "database": "Database access restricted to application",
        "firewall": "Firewall rules limiting access to required ports",
        "https": "HTTPS/TLS enabled and enforced",
        "jwt": "JWT token settings optimized",
        "logs": "Log file permissions and rotation configured",
        "passwords": "Strong password policies configured",
        "title": "Security Configuration"
      },
      "title": "Production Checklist"
    },
    "container": {
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetes Deployment"
      },
      "title": "Container Deployment"
    },
    "description": "Production deployment strategies and best practices for scalable SysManage infrastructure.",
    "ha": {
      "architecture": {
        "title": "Architecture Overview"
      },
      "database": {
        "replication": {
          "title": "PostgreSQL Streaming Replication"
        },
        "title": "Database Clustering"
      },
      "load_balancer": {
        "nginx": {
          "title": "Nginx Configuration"
        },
        "title": "Load Balancer Configuration"
      },
      "title": "High Availability Deployment"
    },
    "header": {
      "description": "Production deployment strategies and best practices for scalable, secure, and reliable SysManage infrastructure.",
      "title": "Deployment Guide"
    },
    "maintenance": {
      "procedure": {
        "step1": "<strong>Backup:</strong> Create full system backup before updates",
        "step2": "<strong>Testing:</strong> Test updates in staging environment",
        "step3": "<strong>Maintenance Window:</strong> Schedule maintenance with user notification",
        "step4": "<strong>Update:</strong> Apply updates following documented procedures",
        "step5": "<strong>Verification:</strong> Verify all systems function correctly",
        "step6": "<strong>Rollback Plan:</strong> Have rollback procedures ready if needed",
        "title": "Update Procedure"
      },
      "tasks": {
        "daily": {
          "backup": "Verify backup completion",
          "logs": "Review application logs for errors",
          "monitoring": "Monitor system health and performance",
          "title": "Daily"
        },
        "monthly": {
          "capacity": "Capacity planning review",
          "performance": "Performance analysis and optimization",
          "security": "Security vulnerability assessment",
          "title": "Monthly"
        },
        "title": "Maintenance Tasks",
        "weekly": {
          "packages": "Update system packages",
          "restore_test": "Test backup restoration procedures",
          "security": "Review security logs and alerts",
          "title": "Weekly"
        }
      },
      "title": "Maintenance & Updates"
    },
    "monitoring": {
      "logs": {
        "title": "Log Management"
      },
      "system": {
        "health": {
          "title": "Health Check Endpoint"
        },
        "prometheus": {
          "title": "Prometheus Configuration"
        },
        "title": "System Monitoring"
      },
      "title": "Monitoring & Logging"
    },
    "overview": {
      "description": "SysManage can be deployed in various configurations depending on your infrastructure requirements, from single-server setups to highly available multi-node clusters.",
      "strategies": {
        "cloud": {
          "description": "Scalable cloud-native deployment options",
          "features": {
            "availability": "Multi-region availability",
            "database": "Managed database services",
            "orchestration": "Container orchestration (Kubernetes)",
            "scaling": "Auto-scaling capabilities"
          },
          "title": "☁️ Cloud Deployment"
        },
        "ha": {
          "description": "Production environments requiring zero downtime",
          "features": {
            "clustering": "Database clustering with failover",
            "load_balancer": "Load balancer with SSL termination",
            "redundancy": "Redundant network and storage",
            "servers": "Multiple application servers"
          },
          "title": "🔄 High Availability Deployment"
        },
        "single": {
          "description": "Ideal for small to medium environments (up to 100 hosts)",
          "features": {
            "components": "Single server hosts all components",
            "configuration": "Simple configuration and maintenance",
            "database": "PostgreSQL database on same server",
            "resources": "Lower resource requirements"
          },
          "title": "🖥️ Single Server Deployment"
        }
      },
      "title": "Deployment Overview"
    },
    "performance": {
      "application": {
        "title": "Application Tuning"
      },
      "caching": {
        "application": "<strong>Application Cache:</strong> Database query result caching",
        "browser": "<strong>Browser Cache:</strong> Client-side asset caching with appropriate headers",
        "cdn": "<strong>CDN:</strong> Static asset delivery and geographic distribution",
        "redis": "<strong>Redis:</strong> Session storage and temporary data caching",
        "title": "Caching Strategy"
      },
      "database": {
        "title": "Database Tuning"
      },
      "title": "Performance Optimization"
    },
    "security": {
      "application": {
        "audit_logging": "<strong>Audit Logging:</strong> Log all administrative actions",
        "csp": "<strong>CSP:</strong> Content Security Policy implementation",
        "hsts": "<strong>HSTS:</strong> HTTP Strict Transport Security headers",
        "https": "<strong>HTTPS Only:</strong> Enforce TLS for all connections",
        "input_validation": "<strong>Input Validation:</strong> Comprehensive input sanitization",
        "rate_limiting": "<strong>Rate Limiting:</strong> API endpoint rate limiting",
        "title": "Application Security"
      },
      "network": {
        "title": "Network Security"
      },
      "title": "Security Hardening"
    },
    "single_server": {
      "config": {
        "title": "Production Configuration"
      },
      "installation": {
        "title": "Installation Steps"
      },
      "requirements": {
        "component": "Component",
        "minimum": "Minimum",
        "recommended": "Recommended",
        "title": "System Requirements"
      },
      "title": "Single Server Deployment"
    },
    "title": "Deployment Guide - SysManage Server"
  },
  "server_docs": {
    "configuration": {
      "database_settings": "Database connection settings",
      "description": "Comprehensive configuration options for customizing your SysManage deployment.",
      "file_structure": "Configuration file structure",
      "link": "Configuration Guide →",
      "security_options": "Security and authentication options",
      "title": "⚙️ Configuration",
      "websocket_api": "WebSocket and API configuration"
    },
    "deployment": {
      "backup": "Backup and disaster recovery",
      "checklist": "Production deployment checklist",
      "description": "Production deployment strategies and best practices for scalable infrastructure.",
      "link": "Deployment Guide →",
      "monitoring": "Monitoring and logging setup",
      "scaling": "Load balancing and scaling",
      "title": "🏗️ Deployment"
    },
    "description": "Complete documentation for SysManage server installation, configuration, and management.",
    "features": {
      "description": "Detailed overview of all server features and capabilities.",
      "host_management": "Host and agent management",
      "link": "Features Overview →",
      "monitoring": "Real-time monitoring and alerts",
      "package_management": "Package management across platforms",
      "title": "✨ Features",
      "user_management": "User management and RBAC"
    },
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing the SysManage server.",
      "title": "Server Documentation"
    },
    "installation": {
      "database": "Database setup and configuration",
      "description": "Step-by-step installation guide for setting up the SysManage server on your infrastructure.",
      "link": "Installation Guide →",
      "methods": "Docker and traditional installation methods",
      "requirements": "System requirements and prerequisites",
      "ssl": "SSL certificate configuration",
      "title": "🚀 Installation"
    },
    "navigation": {
      "agent": "← Agent Documentation",
      "api": "API Reference →",
      "title": "Quick Navigation"
    },
    "overview": {
      "backend_api": "<strong>Backend API</strong> - FastAPI with async support, JWT authentication, and WebSocket communication",
      "components_title": "Server Components",
      "database": "<strong>Database</strong> - PostgreSQL with Alembic migrations and comprehensive data models",
      "description": "The SysManage server is a modern web application built with FastAPI (Python) backend and React (TypeScript) frontend. It provides a centralized platform for managing multiple systems through lightweight agents.",
      "frontend_ui": "<strong>Frontend UI</strong> - React with TypeScript, Material-UI components, and real-time updates",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning",
      "title": "Overview",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents"
    },
    "reports": {
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "inventory": "Host inventory and system reports",
      "link": "Reports Documentation →",
      "security": "User management and security reports",
      "title": "📋 Reports & PDF Generation"
    },
    "section_title": "Server",
    "security": {
      "auth": "Authentication and authorization",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "title": "🔐 Security"
    },
    "testing": {
      "cicd": "CI/CD testing pipeline",
      "coverage": "Test coverage and reporting",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "e2e": "End-to-end testing with Playwright",
      "link": "Testing Documentation →",
      "title": "🧪 Testing",
      "unit_integration": "Unit and integration testing"
    },
    "title": "Server Documentation - SysManage",
    "troubleshooting": {
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "link": "Troubleshooting Guide →",
      "maintenance": "Database maintenance",
      "performance": "Performance optimization",
      "title": "🔧 Troubleshooting"
    }
  },
  "server_installation": {
    "breadcrumb_installation": "Installation",
    "description": "Complete installation guide for SysManage server including prerequisites, database setup, and configuration.",
    "header": {
      "subtitle": "Complete step-by-step installation guide for setting up the SysManage server on your infrastructure.",
      "title": "Server Installation Guide"
    },
    "installation_steps": {
      "step1": {
        "title": "Step 1: Clone and Setup"
      },
      "step2": {
        "description": "Create PostgreSQL database and user:",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "netbsd": "NetBSD",
        "openbsd": "OpenBSD",
        "security_notes": {
          "change_password": "Change password in both PostgreSQL AND your configuration file",
          "dev_password": "Development password <code>abc123</code> matches <code>sysmanage-dev.yaml</code>",
          "never_production": "NEVER use this password in production",
          "title": "⚠️ Security Notes"
        },
        "title": "Step 2: Database Setup",
        "windows": "Windows"
      },
      "step3": {
        "title": "Step 3: Install Backend Dependencies"
      },
      "step4": {
        "title": "Step 4: Test Database Connection"
      },
      "step5": {
        "title": "Step 5: Install Frontend Dependencies"
      },
      "step6": {
        "config_generator": {
          "description": "इंटरैक्टिव का उपयोग करें",
          "link": "विन्यास बिल्डर उपकरण",
          "title": "💡 कॉन्फ़िगरेशन जनरेटर उपलब्ध है"
        },
        "description": "Create configuration file at:",
        "linux_macos_bsd": "Linux/macOS/BSD:",
        "security_steps": {
          "file_permissions": "Set proper file permissions: <code>chmod 600 /etc/sysmanage.yaml</code>",
          "generate_secrets": "Generate new secrets: <code>openssl rand -base64 32</code>",
          "never_commit": "Never commit configuration files to version control",
          "strong_passwords": "Use strong passwords (12+ characters)",
          "title": "🔐 Required Security Steps"
        },
        "title": "Step 6: Configuration",
        "windows_path": "Windows:"
      },
      "step7": {
        "features": {
          "admin_user": "प्रारंभिक प्रशासनिक उपयोगकर्ता खाता बनाता है",
          "config_hardening": "कॉन्फ़िगरेशन फ़ाइलों के लिए सुरक्षा कठोरता को लागू करता है",
          "jwt_secret": "प्रमाणीकरण के लिए अद्वितीय JWT गुप्त उत्पन्न करता है",
          "password_salt": "सुरक्षित पासवर्ड हैशिंग के लिए अद्वितीय पासवर्ड नमक उत्पन्न करता है",
          "prevents_defaults": "डिफ़ॉल्ट/उदाहरण सुरक्षा टोकन के उपयोग को रोकता है",
          "title": "यह स्क्रिप्ट क्या करती है:"
        },
        "security_note": {
          "description": "सुरक्षित स्थापना स्क्रिप्ट को प्रारंभिक व्यवस्थापक उपयोगकर्ता बनाने और आपकी स्थापना के लिए अद्वितीय सुरक्षा टोकन कॉन्फ़िगर करने के लिए चलाया जाना चाहिए।",
          "title": "🔐 नए प्रतिष्ठानों के लिए आवश्यक है"
        },
        "title": "Step 7: Run Secure Installation Script",
        "warning": {
          "backup_config": "इस स्क्रिप्ट को चलाने के बाद अपनी कॉन्फ़िगरेशन फ़ाइल का बैकअप लें",
          "required": "यह कदम आवश्यक है",
          "required_desc": "आवेदन इसके बिना सुरक्षित रूप से कार्य नहीं करेगा",
          "run_once": "केवल इस स्क्रिप्ट को एक बार स्थापना के लिए एक बार चलाएं",
          "title": "⚠ महत्वपूर्ण सुरक्षा नोट्स",
          "unique_tokens": "प्रत्येक स्थापना को विश्वसनीय पुन: उपयोग को रोकने के लिए अद्वितीय सुरक्षा टोकन मिलते हैं"
        }
      },
      "step8": {
        "access_description": "एप्लिकेशन को एक्सेस करें:",
        "http": "Http:",
        "http_url": "http: // localhost: 3000 (फॉलबैक)",
        "https": "Https:",
        "https_url": "https://sysmanage.org:7443 (यदि SSL CERTS मौजूद है)",
        "title": "Step 8: Start the Application"
      },
      "title": "Installation Steps"
    },
    "navigation": {
      "config_guide": "Configuration Guide →",
      "server_docs": "← Server Documentation"
    },
    "note": "Note",
    "prerequisites": {
      "centos": {
        "tab_title": "CentOS/RHEL",
        "title": "CentOS/RHEL/Fedora"
      },
      "centos_rhel": "CentOS/RHEL",
      "freebsd": {
        "tab_title": "FreeBSD",
        "title": "FreeBSD"
      },
      "macos": {
        "tab_title": "macOS",
        "title": "macOS"
      },
      "netbsd": {
        "tab_title": "NetBSD",
        "title": "NetBSD Complete Setup Guide"
      },
      "openbsd": {
        "tab_title": "OpenBSD",
        "title": "OpenBSD"
      },
      "opensuse": {
        "note_leap": "openSUSE Leap: Stable packages, Python 3.11 typically available",
        "note_nodejs": "Node.js versions: May need to specify version (nodejs20) explicitly",
        "note_postgresql": "PostgreSQL: Specify version (postgresql14) for compatibility",
        "note_title": "📦 Package Manager Notes",
        "note_tumbleweed": "openSUSE Tumbleweed: Rolling release with latest packages",
        "tab_title": "openSUSE",
        "title": "openSUSE Leap/Tumbleweed"
      },
      "sles": {
        "note_firewall": "Firewall: May use SuSEfirewall2 (older) or firewalld (newer)",
        "note_modules": "Modules: Some packages require enabling additional modules via SUSEConnect",
        "note_selinux": "SELinux: May require policy adjustments if enabled",
        "note_sles12": "SLES 12: May require Software Collections (SCL) for newer Python",
        "note_sles15": "SLES 15: Python 3.6+ included, but 3.11+ recommended",
        "note_subscription": "Subscription: Active SLES subscription required for full package access",
        "note_title": "🏢 Enterprise Considerations",
        "tab_title": "SLES",
        "title": "SUSE Linux Enterprise Server (SLES)"
      },
      "title": "Platform-Specific Prerequisites",
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10 (Recommended)"
      },
      "ubuntu25": {
        "note": "Ubuntu 25.04+ only ships with Python 3.13, which is not yet compatible. You must build Python 3.12 from source:",
        "tab_title": "Ubuntu 25.04+",
        "title": "Ubuntu 25.04+ (Python 3.12 from Source)"
      },
      "ubuntu_debian": "Ubuntu/Debian",
      "windows": {
        "tab_title": "Windows",
        "title": "Windows"
      }
    },
    "requirements": {
      "nodejs": {
        "description": "For building the React frontend",
        "title": "🟢 Node.js",
        "version": "20.x or higher"
      },
      "os": {
        "description": "Cross-platform deployment",
        "platforms": "Linux, macOS, Windows, FreeBSD, OpenBSD, NetBSD",
        "title": "💻 Operating System"
      },
      "postgresql": {
        "description": "Primary database for all application data",
        "title": "🐘 PostgreSQL",
        "version": "14 or higher"
      },
      "python": {
        "note": "Note: Python 3.13 is NOT yet supported due to package compatibility issues",
        "title": "🐍 Python",
        "version": "3.11 or 3.12"
      },
      "required": "Required",
      "supported": "Supported",
      "title": "System Requirements"
    },
    "ssl": {
      "description": "For HTTPS development, place your SSL certificates in:",
      "fallback": "If certificates are not found, the system automatically falls back to HTTP on localhost.",
      "title": "SSL Certificates (Optional)"
    },
    "title": "Server Installation Guide - SysManage",
    "troubleshooting": {
      "db_issues": {
        "check_credentials": "Check credentials match configuration file",
        "test_connection": "Test connection with psql command shown above",
        "title": "Database Connection Issues",
        "verify_postgresql": "Verify PostgreSQL is running: <code>sudo systemctl status postgresql</code>"
      },
      "package_errors": {
        "httptools_errors": "httptools build errors:",
        "install_libpq": "Install <code>libpq-dev</code> (Ubuntu) or <code>postgresql-devel</code> (RHEL)",
        "install_libuv": "Install <code>libuv1-dev</code> (Ubuntu) or <code>libuv-devel</code> (RHEL)",
        "missing_libpq": "Missing libpq-fe.h:",
        "python313_issues": "Python 3.13 issues:",
        "title": "Package Build Errors",
        "use_older_python": "Use Python 3.11 or 3.12 instead"
      },
      "permission_issues": {
        "check_venv": "Check virtual environment activation",
        "ensure_ownership": "Ensure proper ownership of directories",
        "set_config_permissions": "Set configuration file permissions: <code>chmod 600 /etc/sysmanage.yaml</code>",
        "title": "Permission Issues"
      },
      "port_conflicts": {
        "check_services": "Check for existing services: <code>netstat -tlnp | grep :6443</code>",
        "ensure_ports": "Ensure ports 6443 (API) and 7443 (frontend) are available",
        "modify_ports": "Modify ports in configuration if needed",
        "title": "Port Conflicts"
      },
      "title": "Troubleshooting"
    }
  },
  "site": {
    "description": "Modern system management platform for comprehensive infrastructure monitoring and automation",
    "title": "SysManage - Modern System Management Platform"
  },
  "testing": {
    "breadcrumb": "Testing",
    "description": "Comprehensive testing guide for SysManage including unit tests, integration tests, and E2E testing with Playwright.",
    "msw": {
      "benefits": {
        "cicd": "CI/CD: No need to spin up backend services in test environments",
        "development": "Development: Work on frontend features before backend APIs are ready",
        "isolation": "Test Isolation: Frontend tests run independently of backend availability",
        "reliability": "Reliability: Consistent responses eliminate flaky tests",
        "speed": "Performance: No network latency, tests execute faster",
        "title": "Why MSW?"
      },
      "bestpractices": {
        "coverage": "API Coverage: Ensure all API endpoints used by components are mocked",
        "errors": "Error Scenarios: Test both success and error responses",
        "isolation": "Test Isolation: MSW automatically resets handlers between tests",
        "logging": "Request Logging: Use MSW logging to debug unexpected API calls",
        "realistic": "Realistic Data: Use mock data that closely matches production API responses",
        "title": "Best Practices"
      },
      "compatibility": {
        "description": "SysManage includes special compatibility fixes for React 19 in the test environment:",
        "title": "React 19 Compatibility"
      },
      "debugging": {
        "console": "Console output for MSW request logs",
        "description": "If tests fail due to API issues, check:",
        "handlers": "Handler patterns match actual API calls",
        "setup": "MSW server is properly started in test setup",
        "title": "Debugging MSW",
        "unhandled": "Warnings about unhandled requests"
      },
      "features": {
        "ci": {
          "description": "MSW includes special handling for continuous integration environments:",
          "title": "CI/CD Integration"
        },
        "dynamic": {
          "description": "MSW uses broad pattern matching with dynamic path resolution:",
          "fallback": "Graceful fallback for unmatched endpoints",
          "parsing": "URL parsing extracts specific endpoint paths",
          "title": "Dynamic Path Handling",
          "wildcard": "Wildcard patterns catch all /api/* requests"
        },
        "realistic": {
          "description": "MSW provides comprehensive mock data that mirrors real API responses:",
          "hosts": "Complete host information with hardware details",
          "operations": "Package installation/uninstallation operations",
          "packages": "Software package data with search functionality",
          "title": "Realistic Response Simulation",
          "users": "User authentication and profile data"
        },
        "title": "Key Features"
      },
      "handlers": {
        "description": "MSW handlers are defined in /src/mocks/handlers.ts and provide comprehensive API coverage:",
        "title": "Request Handlers"
      },
      "implementation": {
        "title": "Implementation Architecture"
      },
      "installation": {
        "description": "MSW is already installed and configured in the SysManage frontend. The setup includes:",
        "title": "Installation & Configuration"
      },
      "integration": {
        "description": "MSW is automatically configured for all tests in /src/setupTests.ts with proper lifecycle management:",
        "title": "Test Integration"
      },
      "overview": {
        "description": "Mock Service Worker (MSW) is a powerful API mocking library that intercepts HTTP requests at the network level, providing realistic API responses for frontend testing. SysManage uses MSW extensively to ensure frontend components can be tested in isolation without requiring a running backend server.",
        "title": "Overview"
      },
      "server": {
        "description": "The MSW server is configured for Node.js test environments in /src/mocks/node.ts:",
        "title": "Test Server Setup"
      },
      "title": "Mock Service Worker (MSW) Frontend Testing",
      "usage": {
        "automatic": {
          "description": "Most tests automatically benefit from MSW without additional configuration:",
          "title": "Automatic API Mocking"
        },
        "custom": {
          "description": "Tests can override specific handlers for custom scenarios:",
          "title": "Custom Handler Overrides"
        },
        "title": "Usage in Tests"
      }
    },
    "overview": {
      "description": "SysManage employs a multi-layered testing approach to ensure reliability, security, and functionality across all components:",
      "e2e": {
        "crossbrowser": "Cross-browser compatibility (Chrome, Firefox, Safari/WebKit)",
        "crossplatform": "क्रॉस-प्लेटफॉर्म सपोर्ट (लिनक्स, मैकओएस, विंडोज, ओपनबीएसडी, फ्रीबीएसडी)",
        "description": "Revolutionary cross-platform UI testing framework with intelligent browser selection",
        "framework": "ट्रिपल परीक्षण ढांचा: नाटककार (प्राथमिक) + सेलेनियम (फॉलबैक) + सीआई/सीडी एकीकरण",
        "journey": "Full user journey testing with real database integration",
        "link": "→ पूरा यूआई परीक्षण प्रलेखन",
        "realworld": "Real-world scenario validation with production-like setup",
        "title": "End-to-End (E2E) Tests",
        "ui": "UI interaction and workflow testing with Argon2 authentication"
      },
      "integration": {
        "api": "API endpoint testing",
        "auth": "Authentication and authorization flow testing",
        "database": "Database integration testing",
        "description": "Testing interactions between different system components",
        "title": "Integration Tests",
        "websocket": "WebSocket communication testing"
      },
      "msw": {
        "description": "API mocking for isolated and reliable frontend testing",
        "isolation": "Complete test isolation from backend dependencies",
        "realistic": "Realistic API response simulation",
        "reliability": "Consistent and predictable test behavior",
        "speed": "Faster test execution without network requests",
        "title": "Mock Service Worker (MSW)"
      },
      "title": "Testing Strategy Overview",
      "unit": {
        "backend": {
          "count": "1,432 Python tests using pytest",
          "text": "Backend:"
        },
        "coverage": {
          "text": "Coverage:",
          "value": "100% test coverage for both backend and frontend"
        },
        "description": "Comprehensive unit testing for individual components and functions",
        "frontend": {
          "count": "63 TypeScript tests using Vitest",
          "text": "Frontend:"
        },
        "title": "Unit Tests"
      }
    },
    "running": {
      "all": {
        "title": "All Tests"
      },
      "backend": {
        "title": "Backend Tests (Python/pytest)"
      },
      "e2e": {
        "title": "End-to-End Tests (Playwright)"
      },
      "frontend": {
        "description": "Frontend tests automatically use Mock Service Worker for API mocking:",
        "msw": {
          "automatic": "MSW automatically intercepts all API requests",
          "description": "When running frontend tests:",
          "isolation": "Each test runs in complete isolation",
          "logging": "Request logs appear in console output",
          "realistic": "Realistic API responses are provided automatically",
          "title": "MSW Behavior"
        },
        "title": "Frontend Tests (TypeScript/Vitest with MSW)"
      },
      "title": "Running Tests"
    },
    "subtitle": "Comprehensive testing strategy for SysManage server including unit tests, integration tests, and end-to-end testing with Playwright.",
    "title": "Testing"
  },
  "ui_testing": {
    "best_practices": {
      "description": "बनाए रखने योग्य और विश्वसनीय यूआई परीक्षण के लिए उद्योग सर्वोत्तम अभ्यास।",
      "maintenance": {
        "coverage": "कवरेज विश्लेषण: महत्वपूर्ण उपयोगकर्ता वर्कफ़्लोज़ का पर्याप्त कवरेज सुनिश्चित करें",
        "flaky_test": "परतदार परीक्षण प्रबंधन: अविश्वसनीय परीक्षणों को पहचानें और ठीक करें",
        "performance": "प्रदर्शन निगरानी: ट्रैक परीक्षण निष्पादन समय और धीमी गति से परीक्षण का अनुकूलन करें",
        "regular_updates": "नियमित अपडेट: ब्राउज़र और फ्रेमवर्क संस्करण वर्तमान रखें",
        "title": "रखरखाव दिशानिर्देश"
      },
      "test_design": {
        "data_driven": "डेटा-संचालित परीक्षण: व्यापक परिदृश्य कवरेज के लिए पैरामीटर परीक्षण",
        "idempotent": "Idempotent परीक्षण: परीक्षण लगातार परिणामों के साथ कई बार चल सकते हैं",
        "independent": "परीक्षण स्वतंत्रता: प्रत्येक परीक्षण निर्भरता के बिना स्वतंत्र रूप से चलता है",
        "page_object": "पेज ऑब्जेक्ट पैटर्न: पुन: प्रयोज्य ऑब्जेक्ट्स में पेज इंटरैक्शन को एनकैप्सुलेट करें",
        "title": "🎯 परीक्षण डिजाइन सिद्धांत"
      },
      "title": "सर्वोत्तम प्रथाएं"
    },
    "breadcrumb": "यूआई परीक्षण",
    "cicd_integration": {
      "badges": {
        "integration": "README एकीकरण: परियोजना प्रलेखन में दृश्य परीक्षण की स्थिति",
        "real_time": "रियल-टाइम अपडेट: टेस्ट पूरा होने पर स्वचालित बैज अपडेट",
        "title": "स्टेटस बैज",
        "ui_tests": "यूआई परीक्षण: ग्रीन 'पासिंग' / रेड 'फेलिंग' स्टेटस बैज"
      },
      "description": "GitHub क्रियाओं के साथ एंटरप्राइज-ग्रेड CI/CD एकीकरण हर कमिट और पुल अनुरोध पर स्वचालित परीक्षण प्रदान करता है।",
      "github_actions": {
        "artifact_collection": "आर्टिफ़ैक्ट कलेक्शन: स्क्रीनशॉट और लॉग विश्लेषण के लिए संरक्षित",
        "comprehensive_logging": "व्यापक लॉगिंग: डिबगिंग के लिए विस्तृत आउटपुट विफल परीक्षण",
        "fail_fast": "फेल-फास्ट लॉजिक: फर्स्ट टेस्ट विफलता पर तुरंत निष्पादन बंद करें",
        "parallel_execution": "समानांतर निष्पादन: बैकएंड, फ्रंटेंड, और यूआई परीक्षण समवर्ती रूप से चलते हैं",
        "title": "🚀 github कार्रवाई वर्कफ़्लो"
      },
      "title": "सीआई/सीडी एकीकरण",
      "workflow_steps": {
        "cleanup": "सफाई: संसाधन सफाई और विरूपण साक्ष्य संरक्षण",
        "database_setup": "डेटाबेस सेटअप: PostgreSQL इनिशियलाइज़ेशन और स्कीमा माइग्रेशन",
        "dependency_install": "निर्भरता स्थापना: बैकएंड और फ्रंटेंड निर्भरता",
        "server_startup": "सर्वर स्टार्टअप: स्वास्थ्य जांच के साथ एप्लिकेशन स्टार्टअप",
        "setup": "पर्यावरण सेटअप: पायथन, नोड.जेएस, और ब्राउज़र इंस्टॉलेशन",
        "test_execution": "परीक्षण निष्पादन: विफलता का पता लगाने के साथ समानांतर परीक्षण सूट निष्पादन",
        "title": "वर्कफ़्लो निष्पादन चरण"
      }
    },
    "cross_platform": {
      "description": "व्यापक परीक्षण रणनीति सभी समर्थित ऑपरेटिंग सिस्टम में लगातार व्यवहार सुनिश्चित करती है।",
      "intelligent_selection": {
        "makefile_logic": "मेकफाइल लॉजिक: प्लेटफ़ॉर्म डिटेक्शन के आधार पर ऑटोमैटिक फ्रेमवर्क चयन",
        "playwright_preferred": "नाटककार पसंदीदा: बेहतर प्रदर्शन के लिए उपलब्ध होने पर उपयोग किया जाता है",
        "selenium_fallback": "सेलेनियम फॉलबैक: असमर्थित प्लेटफार्मों के लिए स्वचालित गिरावट",
        "title": "🧠 बुद्धिमान ढांचा चयन",
        "transparent_switching": "पारदर्शी स्विचिंग: अंतर्निहित ढांचे की परवाह किए बिना एक ही परीक्षण इंटरफ़ेस"
      },
      "platform_matrix": {
        "freebsd": "फ्रीबीएसडी: क्रोम/फ़ायरफ़ॉक्स समर्थन के साथ सेलेनियम",
        "linux": "लिनक्स: पूर्ण ब्राउज़र समर्थन के साथ नाटककार (क्रोम, फ़ायरफ़ॉक्स, वेबकिट को बाहर किया गया)",
        "macos": "MacOS: पूर्ण ब्राउज़र समर्थन के साथ नाटककार (क्रोम, फ़ायरफ़ॉक्स, वेबकिट)",
        "openbsd": "OpenBSD: क्रोम/फ़ायरफ़ॉक्स समर्थन के साथ सेलेनियम",
        "title": "📊 प्लेटफ़ॉर्म परीक्षण मैट्रिक्स",
        "windows": "Windows: पूर्ण ब्राउज़र समर्थन के साथ नाटककार (क्रोम, फ़ायरफ़ॉक्स, वेबकिट को बाहर किया गया)"
      },
      "title": "क्रॉस-प्लेटफॉर्म परीक्षण रणनीति"
    },
    "database_integration": {
      "database_setup": {
        "real_postgres": "वास्तविक PostgreSQL: परीक्षण वास्तविक उत्पादन डेटाबेस स्कीमा के खिलाफ चलते हैं",
        "rollback_support": "रोलबैक समर्थन: परीक्षण रन के बीच स्वच्छ राज्य बहाली",
        "schema_sync": "स्कीमा सिंक्रनाइज़ेशन: परीक्षण से पहले स्वचालित स्कीमा माइग्रेशन",
        "title": "डेटाबेस सेटअप",
        "transaction_isolation": "लेन -देन अलगाव: प्रत्येक परीक्षण पृथक डेटाबेस लेनदेन में चलता है"
      },
      "description": "परिष्कृत डेटाबेस एकीकरण सुनिश्चित करता है कि परीक्षण उचित उपयोगकर्ता जीवनचक्र प्रबंधन के साथ वास्तविक PostgreSQL के खिलाफ चलते हैं।",
      "title": "डेटाबेस एकीकरण",
      "user_injection": {
        "argon2_hashing": "Argon2 पासवर्ड हैशिंग: कॉन्फ़िगर करने योग्य नमक के साथ उत्पादन-ग्रेड पासवर्ड सुरक्षा",
        "proper_cleanup": "उचित सफाई: परीक्षण उपयोगकर्ताओं को परीक्षण पूरा होने के बाद स्वचालित रूप से हटा दिया गया",
        "title": "🔐 परीक्षण उपयोगकर्ता इंजेक्शन",
        "unique_users": "अद्वितीय परीक्षण उपयोगकर्ता: प्रत्येक परीक्षण रन पृथक परीक्षण उपयोगकर्ता बनाता है",
        "yaml_configuration": "YAML कॉन्फ़िगरेशन: Sysmanage.yaml से नमक और डेटाबेस क्रेडेंशियल्स"
      }
    },
    "debugging": {
      "common_issues": {
        "browser_not_found": "ब्राउज़र नहीं मिला: इंस्टॉल-ब्राउज़र के साथ लापता ब्राउज़र स्थापित करें",
        "database_connection": "डेटाबेस कनेक्शन: सत्यापित करें PostgreSQL चल रहा है और सुलभ है",
        "permission_errors": "अनुमति त्रुटियां: स्क्रीनशॉट निर्देशिका के लिए फ़ाइल अनुमतियों की जाँच करें",
        "timeout_errors": "टाइमआउट त्रुटियां: धीमी गति से लोडिंग तत्वों के लिए प्रतीक्षा समय बढ़ाएं",
        "title": "सामान्य मुद्दे और समाधान"
      },
      "description": "व्यापक डिबगिंग क्षमताओं को तेजी से जारी करने और परीक्षण विश्वसनीयता सुनिश्चित करने की क्षमता।",
      "logging": {
        "browser_logs": "ब्राउज़र लॉग: कंसोल आउटपुट और जावास्क्रिप्ट त्रुटियों पर कब्जा कर लिया",
        "network_logs": "नेटवर्क लॉग: HTTP अनुरोध और प्रतिक्रियाओं की निगरानी की",
        "timing_info": "समय की जानकारी: धीमी गति से संचालन के लिए प्रदर्शन मेट्रिक्स",
        "title": "लॉगिंग और डायग्नोस्टिक्स",
        "verbose_output": "वर्बोज़ आउटपुट: विस्तृत परीक्षण निष्पादन लॉग"
      },
      "screenshot_capture": {
        "automatic": "स्वचालित कैप्चर: परीक्षण विफलता पर लिया गया स्क्रीनशॉट",
        "browser_context": "ब्राउज़र संदर्भ: स्क्रीनशॉट में ब्राउज़र और पेज स्टेट शामिल हैं",
        "storage_location": "भंडारण स्थान: स्क्रीनशॉट/tmp/क्लाउड/परीक्षा के लिए सहेजे गए",
        "timestamped": "टाइमस्टैम्प की गई फाइलें: विश्लेषण के लिए टाइमस्टैम्प के साथ सेव्ड स्क्रीनशॉट",
        "title": "📸 स्क्रीनशॉट कैप्चर"
      },
      "title": "डिबगिंग और समस्या निवारण"
    },
    "description": "क्रांतिकारी ट्रिपल टेस्टिंग फ्रेमवर्क जिसमें नाटककार (प्राथमिक), सेलेनियम (फॉलबैक), और क्रॉस-प्लेटफॉर्म यूआई परीक्षण उत्कृष्टता के लिए व्यापक सीआई/सीडी एकीकरण की विशेषता है।",
    "header": {
      "subtitle": "इंटेलिजेंट ब्राउज़र चयन और क्रॉस-प्लेटफॉर्म संगतता के साथ एंटरप्राइज-ग्रेड यूआई परीक्षण",
      "title": "क्रॉस-प्लेटफॉर्म यूआई परीक्षण ढांचा"
    },
    "makefile_integration": {
      "commands": {
        "install_browsers": "इंस्टॉल-ब्राउज़र बनाएं: आवश्यक ब्राउज़र निर्भरता स्थापित करें",
        "test_all": "टेस्ट करें: पूरा टेस्ट सूट चलाएं (बैकएंड + फ्रंटेंड + यूआई)",
        "test_playwright": "टेस्ट-प्ले राइट बनाएं: फोर्स प्लेराइट निष्पादन (यदि उपलब्ध हो)",
        "test_selenium": "टेस्ट-सेलेनियम बनाएं: बल सेलेनियम निष्पादन",
        "test_ui": "टेस्ट-यूआई बनाओ: बुद्धिमान ढांचे के चयन के साथ सभी यूआई परीक्षण चलाएं",
        "title": "🔧 उपलब्ध आदेश"
      },
      "description": "मौजूदा बिल्ड सिस्टम के साथ सहज एकीकरण जटिल परीक्षण संचालन के लिए सरल कमांड प्रदान करता है।",
      "platform_detection": {
        "automatic": "स्वचालित पहचान: MakeFile OS का पता लगाता है और उपयुक्त ढांचे का चयन करता है",
        "dependency_check": "निर्भरता जाँच: आवश्यक ब्राउज़र और ड्राइवर उपलब्ध हैं",
        "error_reporting": "त्रुटि रिपोर्टिंग: स्पष्ट संदेश जब निर्भरताएँ गायब होती हैं",
        "graceful_fallback": "ग्रेसफुल फॉलबैक: सेलेनियम पर वापस आता है अगर नाटककार अनुपलब्ध है",
        "title": "प्लेटफ़ॉर्म डिटेक्शन लॉजिक"
      },
      "title": "मेकफाइल एकीकरण"
    },
    "navigation": {
      "database_security": "डेटाबेस सुरक्षा →",
      "testing": "← परीक्षण अवलोकन",
      "title": "त्वरित नेविगेशन"
    },
    "overview": {
      "architecture": {
        "cicd_integration": "CI/CD एकीकरण: विफल-फास्ट लॉजिक और व्यापक त्रुटि रिपोर्टिंग के साथ GitHub क्रियाएं",
        "playwright_primary": "नाटककार (प्राथमिक): लिनक्स, मैकओएस, विंडोज - क्रोम, फ़ायरफ़ॉक्स और वेबकिट के साथ पूर्ण क्रॉस -ब्राउज़र समर्थन",
        "selenium_fallback": "सेलेनियम (फॉलबैक): OpenBSD, FreeBSD - विश्वसनीय WebDriver ऑटोमेशन जहां नाटककार अनुपलब्ध है",
        "title": "🏗 ट्रिपल परीक्षण वास्तुकला"
      },
      "benefits": {
        "ci_optimization": "CI/CD अनुकूलित: व्यापक डिबगिंग आउटपुट के साथ फेल-फास्ट निष्पादन",
        "cross_browser": "क्रॉस-ब्राउज़र संगतता: क्रोम, फ़ायरफ़ॉक्स, सफारी/वेबकिट समर्थन",
        "cross_platform": "क्रॉस-प्लेटफॉर्म उत्कृष्टता: 5 ऑपरेटिंग सिस्टम में सहज परीक्षण",
        "intelligent_selection": "बुद्धिमान चयन: फ्रेमवर्क स्वचालित रूप से प्रति प्लेटफ़ॉर्म इष्टतम परीक्षण उपकरण चुनता है",
        "production_parity": "उत्पादन समता: उचित उपयोगकर्ता जीवनचक्र प्रबंधन के साथ वास्तविक डेटाबेस एकीकरण",
        "title": "मुख्य लाभ"
      },
      "description": "SysManage एक क्रांतिकारी ट्रिपल परीक्षण ढांचे को लागू करता है जो स्वचालित रूप से प्लेटफ़ॉर्म क्षमताओं के लिए अनुकूलित करता है, सभी समर्थित वातावरणों में व्यापक यूआई परीक्षण कवरेज सुनिश्चित करता है।",
      "title": "ढांचा अवलोकन"
    },
    "playwright": {
      "browser_support": {
        "chromium": "क्रोमियम: सभी प्लेटफार्मों पर पूर्ण समर्थन (लिनक्स, मैकओएस, विंडोज)",
        "firefox": "फ़ायरफ़ॉक्स: सभी प्लेटफार्मों पर पूर्ण समर्थन",
        "title": "ब्राउज़र समर्थन मैट्रिक्स",
        "webkit": "WebKit (सफारी): MACOS केवल - स्वचालित रूप से अन्य प्लेटफार्मों पर बाहर रखा गया"
      },
      "configuration": {
        "authentication": "Argon2 पासवर्ड Sysmanage.yaml से नमक के साथ हैशिंग",
        "cleanup": "परीक्षण पूरा होने के बाद स्वचालित परीक्षण उपयोगकर्ता सफाई",
        "conftest": "नाटककार जुड़नार/tests/ui/conftest.py में परिभाषित किया गया",
        "database": "उचित उपयोगकर्ता इंजेक्शन के साथ वास्तविक PostgreSQL डेटाबेस एकीकरण",
        "title": "विन्यास"
      },
      "description": "एंटरप्राइज़-ग्रेड विश्वसनीयता के साथ क्रॉस-ब्राउज़र परीक्षण प्रदान करने वाले आधुनिक ब्राउज़र ऑटोमेशन फ्रेमवर्क।",
      "features": {
        "async_native": "Async मूल: देशी Async/प्रतीक्षा समर्थन के साथ आधुनिक जावास्क्रिप्ट के लिए बनाया गया",
        "auto_wait": "ऑटो-वेट: स्पष्ट नींद के बिना तत्वों की प्रतीक्षा में बुद्धिमान",
        "cross_browser": "क्रॉस-ब्राउज़र परीक्षण: क्रोमियम, फ़ायरफ़ॉक्स, वेबकिट (सफारी) समर्थन",
        "mobile_testing": "मोबाइल परीक्षण: डिवाइस इम्यूलेशन और टच इंटरेक्शन सपोर्ट",
        "network_interception": "नेटवर्क इंटरसेप्शन: मॉक एंड मॉनिटर नेटवर्क अनुरोध",
        "screenshots": "स्वचालित स्क्रीनशॉट: विजुअल सबूत के साथ विफलता डिबगिंग",
        "title": "🎭 नाटककार सुविधाएँ"
      },
      "title": "नाटककार परीक्षण"
    },
    "selenium": {
      "configuration": {
        "browser_detection": "बुद्धिमान ब्राउज़र का पता लगाने और ड्राइवर चयन",
        "screenshot_support": "डिबगिंग के लिए स्क्रीनशॉट कैप्चर विफल परीक्षण",
        "timeout_handling": "मजबूत टाइमआउट और त्रुटि हैंडलिंग",
        "title": "विन्यास",
        "webdriver_manager": "WebDriver-Manager के साथ स्वचालित WebDriver प्रबंधन"
      },
      "description": "विश्वसनीय WebDriver ऑटोमेशन फ्रेमवर्क प्लेटफ़ॉर्म के लिए इंटेलिजेंट फॉलबैक के रूप में सेवारत है जहां नाटककार अनुपलब्ध है।",
      "features": {
        "broad_support": "ब्रॉड ब्राउज़र सपोर्ट: क्रोम, फ़ायरफ़ॉक्स, एज, सफारी कम्पैटिबिलिटी",
        "cross_platform": "क्रॉस-प्लेटफ़ॉर्म: सभी ऑपरेटिंग सिस्टम में लगातार व्यवहार",
        "stable_api": "स्थिर एपीआई: परिपक्व और अच्छी तरह से प्रलेखित स्वचालन इंटरफ़ेस",
        "title": "सेलेनियम सुविधाएँ",
        "webdriver": "WebDriver मानक: उद्योग-मानक ब्राउज़र स्वचालन प्रोटोकॉल"
      },
      "title": "सेलेनियम परीक्षण",
      "use_cases": {
        "freebsd": "FREEBSD: प्राथमिक परीक्षण ढांचा (नाटककार अनुपलब्ध)",
        "legacy_systems": "विरासत प्रणाली: पुराने ब्राउज़रों के साथ व्यापक संगतता",
        "openbsd": "OpenBSD: प्राथमिक परीक्षण ढांचा (नाटककार अनुपलब्ध)",
        "specific_drivers": "विशिष्ट ड्राइवर: जब विशेष वेबड्राइवर सुविधाओं की आवश्यकता होती है",
        "title": "🔄 जब सेलेनियम का उपयोग किया जाता है"
      }
    },
    "test_structure": {
      "description": "अच्छी तरह से संगठित परीक्षण संरचना जो स्थिरता और व्यापक कवरेज सुनिश्चित करती है।",
      "file_organization": {
        "conftest_playwright": "/tests/ui/conftest.py - Playwright Tilestures और Configuration",
        "conftest_selenium": "/Tests/ui/conftest_selenium.py - सेलेनियम जुड़नार और कॉन्फ़िगरेशन",
        "cross_browser": "/tests/ui/test_login_cross_browser.py - क्रॉस -ब्राउज़र लॉगिन परीक्षण",
        "test_files": "/tests/ui/test_*.py - विशिष्ट परिदृश्यों के साथ व्यक्तिगत परीक्षण फ़ाइलें",
        "title": "📁 फ़ाइल संगठन"
      },
      "test_scenarios": {
        "cross_browser": "क्रॉस-ब्राउज़र: क्रोम, फ़ायरफ़ॉक्स, वेबकिट में समान परीक्षण",
        "error_handling": "त्रुटि हैंडलिंग: अमान्य क्रेडेंशियल्स और त्रुटि संदेश सत्यापन",
        "login_flow": "लॉगिन प्रवाह: पूर्ण प्रमाणीकरण वर्कफ़्लो परीक्षण",
        "navigation": "नेविगेशन: पोस्ट-लोगिन नेविगेशन और उपयोगकर्ता इंटरफ़ेस सत्यापन",
        "responsive": "उत्तरदायी डिजाइन: विभिन्न व्यूपोर्ट आकारों में यूआई परीक्षण",
        "title": "परीक्षण परिदृश्य"
      },
      "title": "परीक्षण संरचना और संगठन"
    },
    "title": "क्रॉस -प्लेटफॉर्म यूआई परीक्षण ढांचा - sysmanage"
  }
}