{
  "site": {
    "title": "SysManage - 현대적 시스템 관리 플랫폼",
    "description": "포괄적인 인프라 모니터링 및 자동화를 위한 현대적 시스템 관리 플랫폼"
  },
  "nav": {
    "features": "기능",
    "getting_started": "시작하기",
    "documentation": "문서",
    "github": "GitHub"
  },
  "hero": {
    "title": "현대적 시스템 관리의 간소화",
    "subtitle": "전체 인프라에 대한 중앙 집중식 모니터링, 관리 및 자동화. Linux, Windows, macOS, FreeBSD 및 OpenBSD 지원.",
    "get_started": "시작하기",
    "view_github": "GitHub에서 보기"
  },
  "features": {
    "title": "주요 기능",
    "cross_platform": {
      "title": "크로스 플랫폼 지원",
      "description": "단일 인터페이스에서 Linux, Windows, macOS, FreeBSD 및 OpenBSD 시스템을 관리합니다."
    },
    "real_time": {
      "title": "실시간 모니터링",
      "description": "WebSocket 기반 실시간 통신으로 즉각적인 시스템 업데이트 및 모니터링을 제공합니다."
    },
    "security": {
      "title": "엔터프라이즈 보안",
      "description": "JWT 인증, mTLS, 역할 기반 액세스 제어 및 포괄적인 보안 스캔."
    },
    "package_management": {
      "title": "패키지 관리",
      "description": "지원되는 모든 플랫폼에서 원격 소프트웨어 설치, 업데이트 및 관리."
    },
    "multilingual": {
      "title": "다국어 지원",
      "description": "영어, 스페인어, 프랑스어, 독일어 등을 포함한 14개 언어에 대한 네이티브 지원."
    },
    "modern_ui": {
      "title": "현대적 웹 인터페이스",
      "description": "실시간 대시보드와 포괄적인 보고 기능을 갖춘 React 기반 반응형 인터페이스."
    },
    "osVersionUpgrades": {
      "title": "⬆️ OS 버전 업그레이드",
      "majorVersionDetection": {
        "title": "주요 버전 탐지",
        "description": "사용 가능한 OS 주요 버전 업그레이드의 자동 탐지"
      },
      "multiPlatformSupport": {
        "title": "멀티 플랫폼 지원",
        "description": "Ubuntu LTS 업그레이드, Fedora 버전 업그레이드, macOS 업데이트, Windows 기능 업데이트"
      },
      "bsdSupport": {
        "title": "BSD 지원",
        "description": "OpenBSD sysupgrade 및 FreeBSD 버전 업그레이드"
      },
      "opensuseIntegration": {
        "title": "OpenSUSE 통합",
        "description": "배포판 업그레이드 탐지 및 관리"
      },
      "safetyFeatures": {
        "title": "안전 기능",
        "description": "드라이런 기능 및 배포 전 업그레이드 검증"
      },
      "rebootManagement": {
        "title": "재부팅 관리",
        "description": "시스템 재시작이 필요한 OS 업그레이드를 위한 자동 재부팅 스케줄링"
      }
    }
  },
  "quick_start": {
    "title": "빠른 시작",
    "step1": {
      "title": "서버 설치",
      "description": "인프라에 SysManage 서버 배포",
      "link": "서버 설치 가이드 →"
    },
    "step2": {
      "title": "에이전트 배포",
      "description": "관리하려는 시스템에 에이전트 설치",
      "link": "에이전트 설치 가이드 →"
    },
    "step3": {
      "title": "관리 시작",
      "description": "웹 인터페이스에 액세스하여 에이전트 승인",
      "link": "시작 가이드 →"
    }
  },
  "architecture": {
    "title": "아키텍처 개요",
    "server_components": "서버 구성요소",
    "agent_features": "에이전트 기능",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "agent_capacity": "Agent Capacity",
      "agent_scaling": "Agent Scaling",
      "agent_server_communication": "Agent-to-Server Communication",
      "application_layer": "Application Layer",
      "architecture": "Architecture",
      "architecture_overview": "Architecture Overview",
      "authentication_systems": "Authentication Systems",
      "automation_orchestration": "Automation & Orchestration",
      "backend_technologies": "Backend Technologies",
      "certificate_based_auth": "Certificate-Based Authentication",
      "communication_security": "Communication & Security",
      "core_components": "Core Components",
      "data_flow_architecture": "Data Flow Architecture",
      "data_layer": "Data Layer",
      "deployment_patterns": "Deployment Patterns",
      "devops_deployment": "DevOps & Deployment",
      "external_system_integration": "External System Integration",
      "frontend_technologies": "Frontend Technologies",
      "high_availability": "High Availability Deployment",
      "high_level_architecture": "High-Level Architecture",
      "horizontal_scaling": "Horizontal Scaling",
      "integration_points": "Integration Points",
      "key_features": "Key Features",
      "monitoring_alerting": "Monitoring & Alerting",
      "multi_region": "Multi-Region Deployment",
      "network_security": "Network Security",
      "next_steps": "Next Steps",
      "package_repositories": "Package Repositories",
      "performance_characteristics": "Performance Characteristics",
      "resource_usage": "Resource Usage",
      "response_times": "Response Times",
      "rest_api": "REST API",
      "scalability_design": "Scalability Design",
      "security_architecture": "Security Architecture",
      "server_scaling": "Server Scaling",
      "single_instance": "Single Instance Deployment",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "sysmanage_agents": "SysManage Agents",
      "sysmanage_server": "SysManage Server",
      "technology_stack": "Technology Stack",
      "title": "System Overview",
      "transport_layer": "Transport Layer",
      "use_cases": "Use Cases",
      "user_request_processing": "User Request Processing",
      "web_interface": "Web Interface"
    }
  },
  "docs": {
    "title": "문서 - SysManage",
    "description": "SysManage 서버 및 에이전트 구성 요소에 대한 완전한 문서.",
    "header": {
      "title": "문서",
      "subtitle": "SysManage 배포, 구성 및 관리를 위한 포괄적인 가이드."
    },
    "server": {
      "title": "서버 문서",
      "description": "SysManage 서버 설치, 구성 및 관리를 위한 완전한 가이드.",
      "installation": "설치 가이드",
      "configuration": "구성",
      "deployment": "배포",
      "features": "기능",
      "reports": "보고서 및 PDF 생성",
      "testing": "테스트 및 Playwright",
      "troubleshooting": "문제 해결",
      "view_docs": "서버 문서 보기 →"
    },
    "agent": {
      "title": "에이전트 문서",
      "description": "모든 플랫폼에서 SysManage 에이전트 설정 및 관리 가이드.",
      "installation": "설치 가이드",
      "configuration": "구성",
      "privileged_execution": "권한 있는 실행",
      "cross_platform": "크로스 플랫폼 지원",
      "troubleshooting": "문제 해결",
      "view_docs": "에이전트 문서 보기 →"
    },
    "api": {
      "title": "API 참조",
      "description": "SysManage와 통합하기 위한 완전한 REST API 문서.",
      "authentication": "인증",
      "hosts": "호스트 관리",
      "packages": "패키지 관리 및 제거",
      "websockets": "WebSocket API",
      "monitoring": "모니터링",
      "view_docs": "API 문서 보기 →"
    },
    "security": {
      "title": "보안",
      "description": "보안 기능, 모범 사례 및 취약점 보고.",
      "authentication": "인증 및 권한 부여",
      "mtls": "상호 TLS (mTLS)",
      "scanning": "보안 스캔",
      "best_practices": "모범 사례",
      "reporting": "취약점 보고",
      "view_docs": "보안 문서 보기 →"
    },
    "getting_started": {
      "title": "시작하기",
      "description": "새 사용자를 위한 빠른 시작 가이드 및 튜토리얼.",
      "quick_start": "빠른 시작",
      "webui_overview": "웹 인터페이스 개요",
      "first_deployment": "첫 번째 배포",
      "agent_approval": "에이전트 승인",
      "basic_management": "기본 관리",
      "tutorials": "튜토리얼",
      "view_docs": "시작하기 →"
    },
    "administration": {
      "title": "관리",
      "description": "사용자, 호스트 및 시스템 설정 관리를 위한 관리 가이드.",
      "user_management": "사용자 관리",
      "host_management": "호스트 관리",
      "monitoring": "모니터링 및 알림",
      "backup": "백업 및 복구",
      "maintenance": "유지 보수",
      "view_docs": "관리 문서 보기 →"
    },
    "architecture": {
      "title": "아키텍처 문서",
      "subtitle": "SysManage의 시스템 아키텍처, 디자인 패턴 및 컴포넌트 상호작용을 다루는 기술 문서.",
      "message_flow": "Message Flow & Queuing",
      "testing_excellence": "Testing Excellence",
      "database_schema": "Database Design",
      "description": "Technical architecture documentation including system design, message flow, and component interactions.",
      "performance_metrics": "Performance & Scalability",
      "system_overview": "System Overview",
      "view_docs": "View Architecture →",
      "websocket_protocol": "Communication Protocols"
    },
    "additional_resources": {
      "title": "추가 리소스",
      "github_repo": "GitHub 저장소",
      "issue_tracker": "이슈 트래커",
      "community_discussions": "커뮤니티 토론",
      "agent_repo": "에이전트 저장소"
    },
    "webui_overview": {
      "title": "웹 인터페이스 개요",
      "subtitle": "상세한 스크린샷과 기능 설명을 통해 SysManage 웹 인터페이스를 탐색하세요."
    }
  },
  "footer": {
    "description": "포괄적인 인프라 모니터링 및 자동화를 위한 현대적 시스템 관리 플랫폼.",
    "documentation": "문서",
    "server_docs": "서버 문서",
    "agent_docs": "에이전트 문서",
    "api_reference": "API 참조",
    "security": "보안",
    "community": "커뮤니티",
    "github_repo": "GitHub 저장소",
    "issue_tracker": "이슈 트래커",
    "discussions": "토론",
    "license": "라이선스",
    "licensed_under": "AGPLv3 하에 라이선스됨",
    "view_license": "라이선스 보기",
    "copyright": "© 2024 SysManage. 모든 권리 보유."
  },
  "installation": {
    "title": "설치 가이드",
    "system_requirements": "시스템 요구 사항",
    "prerequisites": "전제 조건",
    "installation_steps": "설치 단계",
    "troubleshooting": "문제 해결"
  },
  "configuration": {
    "title": "구성 가이드",
    "basic_config": "기본 구성",
    "security_config": "보안 구성",
    "advanced_features": "고급 기능"
  },
  "security_page": {
    "title": "보안 문서",
    "overview": "보안 개요",
    "features": "보안 기능",
    "vulnerability_reporting": "취약점 보고"
  },
  "platforms": {
    "opensuse": {
      "title": "openSUSE Leap/Tumbleweed",
      "package_notes": "패키지 관리자 참고사항",
      "leap_note": "안정적인 패키지 사용, 수동 Rust 설치가 필요할 수 있음",
      "tumbleweed_note": "롤링 릴리스, zypper를 통해 Rust 사용 가능",
      "python_versions": "Leap은 Python 3.9+ 제공, Tumbleweed는 최신 안정 버전 제공"
    },
    "sles": {
      "title": "SUSE Linux Enterprise Server (SLES)",
      "enterprise_considerations": "엔터프라이즈 고려사항",
      "sles12_note": "더 새로운 Python을 위해 소프트웨어 컬렉션(SCL)이 필요할 수 있음",
      "sles15_note": "Python 3.6+ 포함되어 있지만 3.9+ 권장",
      "firewall_note": "SuSEfirewall2 또는 firewalld가 에이전트 포트를 차단할 수 있음",
      "selinux_note": "활성화된 경우 정책 조정이 필요할 수 있음",
      "subscription_note": "일부 패키지는 활성 SLES 구독이 필요",
      "service_notes": "SUSE Enterprise 참고사항",
      "firewall_config": "YaST 또는 firewall-cmd를 통해 필요한 포트 열기",
      "apparmor_note": "SUSE는 기본적으로 SELinux 대신 AppArmor 사용",
      "logging_note": "journalctl 또는 /var/log/messages를 통해 로그 사용 가능"
    }
  },
  "server_docs": {
    "title": "서버 문서 - SysManage",
    "description": "SysManage 서버 설치, 구성 및 관리에 대한 완전한 문서.",
    "section_title": "서버",
    "header": {
      "title": "서버 문서",
      "subtitle": "SysManage 서버 설치, 구성 및 관리를 위한 완전한 가이드."
    },
    "overview": {
      "title": "개요",
      "description": "SysManage 서버는 FastAPI(Python) 백엔드와 React(TypeScript) 프론트엔드로 구축된 현대적인 웹 애플리케이션입니다. 경량 에이전트를 통해 여러 시스템을 관리하기 위한 중앙 집중식 플랫폼을 제공합니다.",
      "components_title": "서버 구성 요소",
      "backend_api": "백엔드 API - 비동기 지원, JWT 인증 및 WebSocket 통신을 갖춘 FastAPI",
      "frontend_ui": "프론트엔드 UI - TypeScript, Material-UI 구성 요소 및 실시간 업데이트를 갖춘 React",
      "database": "데이터베이스 - SQLAlchemy ORM 및 Alembic 마이그레이션을 갖춘 PostgreSQL",
      "authentication": "인증 - 토큰 로테이션 및 역할 기반 액세스 제어를 갖춘 JWT",
      "communication": "통신 - 실시간 업데이트용 WebSocket 및 작업용 REST API",
      "monitoring": "모니터링 - 포괄적인 메트릭, 로깅 및 상태 모니터링",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents"
    },
    "quick_links": {
      "title": "빠른 링크",
      "installation": "서버 설치",
      "configuration": "구성",
      "deployment": "배포",
      "testing": "테스트",
      "troubleshooting": "문제 해결"
    },
    "reports": {
      "title": "보고서 및 PDF 생성",
      "subtitle": "실시간 HTML 보기와 전문 PDF 생성 기능을 갖춘 종합 보고 시스템.",
      "overview": "개요",
      "overview_description": "SysManage는 인프라에 대한 종합적인 보고서를 생성하는 강력한 보고 시스템을 포함합니다. 이 시스템은 실시간 HTML 보기와 문서 및 규정 준수 목적을 위한 전문 PDF 생성을 모두 지원합니다.",
      "realtime_html": "실시간 HTML 보고서",
      "pdf_generation": "전문 PDF 생성",
      "multi_format": "다중 내보내기 형식",
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "inventory": "Host inventory and system reports",
      "link": "Reports Documentation →",
      "security": "User management and security reports"
    },
    "testing": {
      "title": "테스트",
      "subtitle": "Playwright를 사용한 단위 테스트, 통합 테스트 및 엔드투엔드 테스트를 포함한 종합적인 테스트 전략.",
      "overview": "테스트 개요",
      "unit_tests": "단위 테스트",
      "integration_tests": "통합 테스트",
      "e2e_testing": "엔드투엔드 테스트",
      "playwright": "Playwright 테스트",
      "test_coverage": "테스트 커버리지",
      "ci_cd": "CI/CD 통합",
      "cicd": "CI/CD testing pipeline",
      "coverage": "Test coverage and reporting",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "e2e": "End-to-end testing with Playwright",
      "link": "Testing Documentation →",
      "unit_integration": "Unit and integration testing"
    },
    "deployment": {
      "title": "배포 가이드",
      "subtitle": "고가용성과 확장성을 고려한 프로덕션 환경에서 SysManage를 배포하는 완전한 가이드.",
      "overview": "배포 개요",
      "production_deployment": "프로덕션 배포",
      "high_availability": "고가용성",
      "scalability": "확장성",
      "load_balancing": "로드 밸런싱",
      "security_considerations": "보안 고려사항",
      "monitoring": "모니터링 및 관측가능성",
      "backup": "Backup and disaster recovery",
      "checklist": "Production deployment checklist",
      "description": "확장 가능한 인프라를 위한 프로덕션 배포 전략 및 모범 사례.",
      "link": "Deployment Guide →",
      "scaling": "Load balancing and scaling"
    },
    "features": {
      "title": "기능 개요",
      "subtitle": "시스템 모니터링, 패키지 관리, 사용자 관리 및 보안 기능을 포함한 모든 SysManage 기능의 종합적인 개요.",
      "overview": "기능 개요",
      "system_monitoring": "시스템 모니터링",
      "package_management": "패키지 관리",
      "user_management": "사용자 관리",
      "security_features": "보안 기능",
      "reporting": "보고서 및 분석",
      "multi_platform": "멀티 플랫폼 지원",
      "description": "모든 서버 기능과 역량에 대한 자세한 개요.",
      "host_management": "Host and agent management",
      "link": "Features Overview →",
      "monitoring": "Real-time monitoring and alerts"
    },
    "troubleshooting": {
      "title": "문제 해결 가이드",
      "subtitle": "일반적인 문제, 진단 절차 및 문제 해결 전략을 위한 종합적인 문제 해결 가이드.",
      "overview": "문제 해결 개요",
      "common_issues": "일반적인 문제",
      "diagnostic_procedures": "진단 절차",
      "log_analysis": "로그 분석",
      "performance_issues": "성능 문제",
      "connectivity_problems": "연결 문제",
      "database_issues": "데이터베이스 문제",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "link": "Troubleshooting Guide →",
      "maintenance": "Database maintenance",
      "performance": "Performance optimization"
    },
    "configuration": {
      "database_settings": "Database connection settings",
      "description": "SysManage 배포를 사용자 정의하기 위한 포괄적인 구성 옵션.",
      "file_structure": "Configuration file structure",
      "link": "Configuration Guide →",
      "security_options": "Security and authentication options",
      "title": "⚙️ Configuration",
      "websocket_api": "WebSocket and API configuration"
    },
    "installation": {
      "database": "Database setup and configuration",
      "description": "인프라에서 SysManage 서버를 설정하기 위한 단계별 설치 가이드.",
      "link": "Installation Guide →",
      "methods": "Docker and traditional installation methods",
      "requirements": "System requirements and prerequisites",
      "ssl": "SSL certificate configuration",
      "title": "🚀 Installation"
    },
    "navigation": {
      "agent": "← Agent Documentation",
      "api": "API Reference →",
      "title": "Quick Navigation"
    },
    "security": {
      "auth": "Authentication and authorization",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "title": "🔐 Security"
    }
  },
  "server_installation": {
    "title": "서버 설치 가이드 - SysManage",
    "description": "전제 조건, 데이터베이스 설정 및 구성을 포함한 SysManage 서버의 완전한 설치 가이드.",
    "breadcrumb_installation": "설치",
    "header": {
      "title": "서버 설치 가이드",
      "subtitle": "인프라에 SysManage 서버를 설정하는 완전한 단계별 설치 가이드."
    },
    "requirements": {
      "title": "시스템 요구사항",
      "required": "필수",
      "supported": "지원",
      "python": {
        "title": "🐍 Python",
        "version": "3.11 또는 3.12",
        "note": "참고: 패키지 호환성 문제로 인해 Python 3.13은 아직 지원되지 않습니다"
      },
      "nodejs": {
        "title": "🟢 Node.js",
        "version": "20.x 이상",
        "description": "React 프론트엔드 구축용"
      },
      "postgresql": {
        "title": "🐘 PostgreSQL",
        "version": "14 이상",
        "description": "모든 애플리케이션 데이터의 기본 데이터베이스"
      },
      "os": {
        "title": "💻 운영 체제",
        "platforms": "Linux, macOS, Windows, FreeBSD, OpenBSD",
        "description": "크로스 플랫폼 배포"
      }
    },
    "prerequisites": {
      "title": "플랫폼별 전제 조건",
      "ubuntu_debian": "Ubuntu/Debian",
      "ubuntu25": {
        "title": "Ubuntu 25.04+ (소스에서 Python 3.12)",
        "note": "Ubuntu 25.04+는 Python 3.13만 제공하며, 아직 호환되지 않습니다. 소스에서 Python 3.12를 빌드해야 합니다:",
        "tab_title": "Ubuntu 25.04+"
      },
      "centos_rhel": "CentOS/RHEL",
      "macos": {
        "title": "macOS",
        "tab_title": "macOS"
      },
      "windows": {
        "title": "Windows",
        "tab_title": "Windows"
      },
      "freebsd": {
        "title": "FreeBSD",
        "tab_title": "FreeBSD"
      },
      "openbsd": {
        "title": "OpenBSD",
        "tab_title": "OpenBSD"
      },
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10 (권장)"
      },
      "centos": {
        "title": "CentOS/RHEL/Fedora",
        "tab_title": "CentOS/RHEL"
      }
    },
    "installation_steps": {
      "title": "설치 단계",
      "step1": {
        "title": "1단계: 복제 및 설정"
      },
      "step2": {
        "title": "2단계: 백엔드 의존성 설치"
      },
      "step3": {
        "title": "3단계: 데이터베이스 설정",
        "description": "PostgreSQL 데이터베이스 및 사용자 생성:",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "openbsd": "OpenBSD",
        "windows": "Windows",
        "security_notes": {
          "title": "⚠️ 보안 주의사항",
          "dev_password": "개발 비밀번호 <code>abc123</code>은 <code>sysmanage-dev.yaml</code>과 일치합니다",
          "never_production": "프로덕션에서는 절대 이 비밀번호를 사용하지 마세요",
          "change_password": "PostgreSQL과 구성 파일 모두에서 비밀번호를 변경하세요"
        }
      },
      "step4": {
        "title": "4단계: 데이터베이스 연결 테스트"
      },
      "step5": {
        "title": "5단계: 프론트엔드 의존성 설치"
      },
      "step6": {
        "title": "6단계: 구성",
        "description": "구성 파일 생성:",
        "linux_macos_bsd": "Linux/macOS/BSD:",
        "windows_path": "Windows:",
        "security_steps": {
          "title": "🔐 필수 보안 단계",
          "generate_secrets": "새 시크릿 생성: <code>openssl rand -base64 32</code>",
          "strong_passwords": "강력한 비밀번호 사용 (12자 이상)",
          "file_permissions": "적절한 파일 권한 설정: <code>chmod 600 /etc/sysmanage.yaml</code>",
          "never_commit": "구성 파일을 버전 관리에 커밋하지 마세요"
        }
      },
      "step7": {
        "title": "7단계: 데이터베이스 마이그레이션 실행"
      },
      "step8": {
        "title": "8단계: 보안 설치 스크립트 실행",
        "security_note": {
          "title": "🔐 새 설치시 필수",
          "description": "초기 관리자 사용자를 생성하고 설치를 위한 고유한 보안 토큰을 구성하려면 보안 설치 스크립트를 실행해야 합니다."
        },
        "features": {
          "title": "이 스크립트가 하는 일:",
          "admin_user": "초기 관리자 사용자 계정 생성",
          "jwt_secret": "인증을 위한 고유한 JWT 비밀 생성",
          "password_salt": "안전한 비밀번호 해싱을 위한 고유한 비밀번호 솔트 생성",
          "config_hardening": "구성 파일에 보안 강화 적용",
          "prevents_defaults": "기본/예제 보안 토큰 사용 방지"
        },
        "warning": {
          "title": "⚠️ 중요한 보안 주의사항",
          "required": "이 단계는 필수입니다",
          "required_desc": "이것 없이는 애플리케이션이 안전하게 작동하지 않습니다",
          "unique_tokens": "각 설치는 자격 증명 재사용을 방지하기 위해 고유한 보안 토큰을 받습니다",
          "run_once": "설치당 이 스크립트를 한 번만 실행하세요",
          "backup_config": "이 스크립트 실행 후 구성 파일을 백업하세요"
        }
      },
      "step9": {
        "title": "9단계: 애플리케이션 시작",
        "access_description": "애플리케이션 접근:",
        "https": "HTTPS:",
        "https_url": "https://sysmanage.org:7443 (SSL 인증서가 존재하는 경우)",
        "http": "HTTP:",
        "http_url": "http://localhost:3000 (대체)"
      }
    },
    "ssl": {
      "title": "SSL 인증서 (선택사항)",
      "description": "HTTPS 개발을 위해 SSL 인증서를 배치:",
      "fallback": "인증서를 찾을 수 없으면 시스템이 자동으로 localhost의 HTTP로 대체됩니다."
    },
    "troubleshooting": {
      "title": "문제 해결",
      "package_errors": {
        "title": "패키지 빌드 오류",
        "missing_libpq": "libpq-fe.h 누락:",
        "install_libpq": "<code>libpq-dev</code> (Ubuntu) 또는 <code>postgresql-devel</code> (RHEL) 설치",
        "httptools_errors": "httptools 빌드 오류:",
        "install_libuv": "<code>libuv1-dev</code> (Ubuntu) 또는 <code>libuv-devel</code> (RHEL) 설치",
        "python313_issues": "Python 3.13 문제:",
        "use_older_python": "대신 Python 3.11 또는 3.12 사용"
      },
      "db_issues": {
        "title": "데이터베이스 연결 문제",
        "verify_postgresql": "PostgreSQL이 실행 중인지 확인: <code>sudo systemctl status postgresql</code>",
        "check_credentials": "자격 증명이 구성 파일과 일치하는지 확인",
        "test_connection": "위에 표시된 psql 명령으로 연결 테스트"
      },
      "port_conflicts": {
        "title": "포트 충돌",
        "ensure_ports": "포트 6443 (API) 및 7443 (프론트엔드)가 사용 가능한지 확인",
        "check_services": "기존 서비스 확인: <code>netstat -tlnp | grep :6443</code>",
        "modify_ports": "필요한 경우 구성에서 포트 수정"
      },
      "permission_issues": {
        "title": "권한 문제",
        "set_config_permissions": "구성 파일 권한 설정: <code>chmod 600 /etc/sysmanage.yaml</code>",
        "ensure_ownership": "디렉터리의 적절한 소유권 확인",
        "check_venv": "가상 환경 활성화 확인"
      }
    },
    "navigation": {
      "server_docs": "← 서버 문서",
      "config_guide": "구성 가이드 →"
    },
    "note": "참고"
  },
  "server_configuration": {
    "title": "서버 설정 가이드 - SysManage",
    "description": "보안 설정, 데이터베이스 설정 및 고급 기능을 포함한 SysManage 서버의 완전한 설정 가이드입니다.",
    "breadcrumb": {
      "server": "서버",
      "configuration": "설정"
    },
    "header": {
      "title": "서버 설정 가이드",
      "description": "SysManage 서버 배포를 사용자 정의하기 위한 포괄적인 설정 옵션입니다."
    },
    "file_locations": {
      "title": "설정 파일 위치",
      "linux_macos_bsd": "🐧 Linux/macOS/BSD",
      "windows": "🪟 Windows",
      "development": "🛠️ 개발"
    },
    "basic": {
      "title": "기본 설정",
      "api_server": {
        "title": "API 서버 설정",
        "notes": {
          "title": "📝 참고사항",
          "host_binding": "<strong>호스트 바인딩:</strong> 외부 접근은 <code>0.0.0.0</code>, 로컬 전용은 <code>localhost</code> 사용",
          "ssl_certificates": "<strong>SSL 인증서:</strong> 제공되지 않으면 서버가 HTTP로 폴백",
          "port_selection": "<strong>포트 선택:</strong> 포트가 다른 서비스에서 사용되지 않는지 확인"
        }
      },
      "database": {
        "title": "데이터베이스 설정",
        "security_warning": {
          "title": "⚠️ 보안 경고",
          "description": "예제 비밀번호 <code>abc123</code>은 개발 전용입니다. <strong>프로덕션에서는 항상 강력한 비밀번호를 사용하세요!</strong>"
        }
      },
      "webui": {
        "title": "웹 UI 설정"
      }
    },
    "security": {
      "title": "보안 설정",
      "core": {
        "title": "핵심 보안 설정",
        "generating_values": {
          "title": "🔐 안전한 값 생성"
        }
      },
      "password_policy": {
        "title": "비밀번호 정책 설정",
        "notes": {
          "title": "📝 비밀번호 정책 참고사항",
          "realtime_validation": "<strong>실시간 검증:</strong> 정책이 프론트엔드와 백엔드 모두에서 적용됨",
          "multilanguage": "<strong>다국어:</strong> 지원되는 14개 언어 모두에서 오류 메시지 제공",
          "flexible_requirements": "<strong>유연한 요구사항:</strong> 조직의 요구에 맞게 정책 조정"
        }
      }
    },
    "email": {
      "title": "이메일 설정",
      "smtp": {
        "title": "SMTP 설정",
        "providers": {
          "title": "📧 일반적인 SMTP 설정",
          "gmail": "Gmail",
          "office365": "Office 365",
          "exchange": "Exchange",
          "postfix": "Postfix",
          "gmail_note": "<strong>참고:</strong> 2FA와 앱 비밀번호가 필요합니다. 설정은 <a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Google 앱 비밀번호</a>를 참조하세요."
        }
      }
    },
    "certificates": {
      "title": "인증서 관리",
      "storage": {
        "title": "인증서 저장소",
        "permissions": {
          "title": "🔒 필요한 권한",
          "directory": "<strong>인증서 디렉토리:</strong> <code>0755</code> (소유자 rwx, 그룹/기타 rx)",
          "private_keys": "<strong>개인키:</strong> <code>0600</code> (소유자만 읽기/쓰기)",
          "certificates": "<strong>인증서:</strong> <code>0644</code> (소유자 rw, 기타 읽기)"
        }
      },
      "mtls": {
        "title": "mTLS 설정",
        "description": "상호 TLS 설정은 서버에서 자동으로 관리됩니다. 호스트가 승인되면 클라이언트 인증서가 생성되어 인증서 디렉토리에 저장됩니다.",
        "workflow": {
          "title": "🔄 mTLS 워크플로",
          "step1": "<strong>호스트 등록:</strong> 에이전트가 대기 상태로 등록",
          "step2": "<strong>수동 승인:</strong> 관리자가 웹 인터페이스에서 호스트 승인",
          "step3": "<strong>인증서 생성:</strong> 서버가 고유한 클라이언트 인증서 생성",
          "step4": "<strong>보안 인증:</strong> 후속 연결에서 mTLS 사용"
        }
      }
    },
    "advanced": {
      "title": "고급 기능",
      "discovery": {
        "title": "에이전트 발견 서비스",
        "service": {
          "title": "📡 발견 서비스",
          "description": "에이전트가 네트워크에서 사용 가능한 서버를 자동으로 발견하고 구성할 수 있게 합니다."
        }
      },
      "logging": {
        "title": "로깅 설정"
      },
      "performance": {
        "title": "성능 튜닝"
      }
    },
    "permissions": {
      "title": "파일 권한 및 보안",
      "directory": {
        "title": "필요한 디렉토리 구조"
      },
      "security_checklist": {
        "title": "🛡️ 보안 체크리스트",
        "config_file": "✅ 설정 파일은 서비스 사용자만 읽기 가능",
        "cert_directory": "✅ 인증서 디렉토리는 제한된 접근",
        "private_keys": "✅ 개인키는 0600 권한으로 보호",
        "strong_passwords": "✅ 강력한 비밀번호와 비밀 사용",
        "jwt_rotation": "✅ JWT 비밀은 정기적으로 로테이션",
        "db_credentials": "✅ 데이터베이스 자격 증명은 고유하고 강력"
      }
    },
    "environment": {
      "title": "환경 변수",
      "description": "설정은 환경 변수로도 설정할 수 있습니다 (YAML 파일 재정의):"
    },
    "testing": {
      "title": "설정 테스트",
      "validation": {
        "title": "검증 단계",
        "syntax": "<strong>설정 구문:</strong>",
        "database": "<strong>데이터베이스 연결:</strong>",
        "email": "<strong>이메일 설정:</strong>",
        "ssl": "<strong>SSL 인증서:</strong>"
      }
    },
    "navigation": {
      "installation": "← 설치 가이드",
      "deployment": "배포 가이드 →"
    }
  },
  "server_deployment": {
    "title": "배포 가이드 - SysManage 서버",
    "description": "확장 가능한 SysManage 인프라를 위한 프로덕션 배포 전략 및 모범 사례입니다.",
    "breadcrumb": {
      "server": "서버",
      "deployment": "배포"
    },
    "header": {
      "title": "배포 가이드",
      "description": "확장 가능하고 안전하며 신뢰할 수 있는 SysManage 인프라를 위한 프로덕션 배포 전략 및 모범 사례입니다."
    },
    "overview": {
      "title": "배포 개요",
      "description": "SysManage는 단일 서버 설정부터 고가용성 다중 노드 클러스터까지 인프라 요구사항에 따라 다양한 구성으로 배포할 수 있습니다.",
      "strategies": {
        "single": {
          "title": "🖥️ 단일 서버 배포",
          "description": "소규모에서 중간 규모 환경에 이상적 (최대 100대 호스트)",
          "features": {
            "components": "단일 서버가 모든 구성 요소 호스팅",
            "database": "동일한 서버의 PostgreSQL 데이터베이스",
            "configuration": "간단한 구성 및 유지보수",
            "resources": "낮은 리소스 요구사항"
          }
        },
        "ha": {
          "title": "🔄 고가용성 배포",
          "description": "무중단 시간이 필요한 프로덕션 환경",
          "features": {
            "servers": "여러 애플리케이션 서버",
            "load_balancer": "SSL 종료가 있는 로드 밸런서",
            "clustering": "장애 조치가 있는 데이터베이스 클러스터링",
            "redundancy": "중복 네트워크 및 스토리지"
          }
        },
        "cloud": {
          "title": "☁️ 클라우드 배포",
          "description": "확장 가능한 클라우드 네이티브 배포 옵션",
          "features": {
            "orchestration": "컨테이너 오케스트레이션 (Kubernetes)",
            "scaling": "자동 확장 기능",
            "database": "관리형 데이터베이스 서비스",
            "availability": "다중 지역 가용성"
          }
        }
      }
    },
    "checklist": {
      "title": "프로덕션 체크리스트",
      "pre_deployment": {
        "title": "배포 전",
        "hardware": "서버 하드웨어/VM 사양이 요구사항 충족",
        "network": "네트워크 연결 및 방화벽 규칙 구성됨",
        "ssl": "SSL 인증서 획득 및 검증됨",
        "dns": "DNS 레코드 구성됨",
        "database": "PostgreSQL 데이터베이스 서버 준비됨",
        "monitoring": "백업 및 모니터링 시스템 구축됨"
      },
      "security": {
        "title": "보안 설정",
        "https": "HTTPS/TLS 활성화 및 강제됨",
        "passwords": "강력한 비밀번호 정책 구성됨",
        "jwt": "JWT 토큰 설정 최적화됨",
        "database": "데이터베이스 접근이 애플리케이션으로 제한됨",
        "firewall": "방화벽 규칙이 필요한 포트로 접근 제한",
        "logs": "로그 파일 권한 및 로테이션 구성됨"
      },
      "performance": {
        "title": "성능 최적화",
        "pooling": "데이터베이스 연결 풀링 구성됨",
        "assets": "프론트엔드 자산 압축 및 최적화됨",
        "caching": "캐시 헤더 구성됨",
        "limits": "애플리케이션 프로세스에 대한 리소스 제한 설정됨",
        "logging": "로그 레벨이 프로덕션에 적절히 설정됨"
      }
    },
    "single_server": {
      "title": "단일 서버 배포",
      "requirements": {
        "title": "시스템 요구사항",
        "component": "구성 요소",
        "minimum": "최소",
        "recommended": "권장"
      },
      "installation": {
        "title": "설치 단계"
      },
      "config": {
        "title": "프로덕션 설정"
      }
    },
    "ha": {
      "title": "고가용성 배포",
      "architecture": {
        "title": "아키텍처 개요"
      },
      "load_balancer": {
        "title": "로드 밸런서 설정",
        "nginx": {
          "title": "Nginx 설정"
        }
      },
      "database": {
        "title": "데이터베이스 클러스터링",
        "replication": {
          "title": "PostgreSQL 스트리밍 복제"
        }
      }
    },
    "container": {
      "title": "컨테이너 배포",
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetes 배포"
      }
    },
    "monitoring": {
      "title": "모니터링 및 로깅",
      "system": {
        "title": "시스템 모니터링",
        "prometheus": {
          "title": "Prometheus 설정"
        },
        "health": {
          "title": "상태 확인 엔드포인트"
        }
      },
      "logs": {
        "title": "로그 관리"
      }
    },
    "backup": {
      "title": "백업 및 재해 복구",
      "database": {
        "title": "데이터베이스 백업"
      },
      "disaster": {
        "title": "재해 복구 계획",
        "step1": "<strong>평가:</strong> 장애 범위와 영향받은 시스템 결정",
        "step2": "<strong>커뮤니케이션:</strong> 이해관계자와 사용자에게 사건 알림",
        "step3": "<strong>격리:</strong> 추가 손상을 방지하기 위해 실패한 구성 요소 격리",
        "step4": "<strong>복구:</strong> 백업에서 복원하거나 대기 시스템으로 장애 조치",
        "step5": "<strong>검증:</strong> 복원된 시스템을 테스트하고 기능 확인",
        "step6": "<strong>사후 분석:</strong> 사건을 문서화하고 절차 개선"
      }
    },
    "performance": {
      "title": "성능 최적화",
      "database": {
        "title": "데이터베이스 튜닝"
      },
      "application": {
        "title": "애플리케이션 튜닝"
      },
      "caching": {
        "title": "캐싱 전략",
        "redis": "<strong>Redis:</strong> 세션 저장소 및 임시 데이터 캐싱",
        "cdn": "<strong>CDN:</strong> 정적 자산 전달 및 지리적 분산",
        "application": "<strong>애플리케이션 캐시:</strong> 데이터베이스 쿼리 결과 캐싱",
        "browser": "<strong>브라우저 캐시:</strong> 적절한 헤더가 있는 클라이언트 측 자산 캐싱"
      }
    },
    "security": {
      "title": "보안 강화",
      "network": {
        "title": "네트워크 보안"
      },
      "application": {
        "title": "애플리케이션 보안",
        "https": "<strong>HTTPS만:</strong> 모든 연결에 TLS 강제",
        "hsts": "<strong>HSTS:</strong> HTTP Strict Transport Security 헤더",
        "csp": "<strong>CSP:</strong> Content Security Policy 구현",
        "rate_limiting": "<strong>속도 제한:</strong> API 엔드포인트 속도 제한",
        "input_validation": "<strong>입력 검증:</strong> 포괄적인 입력 정화",
        "audit_logging": "<strong>감사 로깅:</strong> 모든 관리 작업 로그"
      }
    },
    "maintenance": {
      "title": "유지보수 및 업데이트",
      "procedure": {
        "title": "업데이트 절차",
        "step1": "<strong>백업:</strong> 업데이트 전 전체 시스템 백업 생성",
        "step2": "<strong>테스트:</strong> 스테이징 환경에서 업데이트 테스트",
        "step3": "<strong>유지보수 창:</strong> 사용자 알림과 함께 유지보수 일정",
        "step4": "<strong>업데이트:</strong> 문서화된 절차에 따라 업데이트 적용",
        "step5": "<strong>검증:</strong> 모든 시스템이 올바르게 작동하는지 확인",
        "step6": "<strong>롤백 계획:</strong> 필요시 롤백 절차 준비"
      },
      "tasks": {
        "title": "유지보수 작업",
        "daily": {
          "title": "일일",
          "monitoring": "시스템 상태 및 성능 모니터링",
          "logs": "애플리케이션 로그에서 오류 검토",
          "backup": "백업 완료 확인"
        },
        "weekly": {
          "title": "주간",
          "security": "보안 로그 및 알림 검토",
          "packages": "시스템 패키지 업데이트",
          "restore_test": "백업 복원 절차 테스트"
        },
        "monthly": {
          "title": "월간",
          "security": "보안 취약점 평가",
          "performance": "성능 분석 및 최적화",
          "capacity": "용량 계획 검토"
        }
      }
    }
  },
  "getting_started": {
    "title": "시작하기 - SysManage",
    "description": "인프라 모니터링 및 자동화를 위해 SysManage를 빠르게 시작할 수 있는 퀵 스타트 가이드 및 튜토리얼입니다.",
    "breadcrumb": "시작하기",
    "header": {
      "title": "시작하기",
      "description": "인프라 모니터링 및 자동화를 위해 SysManage를 빠르게 시작할 수 있는 퀵 스타트 가이드 및 튜토리얼입니다."
    },
    "welcome": {
      "title": "SysManage에 오신 것을 환영합니다",
      "description": "SysManage는 인프라 전체에서 호스트, 패키지 및 시스템 상태를 관리하는 데 도움이 되는 종합적인 인프라 모니터링 및 자동화 플랫폼입니다. 몇 대의 서버를 관리하든 수천 대의 호스트를 관리하든, SysManage는 시스템을 효과적으로 유지하고 모니터링하는 데 필요한 도구를 제공합니다."
    },
    "journey": {
      "title": "여정이 여기서 시작됩니다",
      "description": "다음 안내 단계를 따라 환경에서 SysManage를 실행하세요:",
      "steps": {
        "quick_start": {
          "title": "퀵 스타트",
          "description": "몇 분 안에 SysManage 설치 및 실행"
        },
        "deployment": {
          "title": "첫 번째 배포",
          "description": "첫 번째 SysManage 서버 인스턴스 배포"
        },
        "agents": {
          "title": "에이전트 설정",
          "description": "첫 번째 에이전트 설치 및 승인"
        },
        "management": {
          "title": "기본 관리",
          "description": "필수 관리 작업 학습"
        }
      }
    },
    "cards": {
      "quick_start": {
        "title": "🚀 퀵 스타트",
        "description": "간소화된 설치 가이드로 SysManage를 빠르게 실행하세요. 평가 및 소규모 배포에 완벽합니다.",
        "features": {
          "requirements": "시스템 요구사항 및 전제조건",
          "docker": "Docker Compose로 설치",
          "config": "초기 설정 및 구성",
          "login": "첫 로그인 및 기본 탐색"
        },
        "link": "퀵 스타트 가이드 →"
      },
      "webui": {
        "title": "🌐 웹 인터페이스 개요",
        "description": "모니터링 및 관리를 위한 SysManage 웹 인터페이스와 주요 기능의 포괄적인 둘러보기입니다.",
        "features": {
          "dashboard": "대시보드 개요 및 탐색",
          "hosts": "호스트 관리 인터페이스",
          "packages": "패키지 관리 기능",
          "monitoring": "모니터링 및 알림"
        },
        "link": "웹 인터페이스 가이드 →"
      }
    },
    "prerequisites": {
      "title": "시작하기 전에",
      "system": {
        "title": "시스템 요구사항",
        "server": {
          "title": "서버 요구사항"
        },
        "platforms": {
          "title": "지원되는 플랫폼"
        }
      },
      "knowledge": {
        "title": "필요한 지식"
      },
      "needed": {
        "title": "필요한 것"
      }
    },
    "use_cases": {
      "title": "일반적인 사용 사례",
      "small": {
        "title": "🏢 소규모 비즈니스"
      },
      "medium": {
        "title": "🏭 중간 규모 기업"
      },
      "large": {
        "title": "🌐 대규모 조직"
      }
    },
    "learning_path": {
      "title": "권장 학습 경로"
    },
    "help": {
      "title": "도움 받기",
      "docs": {
        "title": "📖 문서",
        "description": "SysManage의 모든 측면을 다루는 포괄적인 가이드"
      },
      "community": {
        "title": "💬 커뮤니티",
        "description": "다른 SysManage 사용자 및 기여자와 연결"
      },
      "troubleshooting": {
        "title": "🔧 문제 해결",
        "description": "일반적인 문제 및 해결책"
      }
    },
    "navigation": {
      "title": "빠른 탐색",
      "docs_home": "← 문서 홈",
      "quick_start": "퀵 스타트 →"
    }
  },
  "testing": {
    "overview": {
      "title": "테스트 전략 개요",
      "description": "SysManage는 모든 구성 요소의 신뢰성, 보안 및 기능을 보장하기 위해 다층 테스트 접근 방식을 사용합니다:",
      "unit": {
        "title": "단위 테스트",
        "description": "개별 구성 요소 및 함수에 대한 포괄적인 단위 테스트",
        "backend": "백엔드:",
        "backend.count": "pytest를 사용한 1,432개의 Python 테스트",
        "frontend": "프론트엔드:",
        "frontend.count": "Vitest를 사용한 63개의 TypeScript 테스트",
        "coverage": "커버리지:",
        "coverage.value": "백엔드와 프론트엔드 모두 100% 테스트 커버리지"
      },
      "integration": {
        "title": "통합 테스트",
        "description": "다양한 시스템 구성 요소 간의 상호 작용 테스트",
        "api": "API 엔드포인트 테스트",
        "database": "데이터베이스 통합 테스트",
        "websocket": "WebSocket 통신 테스트",
        "auth": "인증 및 권한 부여 플로우 테스트"
      },
      "e2e": {
        "title": "엔드투엔드 (E2E) 테스트",
        "description": "Playwright를 사용한 완전한 사용자 워크플로우 테스트",
        "journey": "완전한 사용자 여정 테스트",
        "crossbrowser": "크로스 브라우저 호환성",
        "realworld": "실제 시나리오 검증",
        "ui": "UI 상호 작용 및 워크플로우 테스트"
      },
      "msw": {
        "title": "Mock Service Worker (MSW)",
        "description": "격리되고 안정적인 프론트엔드 테스트를 위한 API 모킹",
        "isolation": "백엔드 종속성으로부터 완전한 테스트 격리",
        "speed": "네트워크 요청 없이 더 빠른 테스트 실행",
        "reliability": "일관되고 예측 가능한 테스트 동작",
        "realistic": "현실적인 API 응답 시뮬레이션"
      }
    },
    "running": {
      "title": "테스트 실행",
      "all": {
        "title": "모든 테스트"
      },
      "backend": {
        "title": "백엔드 테스트 (Python/pytest)"
      },
      "frontend": {
        "title": "프론트엔드 테스트 (TypeScript/Vitest with MSW)",
        "description": "프론트엔드 테스트는 API 모킹을 위해 자동으로 Mock Service Worker를 사용합니다:",
        "msw": {
          "title": "MSW 동작",
          "description": "프론트엔드 테스트 실행 시:",
          "automatic": "MSW가 모든 API 요청을 자동으로 가로챕니다",
          "logging": "요청 로그가 콘솔 출력에 나타납니다",
          "isolation": "각 테스트는 완전히 격리되어 실행됩니다",
          "realistic": "현실적인 API 응답이 자동으로 제공됩니다"
        }
      },
      "e2e": {
        "title": "엔드투엔드 테스트 (Playwright)"
      }
    },
    "msw": {
      "title": "Mock Service Worker (MSW) 프론트엔드 테스트",
      "overview": {
        "title": "개요",
        "description": "Mock Service Worker (MSW)는 네트워크 수준에서 HTTP 요청을 가로채고 프론트엔드 테스트를 위한 현실적인 API 응답을 제공하는 강력한 API 모킹 라이브러리입니다. SysManage는 실행 중인 백엔드 서버 없이도 프론트엔드 구성 요소를 격리하여 테스트할 수 있도록 MSW를 광범위하게 사용합니다."
      },
      "benefits": {
        "title": "MSW를 사용하는 이유?",
        "isolation": "테스트 격리: 프론트엔드 테스트가 백엔드 가용성과 독립적으로 실행됩니다",
        "speed": "성능: 네트워크 지연 없이 테스트가 더 빠르게 실행됩니다",
        "reliability": "신뢰성: 일관된 응답으로 불안정한 테스트를 제거합니다",
        "development": "개발: 백엔드 API가 준비되기 전에 프론트엔드 기능 작업 가능",
        "cicd": "CI/CD: 테스트 환경에서 백엔드 서비스를 시작할 필요가 없습니다"
      },
      "installation": {
        "title": "설치 및 구성",
        "description": "MSW는 이미 SysManage 프론트엔드에 설치되고 구성되어 있습니다. 설정 포함 사항:"
      },
      "implementation": {
        "title": "구현 아키텍처"
      },
      "handlers": {
        "title": "요청 핸들러",
        "description": "MSW 핸들러는 /src/mocks/handlers.ts에 정의되어 포괄적인 API 커버리지를 제공합니다:"
      },
      "server": {
        "title": "테스트 서버 설정",
        "description": "MSW 서버는 /src/mocks/node.ts에서 Node.js 테스트 환경용으로 구성됩니다:"
      },
      "integration": {
        "title": "테스트 통합",
        "description": "MSW는 /src/setupTests.ts에서 모든 테스트에 대해 적절한 라이프사이클 관리와 함께 자동으로 구성됩니다:"
      },
      "features": {
        "title": "주요 기능",
        "dynamic": {
          "title": "동적 경로 처리",
          "description": "MSW는 동적 경로 해결과 함께 광범위한 패턴 매칭을 사용합니다:",
          "wildcard": "와일드카드 패턴이 모든 /api/* 요청을 캐치합니다",
          "parsing": "URL 파싱이 특정 엔드포인트 경로를 추출합니다",
          "fallback": "매치되지 않는 엔드포인트에 대한 우아한 폴백"
        },
        "realistic": {
          "title": "현실적인 응답 시뮬레이션",
          "description": "MSW는 실제 API 응답을 반영하는 포괄적인 모의 데이터를 제공합니다:",
          "hosts": "하드웨어 세부 정보가 포함된 완전한 호스트 정보",
          "users": "사용자 인증 및 프로필 데이터",
          "packages": "검색 기능이 있는 소프트웨어 패키지 데이터",
          "operations": "패키지 설치/제거 작업"
        },
        "ci": {
          "title": "CI/CD 통합",
          "description": "MSW는 지속적 통합 환경을 위한 특별한 처리를 포함합니다:"
        }
      },
      "usage": {
        "title": "테스트에서 사용",
        "automatic": {
          "title": "자동 API 모킹",
          "description": "대부분의 테스트는 추가 구성 없이 MSW의 혜택을 자동으로 받습니다:"
        },
        "custom": {
          "title": "사용자 정의 핸들러 오버라이드",
          "description": "테스트는 사용자 정의 시나리오를 위해 특정 핸들러를 오버라이드할 수 있습니다:"
        }
      },
      "compatibility": {
        "title": "React 19 호환성",
        "description": "SysManage는 테스트 환경에서 React 19를 위한 특별한 호환성 수정을 포함합니다:"
      },
      "bestpractices": {
        "title": "모범 사례",
        "isolation": "테스트 격리: MSW는 테스트 간에 핸들러를 자동으로 재설정합니다",
        "realistic": "현실적인 데이터: 프로덕션 API 응답과 밀접하게 일치하는 모의 데이터를 사용합니다",
        "coverage": "API 커버리지: 구성 요소에서 사용하는 모든 API 엔드포인트가 모킹되도록 합니다",
        "errors": "오류 시나리오: 성공 및 오류 응답을 모두 테스트합니다",
        "logging": "요청 로깅: 예상치 못한 API 호출을 디버그하기 위해 MSW 로깅을 사용합니다"
      },
      "debugging": {
        "title": "MSW 디버깅",
        "description": "API 문제로 인해 테스트가 실패하는 경우 확인사항:",
        "console": "MSW 요청 로그에 대한 콘솔 출력",
        "unhandled": "처리되지 않은 요청에 대한 경고",
        "handlers": "핸들러 패턴이 실제 API 호출과 일치하는지 확인",
        "setup": "MSW 서버가 테스트 설정에서 올바르게 시작되었는지 확인"
      }
    }
  },
  "common": {
    "overview": "개요",
    "features": "기능",
    "installation": "설치",
    "configuration": "구성",
    "troubleshooting": "문제 해결",
    "security": "보안",
    "next": "다음",
    "previous": "이전",
    "back_to_top": "맨 위로",
    "read_more": "더 읽기",
    "learn_more": "더 알아보기",
    "download": "다운로드",
    "github": "GitHub",
    "documentation": "문서"
  },
  "administration": {
    "host_management": {
      "agent_deployment": "Agent Deployment",
      "agent_lifecycle_management": "Agent Lifecycle Management",
      "agent_troubleshooting": "Agent Troubleshooting",
      "agent_updates": "Agent Updates",
      "approval_criteria": "Approval Criteria",
      "approval_workflow": "Approval Workflow",
      "automation_integration": "Automation Integration",
      "available_bulk_operations": "Available Bulk Operations",
      "best_practices": "Host Management Best Practices",
      "bulk_operation_process": "Bulk Operation Process",
      "bulk_operations": "Bulk Operations",
      "cloud_integration": "Cloud Integration",
      "collected_information": "Collected Information",
      "common_issues": "일반적인 문제",
      "common_tag_categories": "Common Tag Categories",
      "configuration_management": "Configuration Management",
      "creating_host_groups": "Creating Host Groups",
      "deployment_best_practices": "Deployment Best Practices",
      "deployment_methods": "Deployment Methods",
      "diagnostic_tools": "Diagnostic Tools",
      "dynamic_group_assignment": "Dynamic Group Assignment",
      "group_types": "Group Types",
      "hardware_inventory": "Hardware Inventory",
      "host_groups": "Host Groups",
      "host_organization": "Host Organization",
      "host_registration_approval": "Host Registration and Approval",
      "inventory_management": "Infrastructure Inventory Management",
      "inventory_reports": "Inventory Reports",
      "key_concepts": "Key Concepts",
      "mass_actions": "Mass Management Actions",
      "operational_practices": "Operational Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "overview": "개요",
      "registration_process": "Registration Process",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "security_practices": "Security Best Practices",
      "software_inventory": "Software Inventory",
      "software_reports": "Software Reports",
      "software_tracking": "Software Tracking",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "tag_management": "Tag Management",
      "tagging_metadata": "Tagging and Metadata",
      "title": "호스트 관리",
      "update_process": "Update Process",
      "update_strategy": "Update Strategy"
    },
    "monitoring": {
      "access_control": "Access Control",
      "agent_performance": "Agent Performance",
      "alert_configuration": "Alert Configuration",
      "alert_design": "Alert Design Best Practices",
      "alert_suppression": "Alert Suppression",
      "alert_types": "Alert Types",
      "alerting_system": "Alerting System",
      "api_integration": "API Integration",
      "application_dashboards": "Application Dashboards",
      "application_service_metrics": "Application and Service Metrics",
      "channel_configuration": "Channel Configuration",
      "collection_intervals": "Collection Intervals",
      "collection_optimization": "Collection Optimization",
      "core_system_checks": "Core System Checks",
      "cpu_metrics": "CPU Metrics",
      "custom_health_checks": "Custom Health Checks",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_customization": "Dashboard Customization",
      "dashboard_design": "Dashboard Design Best Practices",
      "dashboard_types": "Dashboard Types",
      "data_retention": "Data Retention Policies",
      "database_monitoring": "Database Monitoring",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "executive_dashboards": "Executive Dashboards",
      "health_checks": "Health Check Configuration",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "layout_options": "Layout Options",
      "memory_metrics": "Memory Metrics",
      "metrics_collection": "Metrics Collection",
      "monitoring_best_practices": "Monitoring Best Practices",
      "monitoring_capabilities": "Monitoring Capabilities",
      "network_metrics": "Network Metrics",
      "notification_channels": "Notification Channels",
      "operational_practices": "Operational Best Practices",
      "operations_dashboards": "Operations Dashboards",
      "overview": "개요",
      "performance_optimization": "Monitoring Performance Optimization",
      "retention_strategies": "Retention Strategies",
      "service_health_checks": "Service Health Checks",
      "service_monitoring": "Service Monitoring",
      "storage_metrics": "Storage Metrics",
      "storage_optimization": "Storage Optimization",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "supported_channels": "Supported Channels",
      "system_health": "System Health Checks",
      "system_performance_metrics": "System Performance Metrics",
      "threshold_configuration": "Threshold Configuration",
      "title": "모니터링 및 알림",
      "web_server_monitoring": "Web Server Monitoring",
      "widget_types": "Widget Types"
    },
    "subtitle": "Comprehensive system administration guides and procedures",
    "title": "Administration",
    "user_management": {
      "account_deactivation": "Account Deactivation",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deletion": "Account Deletion",
      "account_security": "Account Security",
      "active_session_monitoring": "Active Session Monitoring",
      "administrative_updates": "Administrative Updates",
      "administrator": "Administrator",
      "api_example": "API Example",
      "auditor": "Auditor",
      "authentication_methods": "Authentication Methods",
      "authentication_security": "Authentication Security",
      "built_in_roles": "Built-in Roles",
      "common_user_workflows": "Common User Management Workflows",
      "compliance_considerations": "Compliance Considerations",
      "creating_custom_roles": "Creating Custom Roles",
      "creating_user_accounts": "Creating User Accounts",
      "custom_roles": "Custom Roles",
      "employee_offboarding": "Employee Offboarding",
      "external_authentication": "External Authentication",
      "integration_issues": "Integration Issues",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "local_authentication": "Local Authentication",
      "login_problems": "Login Problems",
      "mfa_configuration": "MFA Configuration",
      "modifying_user_accounts": "Modifying User Accounts",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "new_employee_onboarding": "New Employee Onboarding",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "operator": "Operator",
      "overview": "개요",
      "password_policy_configuration": "Password Policy Configuration",
      "permission_issues": "Permission Issues",
      "permission_matrix": "Permission Matrix",
      "profile_updates": "Profile Updates",
      "role_change_process": "Role Change Process",
      "roles_permissions": "Roles and Permissions",
      "saml_integration": "SAML 2.0 Integration",
      "security_best_practices": "Security Best Practices",
      "security_incident_response": "Security Incident Response",
      "session_configuration": "Session Configuration",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "supported_mfa_methods": "Supported MFA Methods",
      "title": "사용자 관리",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "user_account_management": "User Account Management",
      "viewer": "Viewer",
      "web_interface": "Web Interface"
    }
  },
  "agent_docs": {
    "architecture": {
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "description": "The agent operates as a persistent service with the following workflow:",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity",
      "title": "Agent Architecture"
    },
    "configuration": {
      "auto_discovery": "Auto-discovery setup (recommended)",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "link": "Configuration Guide →",
      "logging": "Logging and internationalization",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "title": "⚙️ Configuration"
    },
    "cross_platform": {
      "bsd": "BSD-specific considerations",
      "description": "Platform-specific features, package managers, and system integration details.",
      "link": "Cross-Platform Guide →",
      "linux": "Linux distributions and package managers",
      "macos": "macOS launchd configuration",
      "title": "🌍 Cross-Platform Support",
      "windows": "Windows service integration"
    },
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms.",
      "title": "Agent Documentation"
    },
    "installation": {
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "link": "Installation Guide →",
      "methods": "Installation methods (source, packages)",
      "prerequisites": "Prerequisites and system requirements",
      "service": "Service configuration",
      "title": "🚀 Installation",
      "venv": "Virtual environment setup"
    },
    "navigation": {
      "api": "API Reference →",
      "server": "← Server Documentation",
      "title": "Quick Navigation"
    },
    "overview": {
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "features_title": "Key Features",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "platform_freebsd": "🔒 FreeBSD",
      "platform_linux": "🐧 Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_macos": "🍎 macOS (Intel and Apple Silicon)",
      "platform_openbsd": "🛡️ OpenBSD",
      "platform_windows": "🪟 Windows (10, 11, Server 2019/2022)",
      "platforms_title": "Supported Platforms",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "title": "개요"
    },
    "privileged": {
      "cross_platform": "Cross-platform privileged execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "link": "Privileged Execution →",
      "scripts": "Automated privilege scripts",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "title": "🔐 Privileged Execution"
    },
    "section_title": "Agent",
    "security": {
      "certificates": "Certificate management",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) authentication",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "title": "🔒 Security"
    },
    "title": "Agent Documentation - SysManage",
    "troubleshooting": {
      "connection": "Connection and network issues",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "link": "Troubleshooting Guide →",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "title": "🔧 Troubleshooting"
    }
  },
  "api": {
    "authentication": {
      "authentication_flow": "Authentication Flow",
      "error_responses": "Error Responses",
      "example": "Example",
      "login": "Login",
      "overview": "개요",
      "password_reset": "Password Reset",
      "path_parameters": "Path Parameters",
      "refresh_token": "Refresh Token",
      "request_body": "Request Body",
      "reset_password": "Reset Password",
      "response": "Response",
      "security_best_practices": "Security Best Practices",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "title": "Authentication API",
      "token_expiration": "Token Expiration",
      "using_auth_tokens": "Using Authentication Tokens",
      "validate_reset_token": "Validate Reset Token"
    },
    "hosts": {
      "authentication_required": "Authentication Required",
      "bulk_operations": "Bulk Operations",
      "fleet_management": "Fleet Management",
      "hardware_system_info": "Hardware and System Information",
      "host_operations": "Host Operations",
      "important_notes": "Important Notes",
      "overview": "개요",
      "software_package_info": "Software and Package Information",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "title": "Host Management API"
    },
    "packages": {
      "important_notes": "Important Notes",
      "os_upgrades": "OS Upgrades",
      "overview": "개요",
      "package_cache_management": "Package Cache Management",
      "package_discovery": "Package Discovery",
      "package_installation": "Package Installation",
      "package_search": "Package Search",
      "package_updates": "Package Updates",
      "query_parameters": "Query Parameters",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "title": "Package Management API"
    },
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "title": "API 참조"
  },
  "api_docs": {
    "description": "Complete REST API documentation for integrating with SysManage.",
    "header": {
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically.",
      "title": "API 참조"
    },
    "overview": {
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features",
      "title": "개요"
    },
    "section_title": "API 참조",
    "title": "API Reference - SysManage"
  },
  "security": {
    "authentication": {
      "admin": "Admin",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "auditor": "Auditor",
      "auth_architecture": "Authentication Architecture",
      "authentication_events": "Authentication Events",
      "automatic_rotation": "Automatic Rotation",
      "common_issues": "일반적인 문제",
      "default_password_policy": "Default Password Policy",
      "default_roles": "Default Roles",
      "diagnostic_commands": "Diagnostic Commands",
      "email_otp": "Email OTP",
      "external_auth_integration": "External Auth Integration",
      "external_auth_providers": "External Authentication Providers",
      "integration_examples": "Integration Examples",
      "jwt_authentication": "JWT Authentication",
      "jwt_configuration": "JWT Configuration",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "mfa_configuration": "MFA Configuration",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_implementation": "MFA Implementation",
      "mfa_setup_problems": "MFA Setup Problems",
      "monitored_events": "Monitored Events",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "next_steps": "Next Steps",
      "operator": "Operator",
      "overview": "Authentication Overview",
      "password_policies": "Password Policies",
      "password_policy_configuration": "Password Policy Configuration",
      "password_requirements": "Password Requirements",
      "permission_examples": "Permission Examples",
      "permission_system": "Permission System",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "rbac_implementation": "RBAC Implementation",
      "rbac_permission_errors": "RBAC Permission Errors",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "recovery_codes": "Recovery Codes",
      "saml_integration": "SAML 2.0 Integration",
      "security_events": "Security Events",
      "security_monitoring": "Authentication Security Monitoring",
      "session_architecture": "Session Architecture",
      "session_configuration": "Session Configuration",
      "session_features": "Session Features",
      "session_management": "Session Management",
      "session_monitoring": "Session Monitoring",
      "session_security": "Session Security",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "supported_mfa_methods": "Supported MFA Methods",
      "suspicious_activities": "Suspicious Activities",
      "title": "Authentication & Authorization",
      "token_based_sessions": "Token-Based Sessions",
      "token_blacklisting": "Token Blacklisting",
      "token_expired_errors": "Token Expired Errors",
      "token_generation_process": "Token Generation Process",
      "token_rotation_security": "Token Rotation & Security",
      "token_validation_flow": "Token Validation Flow",
      "totp": "TOTP (Time-based OTP)",
      "troubleshooting": "Troubleshooting Authentication",
      "viewer": "Viewer"
    },
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "title": "Security Documentation"
  },
  "security_docs": {
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "header": {
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments.",
      "title": "Security Documentation"
    },
    "section_title": "보안",
    "title": "Security Documentation - SysManage",
    "database_security": {
      "title": "🗄️ 데이터베이스 보안",
      "description": "향상된 보안을 위한 UUID 기반 기본 키 및 안전한 데이터베이스 설계 패턴.",
      "uuid_keys": "UUID 기반 기본 키는 ID 열거 공격을 방지합니다",
      "replay_protection": "비순차적 식별자는 재생 공격을 방지합니다",
      "information_leakage": "예측 가능한 리소스 URL 패턴을 제거합니다",
      "privacy_enhanced": "상관관계가 없는 식별자를 통한 향상된 프라이버시",
      "gdpr_compliance": "데이터 익명화를 위한 GDPR 준수 지원",
      "secure_installation": "고유한 토큰을 가진 보안 설치 스크립트",
      "link": "데이터베이스 보안 →"
    }
  },
  "secrets_management": {
    "title": "OpenBAO 비밀 관리 - SysManage",
    "description": "SysManage에서 안전한 인증서 배포, SSH 키, 및 자격 증명 관리를 위한 OpenBAO 볼트를 사용한 엔터프라이즈급 비밀 관리.",
    "breadcrumb": "비밀 관리",
    "header": {
      "title": "🔒 OpenBAO 엔터프라이즈 비밀 관리",
      "subtitle": "OpenBAO 볼트가 제공하는 혁명적인 비밀 관리 - 인프라 보안의 골드 스탠다드 설정."
    },
    "overview": {
      "title": "🏆 타의 추종을 불허하는 보안 아키텍처",
      "description": "SysManage는 <strong>OpenBAO</strong>(엔터프라이즈급 비밀 관리 플랫폼)와 통합되어 인프라에 비할 데 없는 보안을 제공합니다. 이것은 단순한 또 다른 비밀 관리자가 아닙니다 - 시스템 관리를 엔터프라이즈 표준으로 끌어올리는 완전한 보안 변혁입니다.",
      "badge_title": "🛡️ 군사급 보안",
      "badge_description": "OpenBAO는 은행급 암호화, 제로 트러스트 아키텍처, 엔터프라이즈 감사 추적을 제공하여 SysManage를 가장 안전한 시스템 관리 플랫폼으로 만듭니다."
    },
    "openbao": {
      "title": "🚀 OpenBAO란 무엇입니까?",
      "description": "OpenBAO는 민감한 데이터에 엔터프라이즈급 보안을 제공하는 최첨단 오픈 소스 비밀 관리 플랫폼입니다. HashiCorp Vault 코드베이스에서 태어난 OpenBAO는 향상된 보안, 더 나은 성능, 진정한 오픈 소스 거버넌스로 비밀 관리의 미래를 나타냅니다.",
      "benefits_title": "🎯 OpenBAO가 SysManage를 탁월하게 만드는 이유",
      "benefit1_title": "🔐 제로 트러스트 보안",
      "benefit1_description": "모든 비밀은 저장 시와 전송 시에 암호화되며, 세분화된 액세스 제어와 포괄적인 감사 로깅을 제공합니다.",
      "benefit2_title": "🏃‍♂️ 고성능",
      "benefit2_description": "운영에 최소한의 지연 시간 영향으로 번개 같이 빠른 비밀 검색 및 저장.",
      "benefit3_title": "🌐 엔터프라이즈 규모",
      "benefit3_description": "단일 설치부터 대규모 멀티 리전 배포까지 원활하게 확장.",
      "benefit4_title": "🔄 동적 비밀",
      "benefit4_description": "노출 창을 최소화하는 단기간, 순환 가능한 비밀을 생성합니다."
    },
    "features": {
      "title": "⭐ SysManage의 혁명적 기능",
      "certificates_title": "📜 자동화된 인증서 배포",
      "certificates_description": "전체 인프라에 제로 다운타임으로 SSL/TLS 인증서를 배포합니다. OpenBAO가 인증서와 개인 키를 안전하게 저장하고, SysManage가 대상 호스트로의 자동 배포를 처리합니다.",
      "certificates_feature1": "저장 시 암호화를 통한 안전한 인증서 저장",
      "certificates_feature2": "여러 호스트에 동시 자동 배포",
      "certificates_feature3": "실시간 배포 모니터링 및 상태 추적",
      "certificates_feature4": "모든 인증서 작업에 대한 포괄적인 감사 추적",
      "ssh_title": "🔑 SSH 키 관리",
      "ssh_description": "수동 키 배포를 제거하는 중앙 집중식 키 저장, 자동 배포, 순환 기능으로 SSH 액세스 관리를 혁신합니다.",
      "ssh_feature1": "중앙 집중식 SSH 키 저장 및 관리",
      "ssh_feature2": "authorized_keys 파일로의 자동 키 배포",
      "ssh_feature3": "ed25519, RSA, ECDSA 키 타입 지원",
      "ssh_feature4": "키 순환 및 라이프사이클 관리",
      "credentials_title": "🛡️ 자격 증명 볼트",
      "credentials_description": "군사급 암호화로 민감한 자격 증명을 저장하고 관리하여 수동 자격 증명 관리를 과거의 일로 만듭니다.",
      "credentials_feature1": "저장된 모든 비밀의 AES-256 암호화",
      "credentials_feature2": "세분화된 액세스 제어 및 권한",
      "credentials_feature3": "비밀 버전 관리 및 롤백 기능",
      "credentials_feature4": "외부 인증 시스템과의 통합"
    },
    "architecture": {
      "title": "🏗️ 보안 아키텍처",
      "description": "SysManage와 OpenBAO 간의 통합은 가장 민감한 데이터를 보호하는 요새 같은 보안 아키텍처를 만듭니다.",
      "diagram_title": "🔄 안전한 데이터 흐름",
      "step1_title": "안전한 저장",
      "step1_description": "비밀은 메타데이터 추적과 함께 OpenBAO 볼트에 암호화되어 저장됩니다",
      "step2_title": "인증",
      "step2_description": "SysManage는 안전한 토큰 기반 인증을 사용하여 OpenBAO로 인증합니다",
      "step3_title": "안전한 검색",
      "step3_description": "완전한 감사 로깅과 함께 필요에 따라 비밀을 검색합니다",
      "step4_title": "암호화된 배포",
      "step4_description": "암호화된 WebSocket 채널을 통해 에이전트로 비밀을 전송합니다",
      "principles_title": "🛡️ 보안 원칙",
      "principle1": "<strong>제로 트러스트</strong>: 모든 액세스 요청이 인증되고 승인됩니다",
      "principle2": "<strong>모든 곳에서 암호화</strong>: 저장 시, 전송 시, 메모리에서 데이터 암호화",
      "principle3": "<strong>최소 노출</strong>: 비밀은 필요할 때만 복호화됩니다",
      "principle4": "<strong>포괄적 감사</strong>: 모든 작업이 로깅되고 추적 가능합니다",
      "principle5": "<strong>최소 권한 원칙</strong>: 필요할 때만 액세스가 부여됩니다"
    },
    "deployment": {
      "title": "🚀 배포 워크플로",
      "certificate_title": "📜 인증서 배포 프로세스",
      "cert_step1_title": "업로드 및 저장",
      "cert_step1_description": "SysManage 웹 인터페이스를 통해 인증서를 업로드하고 OpenBAO 볼트에 자동으로 저장",
      "cert_step2_title": "대상 선택",
      "cert_step2_description": "직관적인 웹 인터페이스를 통해 대상 호스트와 배포 경로를 선택",
      "cert_step3_title": "안전한 전송",
      "cert_step3_description": "암호화된 WebSocket 연결을 통해 에이전트로 인증서를 안전하게 전송",
      "cert_step4_title": "배포 및 검증",
      "cert_step4_description": "에이전트가 적절한 권한으로 인증서를 배포하고 성공적인 설치를 검증",
      "ssh_title": "🔑 SSH 키 배포 프로세스",
      "ssh_step1_title": "키 관리",
      "ssh_step1_description": "메타데이터와 액세스 제어와 함께 OpenBAO에 SSH 공개 키를 저장",
      "ssh_step2_title": "사용자 할당",
      "ssh_step2_description": "세분화된 권한으로 특정 사용자와 호스트에 키를 할당",
      "ssh_step3_title": "자동 배포",
      "ssh_step3_description": "적절한 형식으로 authorized_keys 파일에 키를 자동 추가",
      "ssh_step4_title": "액세스 검증",
      "ssh_step4_description": "SSH 액세스가 작동하는지 확인하고 모든 키 작업에 대한 감사 추적을 유지"
    },
    "benefits": {
      "title": "🏆 경쟁 우위",
      "description": "SysManage의 OpenBAO 통합은 다른 모든 시스템 관리 플랫폼과 차별화되는 보안 기능을 제공합니다:",
      "enterprise_title": "🏢 첫날부터 엔터프라이즈 준비",
      "enterprise_description": "다른 플랫폼이 보안을 후속 고려사항으로 취급하는 동안, SysManage는 처음부터 OpenBAO의 입증된 엔터프라이즈 기반 위에 구축됩니다.",
      "compliance_title": "✅ 규정 준수 준비",
      "compliance_description": "포괄적인 감사 추적과 암호화로 SOC 2, GDPR, HIPAA 및 기타 규제 요구사항을 즉시 충족합니다.",
      "automation_title": "🤖 무터치 자동화",
      "automation_description": "인증서 및 SSH 키 배포의 완전한 자동화로 인적 오류를 제거하고 운영 오버헤드를 줄입니다.",
      "integration_title": "🔗 원활한 통합",
      "integration_description": "네이티브 OpenBAO 통합은 복잡한 구성이나 제3자 종속성이 없음을 의미합니다 - 그냥 작동합니다.",
      "monitoring_title": "📊 실시간 가시성",
      "monitoring_description": "포괄적인 로깅과 상태 추적을 통해 전체 인프라에서 실시간 비밀 배포를 모니터링합니다.",
      "scalability_title": "📈 무한 확장",
      "scalability_description": "단일 서버부터 대규모 멀티 클라우드 배포까지, 보안이나 성능을 희생하지 않고 아키텍처가 확장됩니다."
    },
    "getting_started": {
      "title": "🚀 시작하기",
      "description": "엔터프라이즈급 비밀 관리를 경험할 준비가 되셨습니까? 통합 OpenBAO 설정으로 시작하기가 쉬워집니다:",
      "step1_title": "1. 자동화된 설정",
      "step1_description": "<code>sysmanage_secure_installation</code> 스크립트가 안전한 기본값으로 프로덕션 모드에서 OpenBAO를 자동 구성합니다.",
      "step2_title": "2. 비밀 업로드",
      "step2_description": "웹 인터페이스를 사용하여 인증서, SSH 키 및 기타 민감한 데이터를 안전하게 업로드합니다.",
      "step3_title": "3. 확신을 갖고 배포",
      "step3_description": "실시간 모니터링과 포괄적인 감사 추적으로 대상을 선택하고 배포합니다.",
      "next_title": "📚 다음 단계",
      "link1": "완전한 시작 가이드",
      "link2": "보안 모범 사례",
      "link3": "관리 가이드",
      "link4": "API 문서"
    },
    "card": {
      "title": "🔒 OpenBAO 엔터프라이즈 비밀 관리",
      "description": "OpenBAO 볼트가 제공하는 혁명적인 비밀 관리 - SysManage 보안 아키텍처의 왕관 보석.",
      "feature1": "엔터프라이즈급 OpenBAO 볼트 통합",
      "feature2": "자동화된 SSL/TLS 인증서 배포",
      "feature3": "중앙 집중식 SSH 키 관리 및 배포",
      "feature4": "포괄적인 감사 추적을 갖춘 제로 트러스트 아키텍처",
      "feature5": "모든 민감한 데이터의 군사급 암호화",
      "link": "비밀 관리 →"
    }
  },
  "secure_installation": {
    "title": "보안 설치 가이드 - SysManage",
    "description": "자동화된 OpenBAO 설정 및 보안 시스템 초기화를 위한 sysmanage_secure_installation 스크립트의 완전한 가이드.",
    "breadcrumb": "보안 설치",
    "header": {
      "title": "🔐 SysManage 보안 설치",
      "subtitle": "통합 OpenBAO 볼트 초기화 및 엔터프라이즈 보안 기본값을 통한 자동화된 프로덕션 준비 설정."
    },
    "overview": {
      "title": "🏆 첫날부터 프로덕션 준비 보안",
      "description": "<code>sysmanage_secure_installation</code> 스크립트는 시스템 관리 배포의 양자 도약을 나타냅니다. MySQL의 전설적인 보안 설치 프로세스에서 영감을 받은 이 스크립트는 기본 SysManage 설치를 엔터프라이즈급 프로덕션 준비 보안 요새로 변환합니다.",
      "badge_title": "🚀 제로 구성 우수성",
      "badge_description": "이전에 수시간의 수동 구성이 필요했던 작업이 이제 실수하지 않는 방탄 자동화로 몇 분 만에 완료됩니다."
    },
    "what_it_does": {
      "title": "⚡ 스크립트가 달성하는 것",
      "description": "이 혁명적인 스크립트는 SysManage 설치를 엔터프라이즈급 보안 플랫폼으로 완전히 변환하는 것을 자동화합니다:"
    },
    "accomplishments": {
      "openbao_title": "🏗️ OpenBAO 볼트 초기화",
      "openbao_feature1": "자동 OpenBAO 서버 구성 및 시작",
      "openbao_feature2": "안전한 기본값으로 프로덕션 모드 볼트 초기화",
      "openbao_feature3": "자동화된 볼트 개봉 및 비밀 엔진 설정",
      "openbao_feature4": "안전한 자격 증명 생성 및 저장",
      "database_title": "🗄️ 데이터베이스 보안 강화",
      "database_feature1": "완전한 Alembic 마이그레이션 실행",
      "database_feature2": "향상된 보안을 위한 UUID 기반 기본 키",
      "database_feature3": "안전한 데이터베이스 스키마 초기화",
      "database_feature4": "데이터베이스 연결 검증 및 최적화",
      "admin_title": "👤 관리자 사용자 설정",
      "admin_feature1": "Argon2 암호 해싱을 통한 안전한 관리자 사용자 생성",
      "admin_feature2": "UUID 기반 사용자 식별",
      "admin_feature3": "포괄적인 암호 정책 적용",
      "admin_feature4": "역할 기반 액세스 제어 초기화",
      "security_title": "🔒 보안 구성",
      "security_feature1": "암호학적으로 안전한 JWT 비밀 생성",
      "security_feature2": "프로덕션 보안 기본값 활성화",
      "security_feature3": "SSL/TLS 구성 최적화",
      "security_feature4": "보안 경고 시스템 초기화"
    },
    "cross_platform": {
      "title": "🌐 크로스 플랫폼 우수성",
      "description": "보안 설치 스크립트는 지능적인 플랫폼 감지 및 권한 관리로 SysManage의 범용 호환성에 대한 약속을 보여줍니다:",
      "supported_title": "✅ 지원되는 플랫폼",
      "privileges_title": "🔐 지능적 권한 관리"
    },
    "platforms": {
      "linux_title": "🐧 Linux",
      "linux_description": "자동 sudo 감지를 통한 모든 주요 배포판의 완전한 지원",
      "macos_title": "🍎 macOS",
      "macos_description": "Homebrew 통합을 통한 네이티브 macOS 지원",
      "freebsd_title": "😈 FreeBSD",
      "freebsd_description": "doas 및 sudo 지원을 통한 BSD 네이티브",
      "openbsd_title": "🐡 OpenBSD",
      "openbsd_description": "doas 통합을 통한 OpenBSD 보안 우선 접근법",
      "windows_title": "🪟 Windows",
      "windows_description": "관리자 권한 감지를 통한 PowerShell 및 MSYS2 지원"
    },
    "privileges": {
      "feature1": "<strong>자동 감지</strong>: 모든 플랫폼에서 현재 권한 수준을 감지합니다",
      "feature2": "<strong>스마트 승격</strong>: 적절한 승격 방법(sudo, doas 또는 관리자)을 사용합니다",
      "feature3": "<strong>가상 환경</strong>: 적절한 Python 가상 환경 컨텍스트를 유지합니다",
      "feature4": "<strong>안전 검사</strong>: 시스템 변경 전 환경을 검증합니다"
    },
    "usage": {
      "title": "🚀 사용 가이드",
      "prerequisites_title": "📋 전제 조건",
      "prereq1": "가상 환경 설정과 함께 SysManage 설치 (<code>make install-dev</code>)",
      "prereq2": "시스템의 관리자/root 권한",
      "prereq3": "PostgreSQL 데이터베이스 실행 중이고 액세스 가능",
      "prereq4": "OpenBAO 바이너리 사용 가능 (<code>make install-dev</code>로 자동 설치)",
      "running_title": "⚡ 스크립트 실행",
      "basic_title": "기본 사용법:",
      "advanced_title": "고급 옵션:",
      "flow_title": "📊 설치 흐름"
    },
    "flow": {
      "step1_title": "환경 검증",
      "step1_description": "가상 환경, 종속성 및 시스템 요구사항을 검증합니다",
      "step2_title": "데이터베이스 마이그레이션",
      "step2_description": "안전한 데이터베이스 스키마 설정을 위한 Alembic 마이그레이션을 실행합니다",
      "step3_title": "관리자 사용자 생성",
      "step3_description": "안전한 암호 해싱으로 관리 사용자를 생성합니다",
      "step4_title": "보안 구성",
      "step4_description": "JWT 비밀을 생성하고 보안 강화를 적용합니다",
      "step5_title": "OpenBAO 초기화",
      "step5_description": "프로덕션 모드에서 OpenBAO 볼트를 구성하고 초기화합니다",
      "success_title": "프로덕션 준비 완료!",
      "success_description": "프로덕션 사용을 위한 엔터프라이즈급 SysManage 설치 준비 완료"
    },
    "security_features": {
      "title": "🛡️ 고급 보안 기능"
    },
    "security": {
      "argon2_title": "🔐 Argon2 암호 해싱",
      "argon2_description": "암호 해싱 경쟁의 우승자인 Argon2id를 사용하여 레인보우 테이블 및 GPU 기반 공격에 대한 군사급 보호를 제공합니다.",
      "argon2_feature1": "전용 하드웨어 공격에 저항하는 메모리 하드 알고리즘",
      "argon2_feature2": "최적 보안을 위한 구성 가능한 시간 및 메모리 매개변수",
      "argon2_feature3": "레인보우 테이블 공격에 대한 솔트 기반 보호",
      "uuid_title": "🆔 UUID 기반 보안",
      "uuid_description": "모든 기본 키는 암호학적으로 안전한 UUID를 사용하여 열거 공격을 제거하고 향상된 개인정보 보호를 제공합니다.",
      "uuid_feature1": "암호학적 무작위성을 가진 버전 4 UUID",
      "uuid_feature2": "사용자 열거 및 예측 가능한 리소스 URL 방지",
      "uuid_feature3": "향상된 개인정보 보호 및 GDPR 준수",
      "jwt_title": "🎫 암호학적 JWT 비밀",
      "jwt_description": "Python의 secrets 모듈을 사용하여 암호학적으로 안전한 JWT 비밀을 생성하여 깨뜨릴 수 없는 토큰 보안을 제공합니다.",
      "jwt_feature1": "OS 수준 무작위성에서 256비트 엔트로피",
      "jwt_feature2": "자동 비밀 순환 기능",
      "jwt_feature3": "안전한 토큰 검증 및 만료",
      "openbao_title": "🏦 OpenBAO 볼트 통합",
      "openbao_description": "원활한 OpenBAO 통합으로 설치 순간부터 엔터프라이즈급 비밀 관리를 제공합니다.",
      "openbao_feature1": "자동 볼트 초기화 및 개봉",
      "openbao_feature2": "안전한 기본값을 가진 프로덕션 모드 구성",
      "openbao_feature3": "키-값 비밀 엔진 설정 및 구성"
    },
    "troubleshooting": {
      "title": "🔧 문제 해결",
      "privileges_title": "❌ 권한 문제",
      "privileges_problem": "<strong>문제:</strong> 권한 거부 오류로 스크립트가 실패",
      "privileges_solution_title": "해결책:",
      "privileges_solution1": "시스템에 관리자 권한이 있는지 확인",
      "privileges_solution2": "Linux/macOS에서: <code>sudo</code>를 사용하거나 사용자가 sudoers에 있는지 확인",
      "privileges_solution3": "FreeBSD/OpenBSD에서: <code>doas</code>를 구성하거나 <code>sudo</code>를 사용",
      "privileges_solution4": "Windows에서: 관리자로 터미널을 실행",
      "venv_title": "🐍 가상 환경 문제",
      "venv_problem": "<strong>문제:</strong> \"가상 환경을 찾을 수 없음\" 오류",
      "venv_solution_title": "해결책:",
      "database_title": "🗄️ 데이터베이스 연결 문제",
      "database_problem": "<strong>문제:</strong> 마이그레이션 중 데이터베이스 연결 실패",
      "database_solution_title": "해결책:",
      "database_solution1": "PostgreSQL이 실행 중인지 확인: <code>systemctl status postgresql</code>",
      "database_solution2": "구성 파일의 데이터베이스 자격 증명을 확인",
      "database_solution3": "데이터베이스 사용자에게 CREATE 권한이 있는지 확인",
      "database_solution4": "수동으로 연결 테스트: <code>psql -h host -U user -d database</code>",
      "openbao_title": "🏦 OpenBAO 설치 문제",
      "openbao_problem": "<strong>문제:</strong> OpenBAO 바이너리를 찾을 수 없거나 초기화에 실패",
      "openbao_solution_title": "해결책:",
      "openbao_solution1": "OpenBAO 설치: <code>make install-dev</code> (OpenBAO 포함)",
      "openbao_solution2": "공식 릴리스에서 수동으로 OpenBAO 설치",
      "openbao_solution3": "localhost 연결에 대한 방화벽 설정 확인",
      "openbao_solution4": "<code>--skip-vault</code> 플래그를 사용하여 OpenBAO 설정을 일시적으로 건너뛰기"
    },
    "post_installation": {
      "title": "🎉 설치 후 단계",
      "description": "성공적으로 완료된 후, SysManage 설치는 엔터프라이즈급 보안으로 프로덕션 준비가 완료되었습니다. 다음에 할 일:",
      "checklist_title": "✅ 설치 후 체크리스트",
      "check1": "<strong>보안 자격 증명</strong>: 생성된 <code>.vault_credentials</code> 파일을 안전한 위치에 저장",
      "check2": "<strong>서비스 시작</strong>: <code>make start</code>를 사용하여 모든 서비스 시작",
      "check3": "<strong>웹 인터페이스 액세스</strong>: <code>https://your-server:8443</code>로 이동",
      "check4": "<strong>로그인</strong>: 설치 중에 생성한 관리자 자격 증명 사용",
      "check5": "<strong>에이전트 배포</strong>: 인프라에 SysManage 에이전트를 설치하고 승인",
      "check6": "<strong>비밀 업로드</strong>: 비밀 관리 기능 사용 시작",
      "next_title": "🚀 다음 단계",
      "link1": "완전한 시작 가이드",
      "link2": "비밀 관리 기능 탐색",
      "link3": "에이전트 설치 및 구성",
      "link4": "보안 모범 사례 검토"
    },
    "card": {
      "title": "🔐 보안 설치",
      "description": "SysManage 설치를 OpenBAO 통합을 통한 엔터프라이즈급 보안 요새로 변환하는 혁명적인 자동 설정 스크립트.",
      "feature1": "프로덕션 모드에서 자동화된 OpenBAO 볼트 초기화",
      "feature2": "크로스 플랫폼 권한 관리 및 승격",
      "feature3": "암호학적으로 안전한 관리자 사용자 생성",
      "feature4": "엔터프라이즈 보안 기본값 및 강화",
      "feature5": "데이터베이스 마이그레이션 및 스키마 초기화",
      "link": "보안 설치 가이드 →"
    }
  },
  "multi_os_cicd": {
    "page_title": "멀티 OS CI/CD 파이프라인 - SysManage 문서",
    "breadcrumb": "멀티 OS CI/CD",
    "main_title": "엔터프라이즈 멀티 OS CI/CD 파이프라인",
    "intro": "SysManage는 GitHub Actions를 사용하여 <strong>혁신적인 제로 비용 멀티 OS CI/CD 파이프라인</strong>을 구현하며, 인프라 비용 없이 Linux, macOS, Windows 플랫폼에서 엔터프라이즈급 테스팅 및 배포 기능을 제공합니다.",
    "key_benefits_title": "🚀 주요 엔터프라이즈 혜택",
    "benefit_1": "<strong>제로 인프라 비용:</strong> GitHub의 무료 러너를 사용한 완전한 CI/CD 파이프라인",
    "benefit_2": "<strong>멀티 플랫폼 우수성:</strong> 3개 주요 운영체제에서 동시 테스팅",
    "benefit_3": "<strong>빠른 실패 아키텍처:</strong> 즉각적인 실패 감지로 컴퓨팅 리소스 절약",
    "benefit_4": "<strong>엔터프라이즈 안정성:</strong> 포괄적인 검증을 통한 프로덕션 급 테스팅",
    "tabs": {
      "overview": "개요",
      "github_actions": "GitHub Actions",
      "matrix_testing": "매트릭스 테스팅",
      "platform_specific": "플랫폼별",
      "best_practices": "모범 사례"
    },
    "overview": {
      "title": "CI/CD 파이프라인 아키텍처",
      "description": "SysManage의 CI/CD 파이프라인은 <strong>비용 효율적인 엔터프라이즈 배포의 패러다임 전환</strong>을 나타내며, GitHub Actions의 매트릭스 전략을 활용하여 전용 인프라 투자 없이 포괄적인 멀티 OS 테스팅을 제공합니다.",
      "pipeline_title": "🏗️ 파이프라인 구성요소",
      "backend_title": "🔧 백엔드 테스팅",
      "backend_desc": "pytest, 데이터베이스 통합, 보안 검증을 포함한 포괄적인 Python 테스트 스위트",
      "backend_feature_1": "1,432개 이상의 단위 및 통합 테스트",
      "backend_feature_2": "실제 PostgreSQL 데이터베이스 테스팅",
      "backend_feature_3": "보안 스캔 및 검증",
      "backend_feature_4": "코드 커버리지 분석 (66%+)",
      "frontend_title": "🌐 프론트엔드 테스팅",
      "frontend_desc": "Vitest, Mock Service Worker, 컴포넌트 검증을 통한 TypeScript/React 테스팅",
      "frontend_feature_1": "63개 이상의 TypeScript 단위 테스트",
      "frontend_feature_2": "Mock Service Worker 통합",
      "frontend_feature_3": "컴포넌트 렌더링 검증",
      "frontend_feature_4": "코드 커버리지 추적",
      "ui_title": "🎭 UI 테스팅",
      "ui_desc": "포괄적인 브라우저 커버리지를 위한 Playwright와 Selenium 폴백을 통한 크로스 플랫폼 UI 테스팅",
      "ui_feature_1": "최신 브라우저를 위한 Playwright",
      "ui_feature_2": "BSD 시스템을 위한 Selenium 폴백",
      "ui_feature_3": "실제 데이터베이스 통합",
      "ui_feature_4": "크로스 브라우저 호환성",
      "execution_title": "⚡ 파이프라인 실행 전략",
      "workflow_title": "🔄 워크플로 오케스트레이션"
    },
    "github_actions": {
      "title": "GitHub Actions 구현",
      "description": "SysManage는 <strong>GitHub Actions 매트릭스 전략</strong>을 활용하여 제로 인프라 비용으로 엔터프라이즈급 CI/CD 기능을 제공하며, 비싼 전용 CI/CD 플랫폼과 일반적으로 연관된 안정성과 확장성을 제공합니다.",
      "workflow_title": "📋 워크플로 구성",
      "triggers_title": "🚀 자동 트리거",
      "triggers_desc": "코드 변경 시 파이프라인이 자동으로 실행됩니다",
      "push_main": "메인 브랜치로 푸시",
      "pull_requests": "모든 풀 리퀘스트",
      "schedule": "예약된 유지보수 실행",
      "manual": "수동 워크플로 디스패치",
      "matrix_title": "🎯 매트릭스 전략 구현",
      "matrix_desc": "여러 환경에서 병렬 실행",
      "os_ubuntu": "ubuntu-latest (주요 Linux)",
      "os_macos": "macos-latest (Apple Silicon)",
      "os_windows": "windows-latest (Windows Server)",
      "python_versions": "Python 3.11 및 3.12 지원",
      "optimization_title": "⚡ 성능 최적화",
      "optimization_desc": "고급 파이프라인 최적화 기법",
      "fail_fast": "첫 번째 실패 시 실행을 중단하는 빠른 실패 전략",
      "caching": "실행 간 지능형 의존성 캐싱",
      "parallel": "병렬 작업 실행으로 처리량 최대화",
      "resource": "리소스 효율적 실행으로 비용 최소화"
    },
    "matrix_testing": {
      "title": "멀티 OS 매트릭스 테스팅 전략",
      "description": "SysManage의 매트릭스 테스팅 전략은 <strong>포괄적인 크로스 플랫폼 검증</strong>을 제공하여 제로 인프라 비용을 유지하면서 지원되는 모든 운영체제에서 일관된 동작을 보장합니다.",
      "strategy_title": "🎯 테스팅 전략",
      "comprehensive_title": "📊 포괄적인 플랫폼 커버리지",
      "comprehensive_desc": "모든 대상 플랫폼에서 모든 커밋 테스트",
      "linux_testing": "Linux: 전체 의존성 스택을 포함한 Ubuntu LTS",
      "macos_testing": "macOS: 네이티브 Apple Silicon 실행 환경",
      "windows_testing": "Windows: PowerShell 자동화를 포함한 Server 2022",
      "bsd_simulation": "BSD: Docker 컨테이너를 통한 시뮬레이션 테스팅",
      "validation_title": "✅ 검증 레벨",
      "validation_desc": "다층 검증으로 프로덕션 준비도 보장",
      "unit_tests": "단위 테스트: 컴포넌트 수준 기능 검증",
      "integration_tests": "통합 테스트: 교차 컴포넌트 상호작용 검증",
      "ui_tests": "UI 테스트: 사용자 인터페이스 및 워크플로 검증",
      "security_tests": "보안 테스트: 취약성 스캔 및 컴플라이언스",
      "intelligent_title": "🧠 지능형 테스트 실행",
      "intelligent_desc": "스마트 테스트 실행이 플랫폼 기능에 적응합니다",
      "platform_detection": "자동 플랫폼 기능 감지",
      "framework_selection": "플랫폼별 최적 테스팅 프레임워크 선택",
      "graceful_degradation": "지원되지 않는 기능에 대한 점진적 성능 저하",
      "comprehensive_reporting": "모든 플랫폼에서 포괄적인 보고"
    },
    "platform_specific": {
      "title": "플랫폼별 테스팅 기능",
      "description": "SysManage는 모든 플랫폼에서 일관된 검증 표준을 유지하면서 각 운영체제의 고유한 기능을 활용하는 <strong>플랫폼 인식 테스팅 전략</strong>을 구현합니다.",
      "linux_title": "🐧 Linux (Ubuntu) 테스팅",
      "linux_desc": "포괄적인 도구를 갖춘 주요 개발 및 테스팅 플랫폼",
      "linux_full_stack": "PostgreSQL을 포함한 전체 스택 테스팅",
      "linux_docker": "Docker 컨테이너 테스팅 및 검증",
      "linux_packaging": "패키지 관리 테스팅 (apt/dpkg)",
      "linux_systemd": "systemd 서비스 통합 테스팅",
      "macos_title": "🍎 macOS 테스팅",
      "macos_desc": "플랫폼별 기능을 포함한 네이티브 Apple Silicon 테스팅",
      "macos_webkit": "WebKit/Safari 브라우저 테스팅",
      "macos_homebrew": "Homebrew 패키지 관리 테스팅",
      "macos_launchd": "launchd 서비스 통합 테스팅",
      "macos_security": "macOS 보안 기능 검증",
      "windows_title": "🪟 Windows 테스팅",
      "windows_desc": "PowerShell 자동화를 포함한 Windows Server 환경",
      "windows_powershell": "PowerShell 스크립트 테스팅 및 검증",
      "windows_iis": "IIS 웹 서버 통합 테스팅",
      "windows_services": "Windows 서비스 관리 테스팅",
      "windows_security": "Windows 보안 기능 검증",
      "cross_platform_title": "🌍 크로스 플랫폼 일관성",
      "cross_platform_desc": "모든 플랫폼에서 일관된 동작 보장",
      "api_consistency": "API 동작 일관성 검증",
      "config_portability": "구성 파일 이식성 테스팅",
      "database_compatibility": "플랫폼 간 데이터베이스 드라이버 호환성",
      "network_behavior": "네트워크 통신 일관성 검증"
    },
    "best_practices": {
      "title": "엔터프라이즈 CI/CD 모범 사례",
      "description": "SysManage의 CI/CD 파이프라인은 비싼 상용 CI/CD 플랫폼에서 일반적으로 발견되는 <strong>업계 선도적인 모범 사례</strong>를 구현하여 엔터프라이즈급 안정성과 효율성을 제공합니다.",
      "cost_title": "💰 제로 비용 엔터프라이즈 혜택",
      "cost_desc": "인프라 투자 없이 프리미엄 CI/CD 기능 제공",
      "github_runners": "GitHub 호스팅 러너로 서버 비용 제거",
      "matrix_efficiency": "매트릭스 전략으로 달러당 테스팅 커버리지 최대화",
      "intelligent_caching": "지능형 캐싱으로 실행 시간 및 비용 감소",
      "resource_optimization": "리소스 최적화로 컴퓨팅 사용량 최소화",
      "security_title": "🔒 보안 및 컴플라이언스",
      "security_desc": "파이프라인 전체에 통합된 엔터프라이즈급 보안",
      "secret_management": "GitHub Secrets를 통한 안전한 비밀 관리",
      "vulnerability_scanning": "모든 빌드에서 자동화된 취약성 스캔",
      "dependency_checking": "의존성 보안 검증",
      "compliance_reporting": "컴플라이언스 보고 및 감사 추적",
      "reliability_title": "🛡️ 안정성 및 모니터링",
      "reliability_desc": "포괄적인 모니터링을 통한 프로덕션급 안정성",
      "health_checks": "자동화된 상태 점검 및 서비스 검증",
      "failure_detection": "즉각적인 실패 감지 및 알림",
      "retry_logic": "일시적 실패에 대한 지능형 재시도 로직",
      "performance_monitoring": "성능 모니터링 및 최적화",
      "enterprise_title": "🏢 엔터프라이즈 통합",
      "enterprise_desc": "엔터프라이즈 개발 워크플로와의 원활한 통합",
      "branch_protection": "브랜치 보호 규칙으로 품질 게이트 시행",
      "required_checks": "필수 상태 점검으로 손상된 배포 방지",
      "automated_deployment": "스테이징 환경으로 자동화된 배포",
      "rollback_capability": "실패한 배포에 대한 자동화된 롤백 기능",
      "value_title": "💎 엔터프라이즈 가치 제안",
      "value_desc": "SysManage의 CI/CD 파이프라인은 배포 위험 감소, 시장 출시 시간 단축, 코드 품질 향상, 제로 인프라 오버헤드를 통해 <strong>측정 가능한 엔터프라이즈 가치</strong>를 제공하며, 일반적으로 조직에게 수천 달러의 CI/CD 플랫폼 비용을 절약하면서 우수한 안정성과 성능을 제공합니다.",
      "cost_savings": "$0/월",
      "cost_savings_label": "인프라 비용",
      "reliability_metric": "99.9%",
      "reliability_label": "파이프라인 안정성",
      "coverage_metric": "100%",
      "coverage_label": "플랫폼 커버리지"
    }
  },
  "performance_testing": {
    "page_title": "Artillery를 이용한 성능 테스팅 - SysManage 문서",
    "breadcrumb": "성능 테스팅",
    "main_title": "Artillery를 이용한 엔터프라이즈급 성능 테스팅",
    "intro": "SysManage는 백엔드 API 부하 테스팅을 위한 Artillery와 프론트엔드 성능 모니터링을 위한 Playwright를 결합한 <strong>포괄적인 성능 테스팅 프레임워크</strong>를 구현합니다. 이 엔터프라이즈급 접근 방식은 모든 배포 환경과 규모에서 최적의 시스템 성능을 보장합니다.",
    "key_benefits_title": "🚀 주요 엔터프라이즈 혜택",
    "benefit_1": "<strong>프로덕션 준비 부하 테스팅:</strong> 포괄적인 API 성능 검증",
    "benefit_2": "<strong>멀티 플랫폼 테스팅:</strong> Linux, macOS, Windows에서 검증됨",
    "benefit_3": "<strong>자동화된 회귀 감지:</strong> CI/CD에서 지속적인 성능 모니터링",
    "benefit_4": "<strong>엔터프라이즈 확장성:</strong> 성능 예산 및 SLA 검증",
    "tabs": {
      "overview": "개요",
      "artillery": "Artillery 백엔드",
      "playwright": "Playwright 프론트엔드",
      "ci_integration": "CI/CD 통합",
      "enterprise": "엔터프라이즈 기능"
    },
    "overview": {
      "title": "성능 테스팅 아키텍처",
      "description": "SysManage의 성능 테스팅 프레임워크는 백엔드 API 성능과 프론트엔드 사용자 경험 메트릭을 모두 다루는 <strong>이중 계층 성능 검증</strong>을 제공합니다. 이 포괄적인 접근 방식은 전체 애플리케이션 스택에서 최적의 성능을 보장합니다.",
      "framework_title": "📊 테스팅 프레임워크 구성요소",
      "backend_title": "🔧 백엔드 API 테스팅",
      "backend_desc": "현실적인 사용자 시나리오, 인증 플로우, API 엔드포인트 검증을 포함한 Artillery 기반 부하 테스팅",
      "backend_feature_1": "다단계 부하 테스팅 (워밍업, 일반, 피크)",
      "backend_feature_2": "WebSocket 연결 테스팅",
      "backend_feature_3": "인증 플로우 검증",
      "backend_feature_4": "성능 예산 시행",
      "frontend_title": "🌐 프론트엔드 성능 테스팅",
      "frontend_desc": "Playwright 기반 Core Web Vitals 모니터링 및 사용자 경험 성능 검증",
      "frontend_feature_1": "First Contentful Paint (FCP) 모니터링",
      "frontend_feature_2": "DOM Content Loaded (DCL) 타이밍",
      "frontend_feature_3": "네트워크 성능 분석",
      "frontend_feature_4": "메모리 사용량 추적",
      "execution_title": "⚡ 성능 테스팅 실행",
      "requirements_title": "📋 전제 조건",
      "requirements_desc": "성능 테스트를 실행하기 전에 SysManage 서버가 <code>localhost:8001</code>에서 실행되고 있는지 확인하세요. 테스팅 프레임워크는 현실적인 성능 메트릭을 위해 라이브 인스턴스에 대해 검증합니다."
    },
    "artillery": {
      "title": "Artillery 백엔드 부하 테스팅",
      "description": "Artillery는 SysManage의 백엔드 API에 대한 <strong>엔터프라이즈급 부하 테스팅</strong>을 제공하여 현실적인 사용자 부하를 시뮬레이션하고 다양한 트래픽 패턴 하에서 시스템 성능을 검증합니다.",
      "scenarios_title": "🎯 부하 테스팅 시나리오",
      "health_title": "상태 점검 모니터링",
      "health_desc": "지속적인 상태 엔드포인트 검증 (트래픽의 30%)",
      "auth_title": "인증 플로우 테스팅",
      "auth_desc": "JWT 인증 성능 검증 (트래픽의 40%)",
      "api_title": "호스트 관리 API",
      "api_desc": "핵심 API 엔드포인트 성능 테스팅 (트래픽의 20%)",
      "websocket_title": "WebSocket 연결 테스팅",
      "websocket_desc": "실시간 통신 성능 검증 (트래픽의 10%)",
      "phases_title": "📈 부하 테스팅 단계",
      "warmup_title": "🔥 워밍업 단계",
      "warmup_desc": "초당 2개 요청으로 10초 - 시스템 초기화",
      "normal_title": "⚡ 일반 부하",
      "normal_desc": "초당 5개 요청으로 30초 - 일반적인 프로덕션 부하",
      "peak_title": "🚀 피크 부하",
      "peak_desc": "초당 10개 요청으로 20초 - 높은 트래픽 시뮬레이션",
      "budgets_title": "💎 성능 예산",
      "response_title": "⚡ 응답 시간",
      "response_p95": "95퍼센타일: < 500ms",
      "response_p99": "99퍼센타일: < 1000ms",
      "error_title": "🛡️ 오류율",
      "error_rate": "최대: < 1%",
      "throughput_title": "📊 처리량",
      "throughput_rate": "최소: 8 RPS"
    },
    "playwright": {
      "title": "Playwright 프론트엔드 성능 테스팅",
      "description": "Playwright는 엔터프라이즈 애플리케이션에 중요한 Core Web Vitals 및 사용자 경험 메트릭에 중점을 둔 <strong>포괄적인 프론트엔드 성능 모니터링</strong>을 제공합니다.",
      "metrics_title": "📊 Core Web Vitals 모니터링",
      "fcp_title": "🎨 First Contentful Paint (FCP)",
      "fcp_desc": "첫 번째 콘텐츠 요소가 표시되는 시점을 측정",
      "fcp_target": "목표: < 2000ms",
      "dcl_title": "📄 DOM Content Loaded (DCL)",
      "dcl_desc": "초기 HTML 문서 로드 및 파싱 시간",
      "dcl_target": "목표: < 1500ms",
      "load_title": "🌐 페이지 로드 시간",
      "load_desc": "모든 리소스를 포함한 완전한 페이지 로딩",
      "load_target": "목표: < 5000ms",
      "memory_title": "💾 메모리 사용량",
      "memory_desc": "JavaScript 힙 메모리 소비 모니터링",
      "memory_target": "추적: JS 힙 크기",
      "tests_title": "🧪 성능 테스트 시나리오",
      "login_page_title": "🔐 로그인 페이지 성능",
      "login_page_desc": "포괄적인 페이지 로드 성능 및 Core Web Vitals 검증",
      "login_flow_title": "🚀 로그인 플로우 성능",
      "login_flow_desc": "폼 상호작용 및 인증 응답 시간 검증",
      "network_title": "🌐 네트워크 성능 분석",
      "network_desc": "리소스 로딩 최적화 및 네트워크 요청 모니터링",
      "cross_browser_title": "🌍 크로스 브라우저 성능 검증",
      "chromium_title": "🟦 Chromium/Chrome",
      "chromium_desc": "전체 성능 API 지원을 포함한 주요 테스팅 플랫폼",
      "firefox_title": "🟧 Firefox",
      "firefox_desc": "크로스 브라우저 성능 검증 및 호환성 테스팅",
      "webkit_title": "🟪 WebKit (macOS)",
      "webkit_desc": "macOS 환경에서 Safari 성능 테스팅"
    },
    "ci": {
      "title": "CI/CD 성능 통합",
      "description": "SysManage의 성능 테스팅 프레임워크는 <strong>GitHub Actions CI/CD 파이프라인</strong>과 원활하게 통합되어 여러 운영체제에서 모든 코드 변경에 대한 자동화된 성능 검증을 제공합니다.",
      "workflow_title": "🔄 자동화된 성능 워크플로",
      "trigger_title": "🚀 트리거 이벤트",
      "trigger_desc": "메인 브랜치로의 모든 푸시와 풀 리퀘스트에서 성능 테스트 실행",
      "matrix_title": "🎯 매트릭스 실행",
      "matrix_desc": "Ubuntu, macOS, Windows 환경에서 병렬 테스팅",
      "validation_title": "✅ 성능 검증",
      "validation_desc": "자동화된 성능 예산 시행 및 회귀 감지",
      "reporting_title": "📊 결과 보고",
      "reporting_desc": "트렌드 분석 및 모니터링을 위한 성능 메트릭 내보내기",
      "platform_title": "🌐 멀티 플랫폼 성능 테스팅",
      "ubuntu_title": "🐧 Ubuntu Linux",
      "ubuntu_artillery": "Artillery 백엔드 부하 테스팅",
      "ubuntu_playwright": "Playwright UI 성능 (Chrome, Firefox)",
      "ubuntu_docker": "Docker 컨테이너 성능 검증",
      "macos_title": "🍎 macOS",
      "macos_webkit": "WebKit/Safari 성능 테스팅",
      "macos_native": "네이티브 macOS 애플리케이션 성능",
      "macos_artillery": "Artillery 크로스 플랫폼 검증",
      "windows_title": "🪟 Windows",
      "windows_edge": "Edge 브라우저 성능 테스팅",
      "windows_powershell": "PowerShell 환경 검증",
      "windows_artillery": "Windows별 Artillery 테스팅",
      "regression_title": "📈 성능 회귀 감지",
      "baseline_title": "📊 기준선 비교",
      "baseline_desc": "구성 가능한 허용 범위 대역을 포함한 과거 성능 데이터 비교",
      "alerts_title": "🚨 자동화된 알림",
      "alerts_desc": "성능 예산 초과 시 즉시 알림",
      "trends_title": "📈 트렌드 분석",
      "trends_desc": "장기 성능 트렌드 모니터링 및 용량 계획"
    },
    "enterprise": {
      "title": "엔터프라이즈 성능 기능",
      "description": "SysManage의 성능 테스팅 프레임워크는 미션 크리티컬한 프로덕션 환경을 위해 설계된 <strong>엔터프라이즈급 기능</strong>을 제공하여 규모에서 최적의 성능을 보장합니다.",
      "scalability_title": "⚡ 엔터프라이즈 확장성 테스팅",
      "load_title": "🚀 프로덕션 부하 시뮬레이션",
      "load_realistic": "현실적인 사용자 행동 패턴",
      "load_concurrent": "1000명 이상의 사용자까지 동시 사용자 시뮬레이션",
      "load_scenarios": "다중 트래픽 시나리오 모델링",
      "load_authentication": "인증 플로우 스트레스 테스팅",
      "monitoring_title": "📊 고급 성능 모니터링",
      "monitoring_realtime": "실시간 성능 메트릭 수집",
      "monitoring_vitals": "Core Web Vitals 컴플라이언스 검증",
      "monitoring_memory": "메모리 누수 감지 및 분석",
      "monitoring_network": "네트워크 성능 최적화 인사이트",
      "compliance_title": "🛡️ SLA 컴플라이언스 검증",
      "compliance_budgets": "구성 가능한 성능 예산",
      "compliance_sla": "SLA 응답 시간 검증",
      "compliance_availability": "고가용성 테스팅 시나리오",
      "compliance_reporting": "엔터프라이즈급 보고 및 분석",
      "deployment_title": "🌍 다중 환경 배포 테스팅",
      "cloud_title": "☁️ 클라우드 인프라 테스팅",
      "cloud_desc": "AWS, Azure, GCP 및 하이브리드 클라우드 환경에서 포괄적인 테스팅",
      "cloud_autoscaling": "자동 확장 검증",
      "cloud_latency": "교차 지역 지연 시간 테스팅",
      "cloud_containers": "컨테이너 성능 최적화",
      "onprem_title": "🏢 온프레미스 엔터프라이즈 테스팅",
      "onprem_desc": "엔터프라이즈 데이터 센터 배포를 위한 전용 테스팅",
      "onprem_hardware": "하드웨어별 최적화",
      "onprem_security": "보안 컴플라이언스 검증",
      "onprem_integration": "레거시 시스템 통합 테스팅",
      "hybrid_title": "🔄 하이브리드 아키텍처 테스팅",
      "hybrid_desc": "복잡한 하이브리드 클라우드 및 멀티 클라우드 배포 검증",
      "hybrid_connectivity": "클라우드 간 연결 테스팅",
      "hybrid_failover": "재해 복구 검증",
      "hybrid_sync": "데이터 동기화 성능",
      "analytics_title": "📈 엔터프라이즈 분석 및 보고",
      "dashboards_title": "📊 경영진 대시보드",
      "dashboards_desc": "정보에 기반한 의사결정을 위한 실시간 성능 KPI 및 경영진 수준 보고",
      "capacity_title": "📈 용량 계획",
      "capacity_desc": "인프라 확장 및 리소스 최적화를 위한 예측 분석",
      "cost_title": "💰 비용 최적화",
      "cost_desc": "성능 기반 비용 분석 및 인프라 효율성 권장사항",
      "compliance_analytics_title": "🔒 컴플라이언스 보고",
      "compliance_analytics_desc": "엔터프라이즈 거버넌스를 위한 자동화된 컴플라이언스 검증 및 감사 추적 생성",
      "value_title": "💎 엔터프라이즈 가치 제안",
      "value_desc": "SysManage의 성능 테스팅 프레임워크는 다운타임 감소, 인프라 비용 최적화, 사용자 만족도 향상, 조직 성장에 맞춰 확장되는 엔터프라이즈급 안정성을 통해 <strong>측정 가능한 ROI</strong>를 제공합니다.",
      "uptime_value": "99.9%",
      "uptime_label": "가동 시간 안정성",
      "response_value": "<500ms",
      "response_label": "평균 응답 시간",
      "cost_value": "30%",
      "cost_label": "인프라 비용 절감"
    }
  }
}