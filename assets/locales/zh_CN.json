{
  "site": {
    "title": "SysManage - 现代系统管理平台",
    "description": "用于全面基础设施监控和自动化的现代系统管理平台"
  },
  "nav": {
    "features": "功能特性",
    "getting_started": "快速开始",
    "documentation": "文档",
    "config_builder": "配置构建器",
    "github": "GitHub"
  },
  "hero": {
    "title": "现代系统管理变得简单",
    "subtitle": "为您的整个基础设施提供集中监控、管理和自动化。支持 Linux、Windows、macOS、FreeBSD 和 OpenBSD。",
    "get_started": "快速开始",
    "view_github": "在 GitHub 上查看"
  },
  "features": {
    "title": "核心功能",
    "cross_platform": {
      "title": "跨平台支持",
      "description": "通过单一界面管理 Linux、Windows、macOS、FreeBSD 和 OpenBSD 系统。"
    },
    "real_time": {
      "title": "实时监控",
      "description": "基于 WebSocket 的实时通信，提供即时系统更新和监控。"
    },
    "security": {
      "title": "企业级安全",
      "description": "JWT 身份验证、mTLS、基于角色的访问控制和全面的安全扫描。"
    },
    "package_management": {
      "title": "包管理",
      "description": "在所有支持的平台上进行远程软件安装、更新和管理。"
    },
    "multilingual": {
      "title": "多语言支持",
      "description": "原生支持 14 种语言，包括英语、西班牙语、法语、德语等。"
    },
    "modern_ui": {
      "title": "现代 Web 界面",
      "description": "基于 React 的响应式界面，具有实时仪表板和全面报告功能。"
    },
    "osVersionUpgrades": {
      "title": "⬆️ 操作系统版本升级",
      "majorVersionDetection": {
        "title": "主要版本检测",
        "description": "自动检测可用的操作系统主要版本升级"
      },
      "multiPlatformSupport": {
        "title": "多平台支持",
        "description": "Ubuntu LTS升级、Fedora版本升级、macOS更新、Windows功能更新"
      },
      "bsdSupport": {
        "title": "BSD支持",
        "description": "OpenBSD系统升级和FreeBSD版本升级"
      },
      "opensuseIntegration": {
        "title": "OpenSUSE集成",
        "description": "发行版升级检测和管理"
      },
      "safetyFeatures": {
        "title": "安全功能",
        "description": "试运行功能和部署前的升级验证"
      },
      "rebootManagement": {
        "title": "重启管理",
        "description": "需要系统重启的操作系统升级的自动重启调度"
      }
    }
  },
  "quick_start": {
    "title": "快速开始",
    "step1": {
      "title": "安装服务器",
      "description": "在您的基础设施上部署 SysManage 服务器",
      "link": "服务器安装指南 →"
    },
    "step2": {
      "title": "部署代理",
      "description": "在您要管理的系统上安装代理",
      "link": "代理安装指南 →"
    },
    "step3": {
      "title": "开始管理",
      "description": "访问 Web 界面并批准您的代理",
      "link": "入门指南 →"
    }
  },
  "secrets_management": {
    "title": "OpenBAO 密钥管理 - SysManage",
    "description": "使用 OpenBAO 保险库进行企业级密钥管理，在 SysManage 中实现安全证书部署、SSH 密钥和凭据管理。",
    "breadcrumb": "密钥管理",
    "header": {
      "title": "🔒 OpenBAO 企业级密钥管理",
      "subtitle": "由 OpenBAO 保险库驱动的革命性密钥管理 - 为基础设施安全树立黄金标准。"
    },
    "overview": {
      "title": "🏆 无与伦比的安全架构",
      "description": "SysManage 与 <strong>OpenBAO</strong>（企业级密钥管理平台）集成，为您的基础设施提供无与伦比的安全性。这不仅仅是另一个密钥管理器 - 它是一个完整的安全变革，将您的系统管理提升到企业标准。",
      "badge_title": "🛡️ 军用级安全",
      "badge_description": "OpenBAO 提供银行级加密、零信任架构和企业审计跟踪，使 SysManage 成为市场上最安全的系统管理平台。"
    },
    "openbao": {
      "title": "🚀 什么是 OpenBAO？",
      "description": "OpenBAO 是一个前沿的开源密钥管理平台，为敏感数据提供企业级安全。基于 HashiCorp Vault 代码库开发，OpenBAO 代表着密钥管理的未来，具有增强的安全性、更好的性能和真正的开源治理。",
      "benefits_title": "🎯 为什么 OpenBAO 让 SysManage 卓尔不群",
      "benefit1_title": "🔐 零信任安全",
      "benefit1_description": "每个密钥都在静态和传输中加密，具有细粒度访问控制和全面审计日志。",
      "benefit2_title": "🏃‍♂️ 高性能",
      "benefit2_description": "闪电般快速的密钥检索和存储，对您的操作的延迟影响最小。",
      "benefit3_title": "🌐 企业级规模",
      "benefit3_description": "从单一安装到大规模多区域部署的无缝扩展。",
      "benefit4_title": "🔄 动态密钥",
      "benefit4_description": "生成短生命周期的可轮换密钥，最小化暴露窗口。"
    },
    "features": {
      "title": "⭐ SysManage 中的革命性功能",
      "certificates_title": "📜 自动化证书部署",
      "certificates_description": "在整个基础设施中部署 SSL/TLS 证书，实现零停机。OpenBAO 安全存储证书和私钥，而 SysManage 处理到目标主机的自动化部署。",
      "certificates_feature1": "具有静态加密的安全证书存储",
      "certificates_feature2": "同时自动部署到多个主机",
      "certificates_feature3": "实时部署监控和状态跟踪",
      "certificates_feature4": "所有证书操作的全面审计跟踪",
      "ssh_title": "🔑 SSH 密钥管理",
      "ssh_description": "通过集中式密钥存储、自动化部署和轮换功能彻底改变 SSH 访问管理，消除手动密钥分发。",
      "ssh_feature1": "集中式 SSH 密钥存储和管理",
      "ssh_feature2": "自动将密钥部署到 authorized_keys 文件",
      "ssh_feature3": "支持 ed25519、RSA 和 ECDSA 密钥类型",
      "ssh_feature4": "密钥轮换和生命周期管理",
      "credentials_title": "🛡️ 凭据保险库",
      "credentials_description": "使用军用级加密存储和管理敏感凭据，使手动凭据管理成为过去。",
      "credentials_feature1": "所有存储密钥的 AES-256 加密",
      "credentials_feature2": "细粒度访问控制和权限",
      "credentials_feature3": "密钥版本控制和回滚功能",
      "credentials_feature4": "与外部认证系统的集成"
    },
    "architecture": {
      "title": "🏗️ 安全架构",
      "description": "SysManage 和 OpenBAO 之间的集成创造了一个堡垒式的安全架构，保护您最敏感的数据。",
      "diagram_title": "🔄 安全数据流",
      "step1_title": "安全存储",
      "step1_description": "密钥被加密并存储在 OpenBAO 保险库中，带有元数据跟踪",
      "step2_title": "认证",
      "step2_description": "SysManage 使用基于令牌的安全认证与 OpenBAO 进行身份验证",
      "step3_title": "安全检索",
      "step3_description": "按需检索密钥，具有完整的审计日志记录",
      "step4_title": "加密部署",
      "step4_description": "通过加密的 WebSocket 通道将密钥传输到代理",
      "principles_title": "🛡️ 安全原则",
      "principle1": "<strong>零信任</strong>：每个访问请求都经过身份验证和授权",
      "principle2": "<strong>无处不在的加密</strong>：数据在静态、传输和内存中都被加密",
      "principle3": "<strong>最小暴露</strong>：密钥仅在需要时才解密",
      "principle4": "<strong>全面审计</strong>：每个操作都被记录和可追踪",
      "principle5": "<strong>最小权限原则</strong>：仅在需要时授予访问权限"
    },
    "deployment": {
      "title": "🚀 部署工作流",
      "certificate_title": "📜 证书部署流程",
      "cert_step1_title": "上传与存储",
      "cert_step1_description": "通过 SysManage Web 界面上传证书，自动存储在 OpenBAO 保险库中",
      "cert_step2_title": "选择目标",
      "cert_step2_description": "通过直观的 Web 界面选择目标主机和部署路径",
      "cert_step3_title": "安全传输",
      "cert_step3_description": "通过加密的 WebSocket 连接安全传输证书到代理",
      "cert_step4_title": "部署与验证",
      "cert_step4_description": "代理以适当权限部署证书并验证安装成功",
      "ssh_title": "🔑 SSH 密钥部署流程",
      "ssh_step1_title": "密钥管理",
      "ssh_step1_description": "在 OpenBAO 中存储 SSH 公钥，带有元数据和访问控制",
      "ssh_step2_title": "用户分配",
      "ssh_step2_description": "以细粒度权限将密钥分配给特定用户和主机",
      "ssh_step3_title": "自动化部署",
      "ssh_step3_description": "密钥自动添加到 authorized_keys 文件，格式正确",
      "ssh_step4_title": "访问验证",
      "ssh_step4_description": "验证 SSH 访问工作正常，并维护所有密钥操作的审计跟踪"
    },
    "benefits": {
      "title": "🏆 竞争优势",
      "description": "SysManage 的 OpenBAO 集成提供的安全功能使其在所有其他系统管理平台中脱颖而出：",
      "enterprise_title": "🏢 从第一天起就为企业做好准备",
      "enterprise_description": "当其他平台将安全视为后续考虑时，SysManage 从一开始就建立在 OpenBAO 企业级验证基础上。",
      "compliance_title": "✅ 合规就绪",
      "compliance_description": "开箱即用满足 SOC 2、GDPR、HIPAA 和其他监管要求，具有全面的审计跟踪和加密。",
      "automation_title": "🤖 零接触自动化",
      "automation_description": "证书和 SSH 密钥部署的完全自动化消除了人为错误，减少了运营开销。",
      "integration_title": "🔗 无缝集成",
      "integration_description": "原生 OpenBAO 集成意味着没有复杂的配置或第三方依赖 - 它就是能工作。",
      "monitoring_title": "📊 实时可见性",
      "monitoring_description": "实时监控密钥部署，在所有基础设施中提供全面的日志记录和状态跟踪。",
      "scalability_title": "📈 无限扩展",
      "scalability_description": "从单一服务器到大规模多云部署，架构扩展时不会影响安全性或性能。"
    },
    "getting_started": {
      "title": "🚀 快速开始",
      "description": "准备体验企业级密钥管理？集成的 OpenBAO 设置让入门变得轻松：",
      "step1_title": "1. 自动化设置",
      "step1_description": "<code>sysmanage_secure_installation</code> 脚本自动配置 OpenBAO 生产模式和安全默认值。",
      "step2_title": "2. 上传密钥",
      "step2_description": "使用 Web 界面安全上传证书、SSH 密钥和其他敏感数据。",
      "step3_title": "3. 自信部署",
      "step3_description": "选择目标并部署，具有实时监控和全面审计跟踪。",
      "next_title": "📚 下一步",
      "link1": "完整入门指南",
      "link2": "安全最佳实践",
      "link3": "管理指南",
      "link4": "API 文档"
    },
    "card": {
      "title": "🔒 OpenBAO 企业级密钥管理",
      "description": "由 OpenBAO 保险库驱动的革命性密钥管理 - SysManage 安全架构的皇冠明珠。",
      "feature1": "企业级 OpenBAO 保险库集成",
      "feature2": "自动化 SSL/TLS 证书部署",
      "feature3": "集中式 SSH 密钥管理和部署",
      "feature4": "具有全面审计跟踪的零信任架构",
      "feature5": "所有敏感数据的军用级加密",
      "link": "密钥管理 →"
    }
  },
  "secure_installation": {
    "title": "安全安装指南 - SysManage",
    "description": "sysmanage_secure_installation 脚本的完整指南，用于自动化 OpenBAO 设置和安全系统初始化。",
    "breadcrumb": "安全安装",
    "header": {
      "title": "🔐 SysManage 安全安装",
      "subtitle": "具有集成 OpenBAO 保险库初始化和企业安全默认值的自动化生产就绪设置。"
    },
    "overview": {
      "title": "🏆 从第一天起就为生产做好准备",
      "description": "<code>sysmanage_secure_installation</code> 脚本代表了系统管理部署的量子飞跃。受 MySQL 传奇安全安装过程启发，这个脚本将基本的 SysManage 安装转变为企业级的生产就绪安全堡垒。",
      "badge_title": "🚀 零配置卓越",
      "badge_description": "过去需要数小时手动配置的工作现在只需几分钟，通过永不出错的防弹自动化完成。"
    },
    "what_it_does": {
      "title": "⚡ 脚本完成的工作",
      "description": "这个革命性脚本自动化了将您的 SysManage 安装完全转换为企业级安全平台："
    },
    "accomplishments": {
      "openbao_title": "🏗️ OpenBAO 保险库初始化",
      "openbao_feature1": "自动 OpenBAO 服务器配置和启动",
      "openbao_feature2": "具有安全默认值的生产模式保险库初始化",
      "openbao_feature3": "自动化保险库解封和密钥引擎设置",
      "openbao_feature4": "安全凭据生成和存储",
      "database_title": "🗄️ 数据库安全强化",
      "database_feature1": "完整的 Alembic 迁移执行",
      "database_feature2": "增强安全性的基于 UUID 的主键",
      "database_feature3": "安全数据库模式初始化",
      "database_feature4": "数据库连接验证和优化",
      "admin_title": "👤 管理用户设置",
      "admin_feature1": "使用 Argon2 密码哈希创建安全管理员用户",
      "admin_feature2": "基于 UUID 的用户标识",
      "admin_feature3": "全面的密码策略执行",
      "admin_feature4": "基于角色的访问控制初始化",
      "security_title": "🔒 安全配置",
      "security_feature1": "加密安全的 JWT 密钥生成",
      "security_feature2": "生产安全默认值激活",
      "security_feature3": "SSL/TLS 配置优化",
      "security_feature4": "安全警告系统初始化"
    },
    "cross_platform": {
      "title": "🌐 跨平台卓越",
      "description": "安全安装脚本展示了 SysManage 对通用兼容性的承诺，具有智能平台检测和权限管理：",
      "supported_title": "✅ 支持的平台",
      "privileges_title": "🔐 智能权限管理"
    },
    "platforms": {
      "linux_title": "🐧 Linux",
      "linux_description": "全面支持所有主要发行版，自动 sudo 检测",
      "macos_title": "🍎 macOS",
      "macos_description": "原生 macOS 支持，集成 Homebrew",
      "freebsd_title": "😈 FreeBSD",
      "freebsd_description": "BSD 原生，支持 doas 和 sudo",
      "openbsd_title": "🐡 OpenBSD",
      "openbsd_description": "OpenBSD 安全优先方法，集成 doas",
      "windows_title": "🪟 Windows",
      "windows_description": "PowerShell 和 MSYS2 支持，管理员权限检测"
    },
    "privileges": {
      "feature1": "<strong>自动检测</strong>：跨所有平台检测当前权限级别",
      "feature2": "<strong>智能提升</strong>：使用适当的提升方法（sudo、doas 或管理员）",
      "feature3": "<strong>虚拟环境</strong>：维护适当的 Python 虚拟环境上下文",
      "feature4": "<strong>安全检查</strong>：在进行系统更改前验证环境"
    },
    "usage": {
      "title": "🚀 使用指南",
      "prerequisites_title": "📋 先决条件",
      "prereq1": "已设置虚拟环境的 SysManage 安装（<code>make install-dev</code>）",
      "prereq2": "系统上的管理员/root 权限",
      "prereq3": "PostgreSQL 数据库运行并可访问",
      "prereq4": "OpenBAO 二进制文件可用（随 <code>make install-dev</code> 自动安装）",
      "running_title": "⚡ 运行脚本",
      "basic_title": "基本用法：",
      "advanced_title": "高级选项：",
      "flow_title": "📊 安装流程"
    },
    "flow": {
      "step1_title": "环境验证",
      "step1_description": "验证虚拟环境、依赖项和系统要求",
      "step2_title": "数据库迁移",
      "step2_description": "执行 Alembic 迁移以设置安全数据库模式",
      "step3_title": "管理员用户创建",
      "step3_description": "使用安全密码哈希创建管理员用户",
      "step4_title": "安全配置",
      "step4_description": "生成 JWT 密钥并应用安全强化",
      "step5_title": "OpenBAO 初始化",
      "step5_description": "配置并初始化 OpenBAO 保险库在生产模式",
      "success_title": "生产就绪！",
      "success_description": "企业级 SysManage 安装已准备好用于生产"
    },
    "security_features": {
      "title": "🛡️ 高级安全功能"
    },
    "security": {
      "argon2_title": "🔐 Argon2 密码哈希",
      "argon2_description": "使用 Argon2id（密码哈希竞赛的获胜者），提供针对彩虹表和基于 GPU 的攻击的军用级保护。",
      "argon2_feature1": "内存困难算法，抵抗专用硬件攻击",
      "argon2_feature2": "可配置的时间和内存参数，实现最佳安全性",
      "argon2_feature3": "基于盐的保护，防御彩虹表攻击",
      "uuid_title": "🆔 基于 UUID 的安全",
      "uuid_description": "所有主键使用加密安全的 UUID，消除枚举攻击并提供增强隐私。",
      "uuid_feature1": "具有加密随机性的版本 4 UUID",
      "uuid_feature2": "防止用户枚举和可预测的资源 URL",
      "uuid_feature3": "增强隐私和 GDPR 合规性",
      "jwt_title": "🎫 加密 JWT 密钥",
      "jwt_description": "使用 Python 的 secrets 模块生成加密安全的 JWT 密钥，实现不可破解的令牌安全。",
      "jwt_feature1": "来自操作系统级随机性的 256 位熵",
      "jwt_feature2": "自动密钥轮换能力",
      "jwt_feature3": "安全令牌验证和过期",
      "openbao_title": "🏦 OpenBAO 保险库集成",
      "openbao_description": "无缝的 OpenBAO 集成从安装时刻就提供企业级密钥管理。",
      "openbao_feature1": "自动保险库初始化和解封",
      "openbao_feature2": "具有安全默认值的生产模式配置",
      "openbao_feature3": "键值密钥引擎设置和配置"
    },
    "troubleshooting": {
      "title": "🔧 故障排除",
      "privileges_title": "❌ 权限问题",
      "privileges_problem": "<strong>问题：</strong>脚本因权限拒绝错误失败",
      "privileges_solution_title": "解决方案：",
      "privileges_solution1": "确保您在系统上拥有管理员权限",
      "privileges_solution2": "在 Linux/macOS 上：使用 <code>sudo</code> 或确保您的用户在 sudoers 中",
      "privileges_solution3": "在 FreeBSD/OpenBSD 上：配置 <code>doas</code> 或使用 <code>sudo</code>",
      "privileges_solution4": "在 Windows 上：以管理员身份运行终端",
      "venv_title": "🐍 虚拟环境问题",
      "venv_problem": "<strong>问题：</strong>\"未找到虚拟环境\"错误",
      "venv_solution_title": "解决方案：",
      "database_title": "🗄️ 数据库连接问题",
      "database_problem": "<strong>问题：</strong>迁移期间数据库连接失败",
      "database_solution_title": "解决方案：",
      "database_solution1": "验证 PostgreSQL 正在运行：<code>systemctl status postgresql</code>",
      "database_solution2": "检查配置文件中的数据库凭据",
      "database_solution3": "确保数据库用户有 CREATE 权限",
      "database_solution4": "手动测试连接：<code>psql -h host -U user -d database</code>",
      "openbao_title": "🏦 OpenBAO 安装问题",
      "openbao_problem": "<strong>问题：</strong>未找到 OpenBAO 二进制文件或初始化失败",
      "openbao_solution_title": "解决方案：",
      "openbao_solution1": "安装 OpenBAO：<code>make install-dev</code>（包括 OpenBAO）",
      "openbao_solution2": "从官方发布手动安装 OpenBAO",
      "openbao_solution3": "检查本地主机连接的防火墙设置",
      "openbao_solution4": "使用 <code>--skip-vault</code> 标志临时跳过 OpenBAO 设置"
    },
    "post_installation": {
      "title": "🎉 安装后步骤",
      "description": "成功完成后，您的 SysManage 安装已具备企业级安全的生产就绪状态。接下来要做的事情：",
      "checklist_title": "✅ 安装后检查清单",
      "check1": "<strong>保护凭据</strong>：将生成的 <code>.vault_credentials</code> 文件存储在安全位置",
      "check2": "<strong>启动服务</strong>：使用 <code>make start</code> 启动所有服务",
      "check3": "<strong>访问 Web 界面</strong>：导航到 <code>https://your-server:8443</code>",
      "check4": "<strong>登录</strong>：使用安装期间创建的管理员凭据",
      "check5": "<strong>部署代理</strong>：在您的基础设施上安装和批准 SysManage 代理",
      "check6": "<strong>上传密钥</strong>：开始使用密钥管理功能",
      "next_title": "🚀 下一步",
      "link1": "完整入门指南",
      "link2": "探索密钥管理功能",
      "link3": "安装和配置代理",
      "link4": "查看安全最佳实践"
    },
    "card": {
      "title": "🔐 安全安装",
      "description": "革命性自动化设置脚本，将您的 SysManage 安装转变为具有 OpenBAO 集成的企业级安全堡垒。",
      "feature1": "自动化 OpenBAO 保险库生产模式初始化",
      "feature2": "跨平台权限管理和提升",
      "feature3": "加密安全的管理员用户创建",
      "feature4": "企业安全默认值和强化",
      "feature5": "数据库迁移和模式初始化",
      "link": "安全安装指南 →"
    }
  },
  "architecture": {
    "title": "架构概述",
    "server_components": "服务器组件",
    "agent_features": "代理功能",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "agent_capacity": "Agent Capacity",
      "agent_scaling": "Agent Scaling",
      "agent_server_communication": "Agent-to-Server Communication",
      "application_layer": "Application Layer",
      "architecture": "Architecture",
      "architecture_overview": "Architecture Overview",
      "authentication_systems": "Authentication Systems",
      "automation_orchestration": "Automation & Orchestration",
      "backend_technologies": "Backend Technologies",
      "certificate_based_auth": "Certificate-Based Authentication",
      "communication_security": "Communication & Security",
      "core_components": "Core Components",
      "data_flow_architecture": "Data Flow Architecture",
      "data_layer": "Data Layer",
      "deployment_patterns": "Deployment Patterns",
      "devops_deployment": "DevOps & Deployment",
      "external_system_integration": "External System Integration",
      "frontend_technologies": "Frontend Technologies",
      "high_availability": "High Availability Deployment",
      "high_level_architecture": "High-Level Architecture",
      "horizontal_scaling": "Horizontal Scaling",
      "integration_points": "Integration Points",
      "key_features": "Key Features",
      "monitoring_alerting": "Monitoring & Alerting",
      "multi_region": "Multi-Region Deployment",
      "network_security": "Network Security",
      "next_steps": "Next Steps",
      "package_repositories": "Package Repositories",
      "performance_characteristics": "Performance Characteristics",
      "resource_usage": "Resource Usage",
      "response_times": "Response Times",
      "rest_api": "REST API",
      "scalability_design": "Scalability Design",
      "security_architecture": "Security Architecture",
      "server_scaling": "Server Scaling",
      "single_instance": "Single Instance Deployment",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "sysmanage_agents": "SysManage Agents",
      "sysmanage_server": "SysManage Server",
      "technology_stack": "Technology Stack",
      "title": "System Overview",
      "transport_layer": "Transport Layer",
      "use_cases": "Use Cases",
      "user_request_processing": "User Request Processing",
      "web_interface": "Web Interface"
    }
  },
  "docs": {
    "title": "文档 - SysManage",
    "description": "SysManage服务器和代理组件的完整文档。",
    "header": {
      "title": "文档",
      "subtitle": "用于部署、配置和管理SysManage的全面指南。"
    },
    "server": {
      "title": "服务器文档",
      "description": "安装、配置和管理SysManage服务器的完整指南。",
      "installation": "安装指南",
      "configuration": "配置",
      "deployment": "部署",
      "features": "功能",
      "reports": "报告和PDF生成",
      "testing": "测试和Playwright",
      "troubleshooting": "故障排除",
      "view_docs": "查看服务器文档 →"
    },
    "agent": {
      "title": "代理文档",
      "description": "在所有平台上设置和管理SysManage代理的指南。",
      "installation": "安装指南",
      "configuration": "配置",
      "privileged_execution": "特权执行",
      "cross_platform": "跨平台支持",
      "troubleshooting": "故障排除",
      "view_docs": "查看代理文档 →"
    },
    "api": {
      "title": "API参考",
      "description": "与SysManage集成的完整REST API文档。",
      "authentication": "身份验证",
      "hosts": "主机管理",
      "packages": "包管理和卸载",
      "websockets": "WebSocket API",
      "monitoring": "监控",
      "view_docs": "查看API文档 →"
    },
    "security": {
      "title": "安全",
      "description": "安全功能、最佳实践和漏洞报告。",
      "authentication": "身份验证和授权",
      "mtls": "双向TLS (mTLS)",
      "scanning": "安全扫描",
      "best_practices": "最佳实践",
      "reporting": "漏洞报告",
      "view_docs": "查看安全文档 →"
    },
    "getting_started": {
      "title": "快速入门",
      "description": "为新用户提供的快速入门指南和教程。",
      "quick_start": "快速开始",
      "webui_overview": "Web界面概览",
      "first_deployment": "首次部署",
      "agent_approval": "代理审批",
      "basic_management": "基本管理",
      "tutorials": "教程",
      "view_docs": "快速入门 →"
    },
    "administration": {
      "title": "管理",
      "description": "管理用户、主机和系统设置的管理指南。",
      "user_management": "用户管理",
      "host_management": "主机管理",
      "monitoring": "监控和警报",
      "backup": "备份和恢复",
      "maintenance": "维护",
      "view_docs": "查看管理文档 →"
    },
    "architecture": {
      "title": "架构",
      "description": "包括系统设计、消息流和组件交互的技术架构文档。",
      "message_flow": "消息流和队列",
      "testing_excellence": "测试卓越",
      "system_overview": "系统概述",
      "performance_metrics": "性能和可扩展性",
      "database_schema": "数据库设计",
      "websocket_protocol": "通信协议",
      "view_docs": "查看架构 →"
    },
    "additional_resources": {
      "title": "附加资源",
      "github_repo": "GitHub仓库",
      "issue_tracker": "问题跟踪器",
      "community_discussions": "社区讨论",
      "agent_repo": "代理仓库"
    },
    "webui_overview": {
      "title": "Web界面概览",
      "subtitle": "通过详细截图和功能说明探索SysManage Web界面。"
    },
    "architecture_old": {
      "title": "架构文档",
      "subtitle": "涵盖SysManage系统架构、设计模式和组件交互的技术文档。",
      "message_flow": {
        "title": "消息流和状态管理",
        "subtitle": "全面概述SysManage代理和后端服务器之间消息的传递、排队和处理方式。",
        "overview": {
          "title": "架构概述",
          "description": "SysManage使用先进的消息传递架构，确保分布式代理和中央服务器之间可靠、有序的通信。系统在两端采用持久化消息队列，具备自动重试逻辑、优先级处理和状态跟踪功能。"
        },
        "communication": {
          "title": "通信协议",
          "websocket": {
            "title": "WebSocket层",
            "description": "代理和服务器之间的所有实时通信都通过使用双向TLS（mTLS）保护的WebSocket连接进行。WebSocket层提供："
          },
          "queuing": {
            "title": "持久化消息队列",
            "description": "代理和服务器都维护持久化消息队列，确保在网络中断或系统重启期间不会丢失数据："
          }
        },
        "states": {
          "title": "消息状态和生命周期"
        },
        "types": {
          "title": "消息类型"
        },
        "priority": {
          "title": "优先级和调度",
          "description": "消息根据优先级级别处理，确保关键操作优先处理："
        },
        "reliability": {
          "title": "可靠性功能"
        },
        "performance": {
          "title": "性能特征"
        },
        "monitoring": {
          "title": "监控和可观察性",
          "description": "消息流系统提供全面的监控功能："
        }
      },
      "testing_excellence": {
        "title": "测试卓越：革命性双Conftest架构",
        "subtitle": "革命性双conftest测试架构，以企业级可靠性实现100%覆盖率。",
        "achievement": {
          "title": "企业级测试成就",
          "python_tests": "Python测试",
          "typescript_tests": "TypeScript测试",
          "total_runtime": "总运行时间",
          "flaky_tests": "不稳定测试",
          "pass_status": "100%通过",
          "lightning_fast": "闪电般快速",
          "rock_solid": "坚如磐石",
          "seconds": "秒"
        },
        "solution": {
          "title": "Our Revolutionary Solution",
          "layer1_title": "Layer 1: Integration Testing Foundation",
          "layer1_subtitle": "Main Conftest (/tests/conftest.py)",
          "layer1_purpose": "Purpose: Complex integration tests with full production schema fidelity",
          "layer1_innovation": "Innovation: Automatic PostgreSQL ↔ SQLite synchronization via Alembic migrations"
        },
        "performance": {
          "title": "Performance Metrics That Matter",
          "before_title": "Before Our Architecture",
          "after_title": "After Implementation",
          "before_runtime": "Test suite runtime: 5-10 minutes",
          "after_runtime": "Test suite runtime: <60 seconds ⚡"
        },
        "footer": {
          "title": "This is Modern Testing Excellence",
          "description": "We've achieved what many said was impossible: enterprise-grade testing that's fast, maintainable, and comprehensive.",
          "tagline": "This is what confidence looks like. This is SysManage."
        }
      }
    }
  },
  "navigation": {
    "title": "快速导航",
    "security_overview": "← 安全概述",
    "best_practices": "安全最佳实践 →",
    "server_installation": "← 服务器安装",
    "server_configuration": "服务器配置 →"
  },
  "footer": {
    "description": "用于全面基础设施监控和自动化的现代系统管理平台。",
    "documentation": "文档",
    "server_docs": "服务器文档",
    "agent_docs": "代理文档",
    "api_reference": "API 参考",
    "security": "安全",
    "community": "社区",
    "github_repo": "GitHub 仓库",
    "issue_tracker": "问题追踪",
    "discussions": "讨论",
    "license": "许可证",
    "licensed_under": "采用 AGPLv3 许可",
    "view_license": "查看许可证",
    "copyright": "© 2024 SysManage. 保留所有权利。"
  },
  "installation": {
    "title": "安装指南",
    "system_requirements": "系统要求",
    "prerequisites": "先决条件",
    "installation_steps": "安装步骤",
    "troubleshooting": "故障排除"
  },
  "configuration": {
    "title": "配置指南",
    "basic_config": "基础配置",
    "security_config": "安全配置",
    "advanced_features": "高级功能"
  },
  "security_page": {
    "title": "安全文档",
    "overview": "安全概述",
    "features": "安全功能",
    "vulnerability_reporting": "漏洞报告"
  },
  "platforms": {
    "opensuse": {
      "title": "openSUSE Leap/Tumbleweed",
      "package_notes": "包管理器说明",
      "leap_note": "使用稳定包，可能需要手动安装 Rust",
      "tumbleweed_note": "滚动发布，可通过 zypper 获得 Rust",
      "python_versions": "Leap 搭载 Python 3.9+，Tumbleweed 搭载最新稳定版"
    },
    "sles": {
      "title": "SUSE Linux Enterprise Server (SLES)",
      "enterprise_considerations": "企业级考量",
      "sles12_note": "可能需要软件集合 (SCL) 来获得更新的 Python",
      "sles15_note": "包含 Python 3.6+，但建议使用 3.9+",
      "firewall_note": "SuSEfirewall2 或 firewalld 可能阻止代理端口",
      "selinux_note": "如果启用，可能需要策略调整",
      "subscription_note": "某些包需要有效的 SLES 订阅",
      "service_notes": "SUSE 企业版说明",
      "firewall_config": "通过 YaST 或 firewall-cmd 打开所需端口",
      "apparmor_note": "SUSE 默认使用 AppArmor 而非 SELinux",
      "logging_note": "可通过 journalctl 或 /var/log/messages 查看日志"
    }
  },
  "server_docs": {
    "title": "服务器文档 - SysManage",
    "description": "SysManage服务器安装、配置和管理的完整文档。",
    "section_title": "服务器",
    "header": {
      "title": "服务器文档",
      "subtitle": "安装、配置和管理SysManage服务器的完整指南。"
    },
    "overview": {
      "title": "概述",
      "description": "SysManage服务器是一个现代的Web应用程序，使用FastAPI（Python）后端和React（TypeScript）前端构建。它通过轻量级代理提供管理多个系统的集中平台。",
      "components_title": "服务器组件",
      "backend_api": "后端API - 具有异步支持、JWT认证和WebSocket通信的FastAPI",
      "frontend_ui": "前端UI - 具有TypeScript、Material-UI组件和实时更新的React",
      "database": "数据库 - 具有SQLAlchemy ORM和Alembic迁移的PostgreSQL",
      "authentication": "认证 - 具有令牌轮换和基于角色的访问控制的JWT",
      "communication": "通信 - 用于实时更新的WebSocket和用于操作的REST API",
      "monitoring": "监控 - 全面的指标、日志记录和健康监控",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents"
    },
    "quick_links": {
      "title": "快速链接",
      "installation": "服务器安装",
      "configuration": "配置",
      "deployment": "部署",
      "testing": "测试",
      "troubleshooting": "故障排除"
    },
    "reports": {
      "title": "报告和PDF生成",
      "subtitle": "具有实时HTML查看和专业PDF生成功能的综合报告系统。",
      "overview": "概述",
      "overview_description": "SysManage包含一个强大的报告系统，可以生成关于您的基础设施的综合报告。该系统支持实时HTML查看和专业PDF生成，用于文档和合规目的。",
      "realtime_html": "实时HTML报告",
      "pdf_generation": "专业PDF生成",
      "multi_format": "多种导出格式",
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "inventory": "Host inventory and system reports",
      "link": "Reports Documentation →",
      "security": "User management and security reports"
    },
    "testing": {
      "title": "测试",
      "subtitle": "包括单元测试、集成测试和使用Playwright的端到端测试的综合测试策略。",
      "overview": "测试概述",
      "unit_tests": "单元测试",
      "integration_tests": "集成测试",
      "e2e_testing": "端到端测试",
      "playwright": "Playwright测试",
      "test_coverage": "测试覆盖率",
      "ci_cd": "CI/CD集成",
      "cicd": "CI/CD testing pipeline",
      "coverage": "Test coverage and reporting",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "e2e": "End-to-end testing with Playwright",
      "link": "Testing Documentation →",
      "unit_integration": "Unit and integration testing"
    },
    "deployment": {
      "title": "部署指南",
      "subtitle": "在生产环境中部署SysManage的完整指南，考虑高可用性和可扩展性。",
      "overview": "部署概述",
      "production_deployment": "生产部署",
      "high_availability": "高可用性",
      "scalability": "可扩展性",
      "load_balancing": "负载均衡",
      "security_considerations": "安全考虑",
      "monitoring": "监控和可观测性",
      "backup": "Backup and disaster recovery",
      "checklist": "Production deployment checklist",
      "description": "可扩展基础设施的生产部署策略和最佳实践。",
      "link": "Deployment Guide →",
      "scaling": "Load balancing and scaling"
    },
    "features": {
      "title": "功能概述",
      "subtitle": "SysManage所有功能的综合概述，包括系统监控、包管理、用户管理和安全功能。",
      "overview": "功能概述",
      "system_monitoring": "系统监控",
      "package_management": "包管理",
      "user_management": "用户管理",
      "security_features": "安全功能",
      "reporting": "报告和分析",
      "multi_platform": "多平台支持",
      "description": "所有服务器功能和能力的详细概述。",
      "host_management": "Host and agent management",
      "link": "Features Overview →",
      "monitoring": "Real-time monitoring and alerts"
    },
    "troubleshooting": {
      "title": "故障排除指南",
      "subtitle": "针对常见问题、诊断程序和问题解决策略的综合故障排除指南。",
      "overview": "故障排除概述",
      "common_issues": "常见问题",
      "diagnostic_procedures": "诊断程序",
      "log_analysis": "日志分析",
      "performance_issues": "性能问题",
      "connectivity_problems": "连接问题",
      "database_issues": "数据库问题",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "link": "Troubleshooting Guide →",
      "maintenance": "Database maintenance",
      "performance": "Performance optimization"
    },
    "configuration": {
      "database_settings": "Database connection settings",
      "description": "用于自定义 SysManage 部署的全面配置选项。",
      "file_structure": "Configuration file structure",
      "link": "Configuration Guide →",
      "security_options": "Security and authentication options",
      "title": "⚙️ Configuration",
      "websocket_api": "WebSocket and API configuration"
    },
    "installation": {
      "database": "Database setup and configuration",
      "description": "在您的基础设施上设置 SysManage 服务器的分步安装指南。",
      "link": "Installation Guide →",
      "methods": "Docker and traditional installation methods",
      "requirements": "System requirements and prerequisites",
      "ssl": "SSL certificate configuration",
      "title": "🚀 Installation"
    },
    "navigation": {
      "agent": "← Agent Documentation",
      "api": "API Reference →",
      "title": "Quick Navigation"
    },
    "security": {
      "auth": "Authentication and authorization",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "title": "🔐 Security"
    }
  },
  "server_installation": {
    "title": "服务器安装指南 - SysManage",
    "description": "SysManage服务器的完整安装指南，包括先决条件、数据库设置和配置。",
    "breadcrumb_installation": "安装",
    "header": {
      "title": "服务器安装指南",
      "subtitle": "在您的基础设施上设置SysManage服务器的完整逐步安装指南。"
    },
    "requirements": {
      "title": "系统要求",
      "required": "必需",
      "supported": "支持",
      "python": {
        "title": "🐍 Python",
        "version": "3.11或3.12",
        "note": "注意：由于包兼容性问题，Python 3.13尚未支持"
      },
      "nodejs": {
        "title": "🟢 Node.js",
        "version": "20.x或更高版本",
        "description": "用于构建React前端"
      },
      "postgresql": {
        "title": "🐘 PostgreSQL",
        "version": "14或更高版本",
        "description": "所有应用程序数据的主数据库"
      },
      "os": {
        "title": "💻 操作系统",
        "platforms": "Linux、macOS、Windows、FreeBSD、OpenBSD",
        "description": "跨平台部署"
      }
    },
    "prerequisites": {
      "title": "平台特定的先决条件",
      "ubuntu_debian": "Ubuntu/Debian",
      "ubuntu25": {
        "title": "Ubuntu 25.04+ (从源码安装Python 3.12)",
        "note": "Ubuntu 25.04+ 只提供 Python 3.13，目前还不兼容。您必须从源码编译 Python 3.12：",
        "tab_title": "Ubuntu 25.04+"
      },
      "centos_rhel": "CentOS/RHEL",
      "macos": {
        "title": "macOS",
        "tab_title": "macOS"
      },
      "windows": {
        "title": "Windows",
        "tab_title": "Windows"
      },
      "freebsd": {
        "title": "FreeBSD",
        "tab_title": "FreeBSD"
      },
      "openbsd": {
        "title": "OpenBSD",
        "tab_title": "OpenBSD"
      },
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10 (推荐)"
      },
      "centos": {
        "title": "CentOS/RHEL/Fedora",
        "tab_title": "CentOS/RHEL"
      }
    },
    "installation_steps": {
      "title": "安装步骤",
      "step1": {
        "title": "步骤1：克隆和设置"
      },
      "step2": {
        "title": "步骤2：安装后端依赖"
      },
      "step3": {
        "title": "步骤3：数据库设置",
        "description": "创建PostgreSQL数据库和用户：",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "openbsd": "OpenBSD",
        "windows": "Windows",
        "security_notes": {
          "title": "⚠️ 安全注意事项",
          "dev_password": "开发密码<code>abc123</code>与<code>sysmanage-dev.yaml</code>匹配",
          "never_production": "绝不要在生产环境中使用此密码",
          "change_password": "在PostgreSQL和配置文件中都要更改密码"
        }
      },
      "step4": {
        "title": "步骤4：测试数据库连接"
      },
      "step5": {
        "title": "步骤5：安装前端依赖"
      },
      "step6": {
        "title": "步骤6：配置",
        "description": "创建配置文件于：",
        "config_generator": {
          "title": "💡 配置生成器可用",
          "description": "使用交互式",
          "link": "配置构建器工具"
        },
        "linux_macos_bsd": "Linux/macOS/BSD：",
        "windows_path": "Windows：",
        "security_steps": {
          "title": "🔐 必需的安全步骤",
          "generate_secrets": "生成新的密钥：<code>openssl rand -base64 32</code>",
          "strong_passwords": "使用强密码（12个字符以上）",
          "file_permissions": "设置适当的文件权限：<code>chmod 600 /etc/sysmanage.yaml</code>",
          "never_commit": "永远不要将配置文件提交到版本控制"
        }
      },
      "step7": {
        "title": "步骤7：运行安全安装脚本",
        "security_note": {
          "title": "🔐 新安装必需",
          "description": "必须运行安全安装脚本来创建初始管理员用户并为您的安装配置唯一的安全令牌。"
        },
        "features": {
          "title": "此脚本的功能：",
          "admin_user": "创建初始管理员用户账户",
          "jwt_secret": "生成用于认证的唯一JWT密钥",
          "password_salt": "生成用于安全密码哈希的唯一密码盐值",
          "config_hardening": "对配置文件应用安全强化",
          "prevents_defaults": "防止使用默认/示例安全令牌"
        },
        "warning": {
          "title": "⚠️ 重要安全注意事项",
          "required": "此步骤是必需的",
          "required_desc": "没有它应用程序将无法安全运行",
          "unique_tokens": "每个安装都获得唯一的安全令牌以防止凭据重用",
          "run_once": "每次安装只运行此脚本一次",
          "backup_config": "运行此脚本后备份您的配置文件"
        }
      },
      "step8": {
        "title": "步骤8：启动应用程序",
        "access_description": "访问应用程序：",
        "https": "HTTPS:",
        "https_url": "https://sysmanage.org:7443 (如果SSL证书存在)",
        "http": "HTTP:",
        "http_url": "http://localhost:3000 (后备)"
      }
    },
    "ssl": {
      "title": "SSL证书（可选）",
      "description": "对于HTTPS开发，请将您的SSL证书放置在：",
      "fallback": "如果找不到证书，系统会自动回退到localhost上的HTTP。"
    },
    "troubleshooting": {
      "title": "故障排除",
      "package_errors": {
        "title": "包构建错误",
        "missing_libpq": "缺少libpq-fe.h：",
        "install_libpq": "安装<code>libpq-dev</code>（Ubuntu）或<code>postgresql-devel</code>（RHEL）",
        "httptools_errors": "httptools构建错误：",
        "install_libuv": "安装<code>libuv1-dev</code>（Ubuntu）或<code>libuv-devel</code>（RHEL）",
        "python313_issues": "Python 3.13问题：",
        "use_older_python": "改用Python 3.11或3.12"
      },
      "db_issues": {
        "title": "数据库连接问题",
        "verify_postgresql": "验证PostgreSQL正在运行：<code>sudo systemctl status postgresql</code>",
        "check_credentials": "检查凭据是否与配置文件匹配",
        "test_connection": "使用上述psql命令测试连接"
      },
      "port_conflicts": {
        "title": "端口冲突",
        "ensure_ports": "确保端口6443（API）和7443（前端）可用",
        "check_services": "检查现有服务：<code>netstat -tlnp | grep :6443</code>",
        "modify_ports": "如需要，修改配置中的端口"
      },
      "permission_issues": {
        "title": "权限问题",
        "set_config_permissions": "设置配置文件权限：<code>chmod 600 /etc/sysmanage.yaml</code>",
        "ensure_ownership": "确保目录的适当所有权",
        "check_venv": "检查虚拟环境激活"
      }
    },
    "navigation": {
      "server_docs": "← 服务器文档",
      "config_guide": "配置指南 →"
    },
    "note": "注意"
  },
  "server_configuration": {
    "title": "服务器配置指南 - SysManage",
    "description": "SysManage服务器完整配置指南，包括安全设置、数据库配置和高级功能。",
    "breadcrumb": {
      "server": "服务器",
      "configuration": "配置"
    },
    "header": {
      "title": "服务器配置指南",
      "description": "自定义SysManage服务器部署的全面配置选项。"
    },
    "file_locations": {
      "title": "配置文件位置",
      "linux_macos_bsd": "🐧 Linux/macOS/BSD",
      "windows": "🪟 Windows",
      "development": "🛠️ 开发"
    },
    "basic": {
      "title": "基本配置",
      "api_server": {
        "title": "API服务器设置",
        "notes": {
          "title": "📝 注意事项",
          "host_binding": "<strong>主机绑定：</strong>外部访问使用<code>0.0.0.0</code>，仅本地使用<code>localhost</code>",
          "ssl_certificates": "<strong>SSL证书：</strong>如果未提供，服务器将回退到HTTP",
          "port_selection": "<strong>端口选择：</strong>确保端口未被其他服务使用"
        }
      },
      "database": {
        "title": "数据库配置",
        "security_warning": {
          "title": "⚠️ 安全警告",
          "description": "示例密码<code>abc123</code>仅用于开发。<strong>生产环境中始终使用强密码！</strong>"
        }
      },
      "webui": {
        "title": "Web界面设置"
      }
    },
    "security": {
      "title": "安全配置",
      "core": {
        "title": "核心安全设置",
        "generating_values": {
          "title": "🔐 生成安全值"
        }
      },
      "password_policy": {
        "title": "密码策略配置",
        "notes": {
          "title": "📝 密码策略注意事项",
          "realtime_validation": "<strong>实时验证：</strong>策略在前端和后端都强制执行",
          "multilanguage": "<strong>多语言：</strong>所有14种支持语言均提供错误消息",
          "flexible_requirements": "<strong>灵活要求：</strong>调整策略以满足组织需求"
        }
      }
    },
    "email": {
      "title": "邮件配置",
      "smtp": {
        "title": "SMTP设置",
        "providers": {
          "title": "📧 常见SMTP配置",
          "gmail": "Gmail",
          "office365": "Office 365",
          "exchange": "Exchange",
          "postfix": "Postfix",
          "gmail_note": "<strong>注意：</strong>需要2FA和应用密码。设置请访问<a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Google应用密码</a>。"
        }
      }
    },
    "certificates": {
      "title": "证书管理",
      "storage": {
        "title": "证书存储",
        "permissions": {
          "title": "🔒 必需权限",
          "directory": "<strong>证书目录：</strong><code>0755</code>（所有者rwx，组/其他rx）",
          "private_keys": "<strong>私钥：</strong><code>0600</code>（仅所有者读写）",
          "certificates": "<strong>证书：</strong><code>0644</code>（所有者rw，其他读）"
        }
      },
      "mtls": {
        "title": "mTLS配置",
        "description": "相互TLS设置由服务器自动管理。主机批准后，客户端证书将生成并存储在证书目录中。",
        "workflow": {
          "title": "🔄 mTLS工作流",
          "step1": "<strong>主机注册：</strong>代理以待处理状态注册",
          "step2": "<strong>手动批准：</strong>管理员在Web界面中批准主机",
          "step3": "<strong>证书生成：</strong>服务器生成唯一客户端证书",
          "step4": "<strong>安全认证：</strong>后续连接使用mTLS"
        }
      }
    },
    "advanced": {
      "title": "高级功能",
      "discovery": {
        "title": "代理发现服务",
        "service": {
          "title": "📡 发现服务",
          "description": "允许代理自动发现和配置网络上的可用服务器。"
        }
      },
      "logging": {
        "title": "日志配置"
      },
      "performance": {
        "title": "性能调优"
      }
    },
    "permissions": {
      "title": "文件权限和安全",
      "directory": {
        "title": "必需目录结构"
      },
      "security_checklist": {
        "title": "🛡️ 安全检查清单",
        "config_file": "✅ 配置文件仅服务用户可读",
        "cert_directory": "✅ 证书目录访问受限",
        "private_keys": "✅ 私钥受0600权限保护",
        "strong_passwords": "✅ 使用强密码和秘密",
        "jwt_rotation": "✅ JWT秘密定期轮换",
        "db_credentials": "✅ 数据库凭据唯一且强"
      }
    },
    "environment": {
      "title": "环境变量",
      "description": "配置也可通过环境变量设置（覆盖YAML文件）："
    },
    "testing": {
      "title": "测试配置",
      "validation": {
        "title": "验证步骤",
        "syntax": "<strong>配置语法：</strong>",
        "database": "<strong>数据库连接：</strong>",
        "email": "<strong>邮件配置：</strong>",
        "ssl": "<strong>SSL证书：</strong>"
      }
    },
    "navigation": {
      "installation": "← 安装指南",
      "deployment": "部署指南 →"
    },
    "secure_installation": {
      "title": "安全安装脚本",
      "description": "SysManage 包含一个强制安全安装脚本，必须在新安装时运行以建立适当的安全基础。",
      "script_location": {
        "title": "脚本位置",
        "path": "scripts/sysmanage_secure_installation"
      },
      "features": {
        "title": "实现的安全功能",
        "admin_user": {
          "title": "👤 初始管理员用户创建",
          "secure_password": "提示输入安全管理员密码",
          "password_validation": "强制密码复杂性要求",
          "no_defaults": "防止使用默认或示例凭据"
        },
        "jwt_security": {
          "title": "🔐 JWT 安全令牌生成",
          "unique_secret": "生成加密安全的唯一 JWT 密钥",
          "entropy": "使用高熵随机数据进行令牌生成",
          "prevents_reuse": "防止跨安装的凭据重用"
        },
        "password_salt": {
          "title": "🧂 密码盐生成",
          "unique_salt": "为每个安装创建唯一密码盐",
          "rainbow_protection": "防止彩虹表攻击",
          "secure_hashing": "增强密码哈希安全性"
        },
        "config_hardening": {
          "title": "⚙️ 配置文件强化",
          "file_permissions": "设置限制性文件权限（600）",
          "ownership": "确保适当的文件所有权",
          "validation": "验证配置安全设置"
        }
      },
      "requirements": {
        "title": "⚠️ 安全要求",
        "mandatory": "强制执行：",
        "mandatory_desc": "脚本必须在首次使用前运行",
        "run_once": "仅运行一次：",
        "run_once_desc": "每次安装仅执行一次",
        "backup": "配置备份：",
        "backup_desc": "脚本执行后备份配置文件",
        "no_defaults": "无默认凭据：",
        "no_defaults_desc": "系统不会使用默认安全令牌运行"
      }
    },
    "implementation": {
      "title": "实现细节",
      "database_schema": {
        "title": "数据库模式设计",
        "description": "SysManage 中的所有主键使用 UUID 版本 4（随机）以获得最大安全性："
      }
    }
  },
  "server_deployment": {
    "title": "部署指南 - SysManage服务器",
    "description": "可扩展SysManage基础设施的生产部署策略和最佳实践。",
    "breadcrumb": {
      "server": "服务器",
      "deployment": "部署"
    },
    "header": {
      "title": "部署指南",
      "description": "可扩展、安全、可靠的SysManage基础设施的生产部署策略和最佳实践。"
    },
    "overview": {
      "title": "部署概述",
      "description": "SysManage可根据基础设施需求部署在各种配置中，从单服务器设置到高可用多节点集群。",
      "strategies": {
        "single": {
          "title": "🖥️ 单服务器部署",
          "description": "适合小到中型环境（最多100台主机）",
          "features": {
            "components": "单台服务器托管所有组件",
            "database": "同一服务器上的PostgreSQL数据库",
            "configuration": "简单配置和维护",
            "resources": "较低资源需求"
          }
        },
        "ha": {
          "title": "🔄 高可用部署",
          "description": "需要零停机的生产环境",
          "features": {
            "servers": "多个应用服务器",
            "load_balancer": "带SSL终端的负载均衡器",
            "clustering": "带故障转移的数据库集群",
            "redundancy": "冗余网络和存储"
          }
        },
        "cloud": {
          "title": "☁️ 云部署",
          "description": "可扩展的云原生部署选项",
          "features": {
            "orchestration": "容器编排（Kubernetes）",
            "scaling": "自动扩展功能",
            "database": "托管数据库服务",
            "availability": "多区域可用性"
          }
        }
      }
    },
    "checklist": {
      "title": "生产检查清单",
      "pre_deployment": {
        "title": "部署前",
        "hardware": "服务器硬件/VM规格满足要求",
        "network": "网络连接和防火墙规则已配置",
        "ssl": "SSL证书已获取并验证",
        "dns": "DNS记录已配置",
        "database": "PostgreSQL数据库服务器已准备",
        "monitoring": "备份和监控系统已就位"
      },
      "security": {
        "title": "安全配置",
        "https": "HTTPS/TLS已启用并强制",
        "passwords": "强密码策略已配置",
        "jwt": "JWT令牌设置已优化",
        "database": "数据库访问限制为应用程序",
        "firewall": "防火墙规则限制对必需端口的访问",
        "logs": "日志文件权限和轮换已配置"
      },
      "performance": {
        "title": "性能优化",
        "pooling": "数据库连接池已配置",
        "assets": "前端资源已压缩和优化",
        "caching": "缓存头已配置",
        "limits": "应用进程资源限制已设置",
        "logging": "日志级别适当设置为生产"
      }
    },
    "single_server": {
      "title": "单服务器部署",
      "requirements": {
        "title": "系统要求",
        "component": "组件",
        "minimum": "最低",
        "recommended": "推荐"
      },
      "installation": {
        "title": "安装步骤"
      },
      "config": {
        "title": "生产配置"
      }
    },
    "ha": {
      "title": "高可用部署",
      "architecture": {
        "title": "架构概述"
      },
      "load_balancer": {
        "title": "负载均衡器配置",
        "nginx": {
          "title": "Nginx配置"
        }
      },
      "database": {
        "title": "数据库集群",
        "replication": {
          "title": "PostgreSQL流复制"
        }
      }
    },
    "container": {
      "title": "容器部署",
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetes部署"
      }
    },
    "monitoring": {
      "title": "监控和日志",
      "system": {
        "title": "系统监控",
        "prometheus": {
          "title": "Prometheus配置"
        },
        "health": {
          "title": "健康检查端点"
        }
      },
      "logs": {
        "title": "日志管理"
      }
    },
    "backup": {
      "title": "备份和灾难恢复",
      "database": {
        "title": "数据库备份"
      },
      "disaster": {
        "title": "灾难恢复计划",
        "step1": "<strong>评估：</strong>确定故障范围和受影响系统",
        "step2": "<strong>沟通：</strong>通知利益相关者和用户事件",
        "step3": "<strong>隔离：</strong>隔离故障组件防止进一步损害",
        "step4": "<strong>恢复：</strong>从备份恢复或故障转移到备用系统",
        "step5": "<strong>验证：</strong>测试恢复系统并验证功能",
        "step6": "<strong>事后分析：</strong>记录事件并改进程序"
      }
    },
    "performance": {
      "title": "性能优化",
      "database": {
        "title": "数据库调优"
      },
      "application": {
        "title": "应用调优"
      },
      "caching": {
        "title": "缓存策略",
        "redis": "<strong>Redis：</strong>会话存储和临时数据缓存",
        "cdn": "<strong>CDN：</strong>静态资源分发和地理分布",
        "application": "<strong>应用缓存：</strong>数据库查询结果缓存",
        "browser": "<strong>浏览器缓存：</strong>带适当头的客户端资源缓存"
      }
    },
    "security": {
      "title": "安全加固",
      "network": {
        "title": "网络安全"
      },
      "application": {
        "title": "应用安全",
        "https": "<strong>仅HTTPS：</strong>对所有连接强制TLS",
        "hsts": "<strong>HSTS：</strong>HTTP严格传输安全头",
        "csp": "<strong>CSP：</strong>内容安全策略实现",
        "rate_limiting": "<strong>速率限制：</strong>API端点速率限制",
        "input_validation": "<strong>输入验证：</strong>全面输入清理",
        "audit_logging": "<strong>审计日志：</strong>记录所有管理操作"
      }
    },
    "maintenance": {
      "title": "维护和更新",
      "procedure": {
        "title": "更新程序",
        "step1": "<strong>备份：</strong>更新前创建完整系统备份",
        "step2": "<strong>测试：</strong>在预发布环境中测试更新",
        "step3": "<strong>维护窗口：</strong>安排维护并通知用户",
        "step4": "<strong>更新：</strong>按照文档程序应用更新",
        "step5": "<strong>验证：</strong>验证所有系统正常运行",
        "step6": "<strong>回滚计划：</strong>准备回滚程序以备需要"
      },
      "tasks": {
        "title": "维护任务",
        "daily": {
          "title": "每日",
          "monitoring": "监控系统健康和性能",
          "logs": "检查应用日志错误",
          "backup": "验证备份完成"
        },
        "weekly": {
          "title": "每周",
          "security": "检查安全日志和警报",
          "packages": "更新系统包",
          "restore_test": "测试备份恢复程序"
        },
        "monthly": {
          "title": "每月",
          "security": "安全漏洞评估",
          "performance": "性能分析和优化",
          "capacity": "容量规划审查"
        }
      }
    }
  },
  "getting_started": {
    "title": "入门指南 - SysManage",
    "description": "快速开始指南和教程，帮助您快速开始使用SysManage进行基础设施监控和自动化。",
    "breadcrumb": "入门指南",
    "header": {
      "title": "入门指南",
      "description": "快速开始指南和教程，帮助您快速开始使用SysManage进行基础设施监控和自动化。"
    },
    "welcome": {
      "title": "欢迎使用SysManage",
      "description": "SysManage是一个全面的基础设施监控和自动化平台，帮助您管理整个基础设施中的主机、软件包和系统健康。无论您是管理几台服务器还是数千台主机，SysManage都提供有效维护和监控系统所需的工具。"
    },
    "journey": {
      "title": "您的旅程从这里开始",
      "description": "按照这些指导步骤在您的环境中运行SysManage：",
      "steps": {
        "quick_start": {
          "title": "快速开始",
          "description": "几分钟内安装并运行SysManage"
        },
        "deployment": {
          "title": "首次部署",
          "description": "部署您的第一个SysManage服务器实例"
        },
        "agents": {
          "title": "代理设置",
          "description": "安装并批准您的第一个代理"
        },
        "management": {
          "title": "基本管理",
          "description": "学习基本管理任务"
        }
      }
    },
    "cards": {
      "quick_start": {
        "title": "🚀 快速开始",
        "description": "使用我们简化的安装指南快速运行SysManage。适合评估和小规模部署。",
        "features": {
          "requirements": "系统要求和先决条件",
          "docker": "使用Docker Compose安装",
          "config": "初始配置和设置",
          "login": "首次登录和基本导航"
        },
        "link": "快速开始指南 →"
      },
      "webui": {
        "title": "🌐 Web界面概述",
        "description": "SysManage Web界面及其监控和管理主要功能的全面介绍。",
        "features": {
          "dashboard": "仪表板概述和导航",
          "hosts": "主机管理界面",
          "packages": "软件包管理功能",
          "monitoring": "监控和警报"
        },
        "link": "Web界面指南 →"
      }
    },
    "prerequisites": {
      "title": "开始之前",
      "system": {
        "title": "系统要求",
        "server": {
          "title": "服务器要求"
        },
        "platforms": {
          "title": "支持的平台"
        }
      },
      "knowledge": {
        "title": "必需知识"
      },
      "needed": {
        "title": "您需要什么"
      }
    },
    "use_cases": {
      "title": "常见用例",
      "small": {
        "title": "🏢 小型企业"
      },
      "medium": {
        "title": "🏭 中型企业"
      },
      "large": {
        "title": "🌐 大型组织"
      }
    },
    "learning_path": {
      "title": "推荐学习路径"
    },
    "help": {
      "title": "获取帮助",
      "docs": {
        "title": "📖 文档",
        "description": "涵盖SysManage所有方面的全面指南"
      },
      "community": {
        "title": "💬 社区",
        "description": "与其他SysManage用户和贡献者联系"
      },
      "troubleshooting": {
        "title": "🔧 故障排除",
        "description": "常见问题及其解决方案"
      }
    },
    "navigation": {
      "title": "快速导航",
      "docs_home": "← 文档主页",
      "quick_start": "快速开始 →"
    }
  },
  "testing": {
    "overview": {
      "title": "测试策略概述",
      "description": "SysManage 采用多层测试方法来确保所有组件的可靠性、安全性和功能性：",
      "unit": {
        "title": "单元测试",
        "description": "对各个组件和函数进行全面的单元测试",
        "backend": {
          "text": "后端:",
          "count": "使用pytest的1,432个Python测试"
        },
        "frontend": {
          "text": "前端:",
          "count": "使用Vitest的63个TypeScript测试"
        },
        "coverage": {
          "text": "覆盖率:",
          "value": "后端和前端100%测试覆盖率"
        }
      },
      "integration": {
        "title": "集成测试",
        "description": "测试不同系统组件之间的交互",
        "api": "API 端点测试",
        "database": "数据库集成测试",
        "websocket": "WebSocket 通信测试",
        "auth": "身份验证和授权流程测试"
      },
      "e2e": {
        "title": "端到端 (E2E) 测试",
        "description": "使用 Playwright 进行完整的用户工作流测试",
        "journey": "完整的用户旅程测试",
        "crossbrowser": "跨浏览器兼容性",
        "realworld": "真实场景验证",
        "ui": "UI 交互和工作流测试"
      },
      "msw": {
        "title": "Mock Service Worker (MSW)",
        "description": "用于隔离和可靠前端测试的 API 模拟",
        "isolation": "完全隔离测试，不依赖后端",
        "speed": "无网络请求，测试执行更快",
        "reliability": "一致且可预测的测试行为",
        "realistic": "逼真的 API 响应模拟"
      }
    },
    "running": {
      "title": "运行测试",
      "all": {
        "title": "所有测试"
      },
      "backend": {
        "title": "后端测试 (Python/pytest)"
      },
      "frontend": {
        "title": "前端测试 (TypeScript/Vitest 与 MSW)",
        "description": "前端测试自动使用 Mock Service Worker 进行 API 模拟：",
        "msw": {
          "title": "MSW 行为",
          "description": "运行前端测试时：",
          "automatic": "MSW 自动拦截所有 API 请求",
          "logging": "请求日志出现在控制台输出中",
          "isolation": "每个测试都在完全隔离的环境中运行",
          "realistic": "自动提供逼真的 API 响应"
        }
      },
      "e2e": {
        "title": "端到端测试 (Playwright)"
      }
    },
    "msw": {
      "title": "使用 Mock Service Worker (MSW) 进行前端测试",
      "overview": {
        "title": "概述",
        "description": "Mock Service Worker (MSW) 是一个强大的 API 模拟库，在网络层拦截 HTTP 请求，为前端测试提供逼真的 API 响应。SysManage 广泛使用 MSW 来确保前端组件可以在不需要运行后端服务器的情况下进行隔离测试。"
      },
      "benefits": {
        "title": "为什么选择 MSW？",
        "isolation": "测试隔离：前端测试独立于后端可用性运行",
        "speed": "性能：无网络延迟，测试运行更快",
        "reliability": "可靠性：一致的响应消除了不稳定的测试",
        "development": "开发：在后端 API 准备就绪之前就可以开发前端功能",
        "cicd": "CI/CD：无需在测试环境中启动后端服务"
      },
      "installation": {
        "title": "安装和配置",
        "description": "MSW 已在 SysManage 前端中安装和配置。设置包括："
      },
      "implementation": {
        "title": "实现架构"
      },
      "handlers": {
        "title": "请求处理器",
        "description": "MSW 处理器在 /src/mocks/handlers.ts 中定义，提供全面的 API 覆盖："
      },
      "server": {
        "title": "测试服务器设置",
        "description": "MSW 服务器在 /src/mocks/node.ts 中为 Node.js 测试环境配置："
      },
      "integration": {
        "title": "测试集成",
        "description": "MSW 在 /src/setupTests.ts 中为所有测试自动配置，具有适当的生命周期管理："
      },
      "features": {
        "title": "关键功能",
        "dynamic": {
          "title": "动态路径处理",
          "description": "MSW 使用广泛的模式匹配和动态路径解析：",
          "wildcard": "通配符模式捕获所有 /api/* 请求",
          "parsing": "URL 解析提取特定端点路径",
          "fallback": "对不匹配端点的优雅回退"
        },
        "realistic": {
          "title": "逼真的响应模拟",
          "description": "MSW 提供全面的模拟数据，反映真实的 API 响应：",
          "hosts": "包含硬件详细信息的完整主机信息",
          "users": "用户身份验证和配置文件数据",
          "packages": "具有搜索功能的软件包数据",
          "operations": "包安装/卸载操作"
        },
        "ci": {
          "title": "CI/CD 集成",
          "description": "MSW 包含对持续集成环境的特殊处理："
        }
      },
      "usage": {
        "title": "在测试中使用",
        "automatic": {
          "title": "自动 API 模拟",
          "description": "大多数测试自动从 MSW 中受益，无需额外配置："
        },
        "custom": {
          "title": "自定义处理器覆盖",
          "description": "测试可以为自定义场景覆盖特定处理器："
        }
      },
      "compatibility": {
        "title": "React 19 兼容性",
        "description": "SysManage 在测试环境中包含对 React 19 的特殊兼容性修复："
      },
      "bestpractices": {
        "title": "最佳实践",
        "isolation": "测试隔离：MSW 在测试之间自动重置处理器",
        "realistic": "逼真数据：使用与生产 API 响应密切匹配的模拟数据",
        "coverage": "API 覆盖：确保组件使用的所有 API 端点都被模拟",
        "errors": "错误场景：测试成功和错误响应",
        "logging": "请求日志：使用 MSW 日志调试意外的 API 调用"
      },
      "debugging": {
        "title": "MSW 调试",
        "description": "如果测试因 API 问题失败，请检查：",
        "console": "控制台输出中的 MSW 请求日志",
        "unhandled": "关于未处理请求的警告",
        "handlers": "处理器模式与实际 API 调用匹配",
        "setup": "MSW 服务器在测试设置中正确启动"
      }
    },
    "title": "测试",
    "breadcrumb": "测试",
    "subtitle": "SysManage服务器的综合测试策略，包括单元测试、集成测试和使用Playwright的端到端测试。",
    "description": "SysManage的综合测试指南，包括单元测试、集成测试和使用Playwright的E2E测试。"
  },
  "common": {
    "overview": "概述",
    "features": "功能特性",
    "installation": "安装",
    "configuration": "配置",
    "troubleshooting": "故障排除",
    "security": "安全",
    "next": "下一页",
    "previous": "上一页",
    "back_to_top": "返回顶部",
    "read_more": "阅读更多",
    "learn_more": "了解更多",
    "download": "下载",
    "github": "GitHub",
    "documentation": "文档"
  },
  "administration": {
    "host_management": {
      "agent_deployment": "Agent Deployment",
      "agent_lifecycle_management": "Agent Lifecycle Management",
      "agent_troubleshooting": "Agent Troubleshooting",
      "agent_updates": "Agent Updates",
      "approval_criteria": "Approval Criteria",
      "approval_workflow": "Approval Workflow",
      "automation_integration": "Automation Integration",
      "available_bulk_operations": "Available Bulk Operations",
      "best_practices": "Host Management Best Practices",
      "bulk_operation_process": "Bulk Operation Process",
      "bulk_operations": "Bulk Operations",
      "cloud_integration": "Cloud Integration",
      "collected_information": "Collected Information",
      "common_issues": "常见问题",
      "common_tag_categories": "Common Tag Categories",
      "configuration_management": "Configuration Management",
      "creating_host_groups": "Creating Host Groups",
      "deployment_best_practices": "Deployment Best Practices",
      "deployment_methods": "Deployment Methods",
      "diagnostic_tools": "Diagnostic Tools",
      "dynamic_group_assignment": "Dynamic Group Assignment",
      "group_types": "Group Types",
      "hardware_inventory": "Hardware Inventory",
      "host_groups": "Host Groups",
      "host_organization": "Host Organization",
      "host_registration_approval": "Host Registration and Approval",
      "inventory_management": "Infrastructure Inventory Management",
      "inventory_reports": "Inventory Reports",
      "key_concepts": "Key Concepts",
      "mass_actions": "Mass Management Actions",
      "operational_practices": "Operational Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "overview": "概述",
      "registration_process": "Registration Process",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "security_practices": "Security Best Practices",
      "software_inventory": "Software Inventory",
      "software_reports": "Software Reports",
      "software_tracking": "Software Tracking",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "tag_management": "Tag Management",
      "tagging_metadata": "Tagging and Metadata",
      "title": "主机管理",
      "update_process": "Update Process",
      "update_strategy": "Update Strategy"
    },
    "monitoring": {
      "access_control": "Access Control",
      "agent_performance": "Agent Performance",
      "alert_configuration": "Alert Configuration",
      "alert_design": "Alert Design Best Practices",
      "alert_suppression": "Alert Suppression",
      "alert_types": "Alert Types",
      "alerting_system": "Alerting System",
      "api_integration": "API Integration",
      "application_dashboards": "Application Dashboards",
      "application_service_metrics": "Application and Service Metrics",
      "channel_configuration": "Channel Configuration",
      "collection_intervals": "Collection Intervals",
      "collection_optimization": "Collection Optimization",
      "core_system_checks": "Core System Checks",
      "cpu_metrics": "CPU Metrics",
      "custom_health_checks": "Custom Health Checks",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_customization": "Dashboard Customization",
      "dashboard_design": "Dashboard Design Best Practices",
      "dashboard_types": "Dashboard Types",
      "data_retention": "Data Retention Policies",
      "database_monitoring": "Database Monitoring",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "executive_dashboards": "Executive Dashboards",
      "health_checks": "Health Check Configuration",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "layout_options": "Layout Options",
      "memory_metrics": "Memory Metrics",
      "metrics_collection": "Metrics Collection",
      "monitoring_best_practices": "Monitoring Best Practices",
      "monitoring_capabilities": "Monitoring Capabilities",
      "network_metrics": "Network Metrics",
      "notification_channels": "Notification Channels",
      "operational_practices": "Operational Best Practices",
      "operations_dashboards": "Operations Dashboards",
      "overview": "概述",
      "performance_optimization": "Monitoring Performance Optimization",
      "retention_strategies": "Retention Strategies",
      "service_health_checks": "Service Health Checks",
      "service_monitoring": "Service Monitoring",
      "storage_metrics": "Storage Metrics",
      "storage_optimization": "Storage Optimization",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "supported_channels": "Supported Channels",
      "system_health": "System Health Checks",
      "system_performance_metrics": "System Performance Metrics",
      "threshold_configuration": "Threshold Configuration",
      "title": "监控和警报",
      "web_server_monitoring": "Web Server Monitoring",
      "widget_types": "Widget Types"
    },
    "subtitle": "Comprehensive system administration guides and procedures",
    "title": "Administration",
    "user_management": {
      "account_deactivation": "Account Deactivation",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deletion": "Account Deletion",
      "account_security": "Account Security",
      "active_session_monitoring": "Active Session Monitoring",
      "administrative_updates": "Administrative Updates",
      "administrator": "Administrator",
      "api_example": "API Example",
      "auditor": "Auditor",
      "authentication_methods": "Authentication Methods",
      "authentication_security": "Authentication Security",
      "built_in_roles": "Built-in Roles",
      "common_user_workflows": "Common User Management Workflows",
      "compliance_considerations": "Compliance Considerations",
      "creating_custom_roles": "Creating Custom Roles",
      "creating_user_accounts": "Creating User Accounts",
      "custom_roles": "Custom Roles",
      "employee_offboarding": "Employee Offboarding",
      "external_authentication": "External Authentication",
      "integration_issues": "Integration Issues",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "local_authentication": "Local Authentication",
      "login_problems": "Login Problems",
      "mfa_configuration": "MFA Configuration",
      "modifying_user_accounts": "Modifying User Accounts",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "new_employee_onboarding": "New Employee Onboarding",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "operator": "Operator",
      "overview": "概述",
      "password_policy_configuration": "Password Policy Configuration",
      "permission_issues": "Permission Issues",
      "permission_matrix": "Permission Matrix",
      "profile_updates": "Profile Updates",
      "role_change_process": "Role Change Process",
      "roles_permissions": "Roles and Permissions",
      "saml_integration": "SAML 2.0 Integration",
      "security_best_practices": "Security Best Practices",
      "security_incident_response": "Security Incident Response",
      "session_configuration": "Session Configuration",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "supported_mfa_methods": "Supported MFA Methods",
      "title": "用户管理",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "user_account_management": "User Account Management",
      "viewer": "Viewer",
      "web_interface": "Web Interface"
    }
  },
  "agent_docs": {
    "architecture": {
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "description": "The agent operates as a persistent service with the following workflow:",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity",
      "title": "Agent Architecture"
    },
    "configuration": {
      "auto_discovery": "Auto-discovery setup (recommended)",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "link": "Configuration Guide →",
      "logging": "Logging and internationalization",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "title": "⚙️ Configuration"
    },
    "cross_platform": {
      "bsd": "BSD-specific considerations",
      "description": "Platform-specific features, package managers, and system integration details.",
      "link": "Cross-Platform Guide →",
      "linux": "Linux distributions and package managers",
      "macos": "macOS launchd configuration",
      "title": "🌍 Cross-Platform Support",
      "windows": "Windows service integration"
    },
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms.",
      "title": "Agent Documentation"
    },
    "installation": {
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "link": "Installation Guide →",
      "methods": "Installation methods (source, packages)",
      "prerequisites": "Prerequisites and system requirements",
      "service": "Service configuration",
      "title": "🚀 Installation",
      "venv": "Virtual environment setup"
    },
    "navigation": {
      "api": "API Reference →",
      "server": "← Server Documentation",
      "title": "Quick Navigation"
    },
    "overview": {
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "features_title": "Key Features",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "platform_freebsd": "🔒 FreeBSD",
      "platform_linux": "🐧 Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_macos": "🍎 macOS (Intel and Apple Silicon)",
      "platform_openbsd": "🛡️ OpenBSD",
      "platform_windows": "🪟 Windows (10, 11, Server 2019/2022)",
      "platforms_title": "Supported Platforms",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "title": "概述"
    },
    "privileged": {
      "cross_platform": "Cross-platform privileged execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "link": "Privileged Execution →",
      "scripts": "Automated privilege scripts",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "title": "🔐 Privileged Execution"
    },
    "section_title": "Agent",
    "security": {
      "certificates": "Certificate management",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) authentication",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "title": "🔒 Security"
    },
    "title": "Agent Documentation - SysManage",
    "troubleshooting": {
      "connection": "Connection and network issues",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "link": "Troubleshooting Guide →",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "title": "🔧 Troubleshooting"
    }
  },
  "api": {
    "authentication": {
      "authentication_flow": "Authentication Flow",
      "error_responses": "Error Responses",
      "example": "Example",
      "login": "Login",
      "overview": "概述",
      "password_reset": "Password Reset",
      "path_parameters": "Path Parameters",
      "refresh_token": "Refresh Token",
      "request_body": "Request Body",
      "reset_password": "Reset Password",
      "response": "Response",
      "security_best_practices": "Security Best Practices",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "title": "Authentication API",
      "token_expiration": "Token Expiration",
      "using_auth_tokens": "Using Authentication Tokens",
      "validate_reset_token": "Validate Reset Token"
    },
    "hosts": {
      "authentication_required": "Authentication Required",
      "bulk_operations": "Bulk Operations",
      "fleet_management": "Fleet Management",
      "hardware_system_info": "Hardware and System Information",
      "host_operations": "Host Operations",
      "important_notes": "Important Notes",
      "overview": "概述",
      "software_package_info": "Software and Package Information",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "title": "Host Management API"
    },
    "packages": {
      "important_notes": "Important Notes",
      "os_upgrades": "OS Upgrades",
      "overview": "概述",
      "package_cache_management": "Package Cache Management",
      "package_discovery": "Package Discovery",
      "package_installation": "Package Installation",
      "package_search": "Package Search",
      "package_updates": "Package Updates",
      "query_parameters": "Query Parameters",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "title": "Package Management API"
    },
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "title": "API 参考"
  },
  "api_docs": {
    "description": "Complete REST API documentation for integrating with SysManage.",
    "header": {
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically.",
      "title": "API 参考"
    },
    "overview": {
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features",
      "title": "概述"
    },
    "section_title": "API 参考",
    "title": "API Reference - SysManage"
  },
  "security": {
    "authentication": {
      "admin": "Admin",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "auditor": "Auditor",
      "auth_architecture": "Authentication Architecture",
      "authentication_events": "Authentication Events",
      "automatic_rotation": "Automatic Rotation",
      "common_issues": "常见问题",
      "default_password_policy": "Default Password Policy",
      "default_roles": "Default Roles",
      "diagnostic_commands": "Diagnostic Commands",
      "email_otp": "Email OTP",
      "external_auth_integration": "External Auth Integration",
      "external_auth_providers": "External Authentication Providers",
      "integration_examples": "Integration Examples",
      "jwt_authentication": "JWT Authentication",
      "jwt_configuration": "JWT Configuration",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "mfa_configuration": "MFA Configuration",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_implementation": "MFA Implementation",
      "mfa_setup_problems": "MFA Setup Problems",
      "monitored_events": "Monitored Events",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "next_steps": "Next Steps",
      "operator": "Operator",
      "overview": "Authentication Overview",
      "password_policies": "Password Policies",
      "password_policy_configuration": "Password Policy Configuration",
      "password_requirements": "Password Requirements",
      "permission_examples": "Permission Examples",
      "permission_system": "Permission System",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "rbac_implementation": "RBAC Implementation",
      "rbac_permission_errors": "RBAC Permission Errors",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "recovery_codes": "Recovery Codes",
      "saml_integration": "SAML 2.0 Integration",
      "security_events": "Security Events",
      "security_monitoring": "Authentication Security Monitoring",
      "session_architecture": "Session Architecture",
      "session_configuration": "Session Configuration",
      "session_features": "Session Features",
      "session_management": "Session Management",
      "session_monitoring": "Session Monitoring",
      "session_security": "Session Security",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "supported_mfa_methods": "Supported MFA Methods",
      "suspicious_activities": "Suspicious Activities",
      "title": "Authentication & Authorization",
      "token_based_sessions": "Token-Based Sessions",
      "token_blacklisting": "Token Blacklisting",
      "token_expired_errors": "Token Expired Errors",
      "token_generation_process": "Token Generation Process",
      "token_rotation_security": "Token Rotation & Security",
      "token_validation_flow": "Token Validation Flow",
      "totp": "TOTP (Time-based OTP)",
      "troubleshooting": "Troubleshooting Authentication",
      "viewer": "Viewer"
    },
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "title": "Security Documentation"
  },
  "security_docs": {
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "header": {
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments.",
      "title": "Security Documentation"
    },
    "section_title": "安全",
    "title": "Security Documentation - SysManage",
    "database_security": {
      "title": "🗄️ 数据库安全",
      "description": "基于UUID的主键和安全数据库设计模式以增强安全性。",
      "uuid_keys": "基于UUID的主键防止ID枚举攻击",
      "replay_protection": "非顺序标识符防止重放攻击",
      "information_leakage": "消除可预测的资源URL模式",
      "privacy_enhanced": "通过不可关联的标识符增强隐私",
      "gdpr_compliance": "支持GDPR合规性进行数据匿名化",
      "secure_installation": "具有唯一令牌的安全安装脚本",
      "link": "数据库安全 →"
    }
  },
  "multi_os_cicd": {
    "page_title": "多操作系统 CI/CD 流水线 - SysManage 文档",
    "breadcrumb": "多操作系统 CI/CD",
    "main_title": "企业级多操作系统 CI/CD 流水线",
    "intro": "SysManage 实现了<strong>革命性的零成本多操作系统 CI/CD 流水线</strong>，使用 GitHub Actions 在 Linux、macOS 和 Windows 平台上提供企业级测试和部署能力，无需基础设施成本。",
    "key_benefits_title": "🚀 关键企业优势",
    "benefit_1": "<strong>零基础设施成本：</strong>使用 GitHub 免费运行器的完整 CI/CD 流水线",
    "benefit_2": "<strong>多平台卓越性：</strong>在 3 个主要操作系统上同时测试",
    "benefit_3": "<strong>快速失败架构：</strong>立即故障检测节省计算资源",
    "benefit_4": "<strong>企业级可靠性：</strong>具有全面验证的生产级测试",
    "tabs": {
      "overview": "概述",
      "github_actions": "GitHub Actions",
      "matrix_testing": "矩阵测试",
      "platform_specific": "平台特定",
      "best_practices": "最佳实践"
    },
    "overview": {
      "title": "CI/CD 流水线架构",
      "description": "SysManage 的 CI/CD 流水线代表了<strong>成本效益企业部署的范式转变</strong>，利用 GitHub Actions 的矩阵策略提供全面的多操作系统测试，无需专用基础设施投资。",
      "pipeline_title": "🏗️ 流水线组件",
      "backend_title": "🔧 后端测试",
      "backend_desc": "使用 pytest、数据库集成和安全验证的全面 Python 测试套件",
      "backend_feature_1": "1,432+ 单元和集成测试",
      "backend_feature_2": "真实 PostgreSQL 数据库测试",
      "backend_feature_3": "安全扫描和验证",
      "backend_feature_4": "代码覆盖率分析（66%+）",
      "frontend_title": "🌐 前端测试",
      "frontend_desc": "使用 Vitest、Mock Service Worker 和组件验证的 TypeScript/React 测试",
      "frontend_feature_1": "63+ TypeScript 单元测试",
      "frontend_feature_2": "Mock Service Worker 集成",
      "frontend_feature_3": "组件渲染验证",
      "frontend_feature_4": "代码覆盖率跟踪",
      "ui_title": "🎭 UI 测试",
      "ui_desc": "使用 Playwright 和 Selenium 后备的跨平台 UI 测试，提供全面的浏览器覆盖",
      "ui_feature_1": "现代浏览器的 Playwright",
      "ui_feature_2": "BSD 系统的 Selenium 后备",
      "ui_feature_3": "真实数据库集成",
      "ui_feature_4": "跨浏览器兼容性",
      "execution_title": "⚡ 流水线执行策略",
      "workflow_title": "🔄 工作流编排"
    },
    "github_actions": {
      "title": "GitHub Actions 实现",
      "description": "SysManage 利用<strong>GitHub Actions 矩阵策略</strong>以零基础设施成本提供企业级 CI/CD 能力，提供通常与昂贵的专用 CI/CD 平台相关的可靠性和可扩展性。",
      "workflow_title": "📋 工作流配置",
      "triggers_title": "🚀 自动触发器",
      "triggers_desc": "流水线在代码更改时自动执行",
      "push_main": "推送到主分支",
      "pull_requests": "所有拉取请求",
      "schedule": "计划维护运行",
      "manual": "手动工作流分发",
      "matrix_title": "🎯 矩阵策略实现",
      "matrix_desc": "在多个环境中并行执行",
      "os_ubuntu": "ubuntu-latest（主要 Linux）",
      "os_macos": "macos-latest（Apple Silicon）",
      "os_windows": "windows-latest（Windows Server）",
      "python_versions": "支持 Python 3.11 和 3.12",
      "optimization_title": "⚡ 性能优化",
      "optimization_desc": "高级流水线优化技术",
      "fail_fast": "快速失败策略在首次失败时停止执行",
      "caching": "跨运行的智能依赖缓存",
      "parallel": "并行作业执行最大化吞吐量",
      "resource": "资源高效执行最小化成本"
    },
    "matrix_testing": {
      "title": "多操作系统矩阵测试策略",
      "description": "SysManage 的矩阵测试策略提供<strong>全面的跨平台验证</strong>，确保在所有支持的操作系统上的一致行为，同时保持零基础设施成本。",
      "strategy_title": "🎯 测试策略",
      "comprehensive_title": "📊 全面平台覆盖",
      "comprehensive_desc": "每个提交在所有目标平台上测试",
      "linux_testing": "Linux：具有完整依赖堆栈的 Ubuntu LTS",
      "macos_testing": "macOS：原生 Apple Silicon 执行环境",
      "windows_testing": "Windows：使用 PowerShell 自动化的 Server 2022",
      "bsd_simulation": "BSD：通过 Docker 容器模拟测试",
      "validation_title": "✅ 验证级别",
      "validation_desc": "多层验证确保生产就绪性",
      "unit_tests": "单元测试：组件级功能验证",
      "integration_tests": "集成测试：跨组件交互验证",
      "ui_tests": "UI 测试：用户界面和工作流验证",
      "security_tests": "安全测试：漏洞扫描和合规性",
      "intelligent_title": "🧠 智能测试执行",
      "intelligent_desc": "智能测试执行适应平台能力",
      "platform_detection": "自动平台能力检测",
      "framework_selection": "每个平台的最佳测试框架选择",
      "graceful_degradation": "不支持功能的优雅降级",
      "comprehensive_reporting": "所有平台的全面报告"
    },
    "platform_specific": {
      "title": "平台特定测试功能",
      "description": "SysManage 实现<strong>平台感知测试策略</strong>，利用每个操作系统的独特能力，同时在所有平台上保持一致的验证标准。",
      "linux_title": "🐧 Linux（Ubuntu）测试",
      "linux_desc": "具有全面工具的主要开发和测试平台",
      "linux_full_stack": "使用 PostgreSQL 的全栈测试",
      "linux_docker": "Docker 容器测试和验证",
      "linux_packaging": "包管理测试（apt/dpkg）",
      "linux_systemd": "systemd 服务集成测试",
      "macos_title": "🍎 macOS 测试",
      "macos_desc": "具有平台特定功能的原生 Apple Silicon 测试",
      "macos_webkit": "WebKit/Safari 浏览器测试",
      "macos_homebrew": "Homebrew 包管理测试",
      "macos_launchd": "launchd 服务集成测试",
      "macos_security": "macOS 安全功能验证",
      "windows_title": "🪟 Windows 测试",
      "windows_desc": "使用 PowerShell 自动化的 Windows Server 环境",
      "windows_powershell": "PowerShell 脚本测试和验证",
      "windows_iis": "IIS Web 服务器集成测试",
      "windows_services": "Windows 服务管理测试",
      "windows_security": "Windows 安全功能验证",
      "cross_platform_title": "🌍 跨平台一致性",
      "cross_platform_desc": "确保所有平台上的一致行为",
      "api_consistency": "API 行为一致性验证",
      "config_portability": "配置文件可移植性测试",
      "database_compatibility": "跨平台数据库驱动程序兼容性",
      "network_behavior": "网络通信一致性验证"
    },
    "best_practices": {
      "title": "企业 CI/CD 最佳实践",
      "description": "SysManage 的 CI/CD 流水线实现<strong>行业领先的最佳实践</strong>，提供通常在昂贵的商业 CI/CD 平台中发现的企业级可靠性和效率。",
      "cost_title": "💰 零成本企业优势",
      "cost_desc": "在不投资基础设施的情况下提供高级 CI/CD 能力",
      "github_runners": "GitHub 托管的运行器消除服务器成本",
      "matrix_efficiency": "矩阵策略最大化每美元的测试覆盖率",
      "intelligent_caching": "智能缓存减少执行时间和成本",
      "resource_optimization": "资源优化最小化计算使用",
      "security_title": "🔒 安全和合规性",
      "security_desc": "整个流水线集成的企业级安全",
      "secret_management": "使用 GitHub Secrets 的安全密钥管理",
      "vulnerability_scanning": "每个构建中的自动漏洞扫描",
      "dependency_checking": "依赖安全验证",
      "compliance_reporting": "合规报告和审计跟踪",
      "reliability_title": "🛡️ 可靠性和监控",
      "reliability_desc": "具有全面监控的生产级可靠性",
      "health_checks": "自动健康检查和服务验证",
      "failure_detection": "立即故障检测和通知",
      "retry_logic": "瞬态故障的智能重试逻辑",
      "performance_monitoring": "性能监控和优化",
      "enterprise_title": "🏢 企业集成",
      "enterprise_desc": "与企业开发工作流的无缝集成",
      "branch_protection": "分支保护规则强制质量门",
      "required_checks": "必需的状态检查防止破坏的部署",
      "automated_deployment": "自动部署到暂存环境",
      "rollback_capability": "失败部署的自动回滚能力",
      "value_title": "💎 企业价值主张",
      "value_desc": "SysManage 的 CI/CD 流水线通过减少部署风险、更快的上市时间、改进的代码质量和零基础设施开销提供<strong>可衡量的企业价值</strong> - 通常为组织节省数千美元的 CI/CD 平台成本，同时提供卓越的可靠性和性能。",
      "cost_savings": "$0/月",
      "cost_savings_label": "基础设施成本",
      "reliability_metric": "99.9%",
      "reliability_label": "流水线可靠性",
      "coverage_metric": "100%",
      "coverage_label": "平台覆盖率"
    }
  },
  "performance_testing": {
    "page_title": "使用 Artillery 进行性能测试 - SysManage 文档",
    "breadcrumb": "性能测试",
    "main_title": "使用 Artillery 进行企业级性能测试",
    "intro": "SysManage 实现了<strong>全面的性能测试框架</strong>，使用 Artillery 进行后端 API 负载测试，结合 Playwright 进行前端性能监控。这种企业级方法确保在所有部署环境和规模下的最佳系统性能。",
    "key_benefits_title": "🚀 关键企业优势",
    "benefit_1": "<strong>生产就绪负载测试：</strong>全面的 API 性能验证",
    "benefit_2": "<strong>多平台测试：</strong>在 Linux、macOS 和 Windows 上验证",
    "benefit_3": "<strong>自动回归检测：</strong>CI/CD 中的持续性能监控",
    "benefit_4": "<strong>企业可扩展性：</strong>性能预算和 SLA 验证",
    "tabs": {
      "overview": "概述",
      "artillery": "Artillery 后端",
      "playwright": "Playwright 前端",
      "ci_integration": "CI/CD 集成",
      "enterprise": "企业功能"
    },
    "overview": {
      "title": "性能测试架构",
      "description": "SysManage 的性能测试框架提供<strong>双层性能验证</strong>，涵盖后端 API 性能和前端用户体验指标。这种全面的方法确保整个应用程序堆栈的最佳性能。",
      "framework_title": "📊 测试框架组件",
      "backend_title": "🔧 后端 API 测试",
      "backend_desc": "基于 Artillery 的负载测试，具有真实的用户场景、身份验证流程和 API 端点验证",
      "backend_feature_1": "多阶段负载测试（预热、正常、峰值）",
      "backend_feature_2": "WebSocket 连接测试",
      "backend_feature_3": "身份验证流程验证",
      "backend_feature_4": "性能预算执行",
      "frontend_title": "🌐 前端性能测试",
      "frontend_desc": "基于 Playwright 的核心 Web 指标监控和用户体验性能验证",
      "frontend_feature_1": "首次内容绘制（FCP）监控",
      "frontend_feature_2": "DOM 内容加载（DCL）时序",
      "frontend_feature_3": "网络性能分析",
      "frontend_feature_4": "内存使用跟踪",
      "execution_title": "⚡ 性能测试执行",
      "requirements_title": "📋 先决条件",
      "requirements_desc": "在执行性能测试之前，确保 SysManage 服务器在 <code>localhost:8001</code> 上运行。测试框架针对实时实例进行验证，以获得真实的性能指标。"
    },
    "artillery": {
      "title": "Artillery 后端负载测试",
      "description": "Artillery 为 SysManage 的后端 API 提供<strong>企业级负载测试</strong>，模拟真实的用户负载并在各种流量模式下验证系统性能。",
      "scenarios_title": "🎯 负载测试场景",
      "health_title": "健康检查监控",
      "health_desc": "持续健康端点验证（30% 流量）",
      "auth_title": "身份验证流程测试",
      "auth_desc": "JWT 身份验证性能验证（40% 流量）",
      "api_title": "主机管理 API",
      "api_desc": "核心 API 端点性能测试（20% 流量）",
      "websocket_title": "WebSocket 连接测试",
      "websocket_desc": "实时通信性能验证（10% 流量）",
      "phases_title": "📈 负载测试阶段",
      "warmup_title": "🔥 预热阶段",
      "warmup_desc": "10 秒，每秒 2 个请求 - 系统初始化",
      "normal_title": "⚡ 正常负载",
      "normal_desc": "30 秒，每秒 5 个请求 - 典型生产负载",
      "peak_title": "🚀 峰值负载",
      "peak_desc": "20 秒，每秒 10 个请求 - 高流量模拟",
      "budgets_title": "💎 性能预算",
      "response_title": "⚡ 响应时间",
      "response_p95": "95百分位：< 500ms",
      "response_p99": "99百分位：< 1000ms",
      "error_title": "🛡️ 错误率",
      "error_rate": "最大值：< 1%",
      "throughput_title": "📊 吞吐量",
      "throughput_rate": "最小值：8 RPS"
    },
    "playwright": {
      "title": "Playwright 前端性能测试",
      "description": "Playwright 提供<strong>全面的前端性能监控</strong>，专注于对企业应用程序至关重要的核心 Web 指标和用户体验指标。",
      "metrics_title": "📊 核心 Web 指标监控",
      "fcp_title": "🎨 首次内容绘制（FCP）",
      "fcp_desc": "测量第一个内容元素何时变为可见",
      "fcp_target": "目标：< 2000ms",
      "dcl_title": "📄 DOM 内容加载（DCL）",
      "dcl_desc": "初始 HTML 文档加载和解析的时间",
      "dcl_target": "目标：< 1500ms",
      "load_title": "🌐 页面加载时间",
      "load_desc": "包括所有资源的完整页面加载",
      "load_target": "目标：< 5000ms",
      "memory_title": "💾 内存使用",
      "memory_desc": "JavaScript 堆内存消耗监控",
      "memory_target": "跟踪：JS 堆大小",
      "tests_title": "🧪 性能测试场景",
      "login_page_title": "🔐 登录页面性能",
      "login_page_desc": "全面的页面加载性能和核心 Web 指标验证",
      "login_flow_title": "🚀 登录流程性能",
      "login_flow_desc": "表单交互和身份验证响应时间验证",
      "network_title": "🌐 网络性能分析",
      "network_desc": "资源加载优化和网络请求监控",
      "cross_browser_title": "🌍 跨浏览器性能验证",
      "chromium_title": "🟦 Chromium/Chrome",
      "chromium_desc": "具有完整性能 API 支持的主要测试平台",
      "firefox_title": "🟧 Firefox",
      "firefox_desc": "跨浏览器性能验证和兼容性测试",
      "webkit_title": "🟪 WebKit（macOS）",
      "webkit_desc": "macOS 环境中的 Safari 性能测试"
    },
    "ci": {
      "title": "CI/CD 性能集成",
      "description": "SysManage 的性能测试框架与<strong>GitHub Actions CI/CD 流水线</strong>无缝集成，在多个操作系统上的每次代码更改时提供自动性能验证。",
      "workflow_title": "🔄 自动性能工作流",
      "trigger_title": "🚀 触发事件",
      "trigger_desc": "性能测试在每次推送到主分支和拉取请求时执行",
      "matrix_title": "🎯 矩阵执行",
      "matrix_desc": "在 Ubuntu、macOS 和 Windows 环境中并行测试",
      "validation_title": "✅ 性能验证",
      "validation_desc": "自动性能预算执行和回归检测",
      "reporting_title": "📊 结果报告",
      "reporting_desc": "性能指标导出用于趋势分析和监控",
      "platform_title": "🌐 多平台性能测试",
      "ubuntu_title": "🐧 Ubuntu Linux",
      "ubuntu_artillery": "Artillery 后端负载测试",
      "ubuntu_playwright": "Playwright UI 性能（Chrome、Firefox）",
      "ubuntu_docker": "Docker 容器性能验证",
      "macos_title": "🍎 macOS",
      "macos_webkit": "WebKit/Safari 性能测试",
      "macos_native": "原生 macOS 应用程序性能",
      "macos_artillery": "Artillery 跨平台验证",
      "windows_title": "🪟 Windows",
      "windows_edge": "Edge 浏览器性能测试",
      "windows_powershell": "PowerShell 环境验证",
      "windows_artillery": "Windows 特定的 Artillery 测试",
      "regression_title": "📈 性能回归检测",
      "baseline_title": "📊 基线比较",
      "baseline_desc": "具有可配置容差带的历史性能数据比较",
      "alerts_title": "🚨 自动警报",
      "alerts_desc": "超出性能预算时立即通知",
      "trends_title": "📈 趋势分析",
      "trends_desc": "长期性能趋势监控和容量规划"
    },
    "enterprise": {
      "title": "企业性能功能",
      "description": "SysManage 的性能测试框架提供<strong>企业级能力</strong>，专为关键任务生产环境设计，确保大规模的最佳性能。",
      "scalability_title": "⚡ 企业可扩展性测试",
      "load_title": "🚀 生产负载模拟",
      "load_realistic": "真实的用户行为模式",
      "load_concurrent": "高达 1000+ 用户的并发用户模拟",
      "load_scenarios": "多流量场景建模",
      "load_authentication": "身份验证流程压力测试",
      "monitoring_title": "📊 高级性能监控",
      "monitoring_realtime": "实时性能指标收集",
      "monitoring_vitals": "核心 Web 指标合规验证",
      "monitoring_memory": "内存泄漏检测和分析",
      "monitoring_network": "网络性能优化洞察",
      "compliance_title": "🛡️ SLA 合规验证",
      "compliance_budgets": "可配置的性能预算",
      "compliance_sla": "SLA 响应时间验证",
      "compliance_availability": "高可用性测试场景",
      "compliance_reporting": "企业级报告和分析",
      "deployment_title": "🌍 多环境部署测试",
      "cloud_title": "☁️ 云基础设施测试",
      "cloud_desc": "在 AWS、Azure、GCP 和混合云环境中进行全面测试",
      "cloud_autoscaling": "自动扩展验证",
      "cloud_latency": "跨区域延迟测试",
      "cloud_containers": "容器性能优化",
      "onprem_title": "🏢 企业本地测试",
      "onprem_desc": "为企业数据中心部署的专用测试",
      "onprem_hardware": "硬件特定优化",
      "onprem_security": "安全合规验证",
      "onprem_integration": "遗留系统集成测试",
      "hybrid_title": "🔄 混合架构测试",
      "hybrid_desc": "复杂混合云和多云部署验证",
      "hybrid_connectivity": "跨云连接测试",
      "hybrid_failover": "灾难恢复验证",
      "hybrid_sync": "数据同步性能",
      "analytics_title": "📈 企业分析和报告",
      "dashboards_title": "📊 执行仪表板",
      "dashboards_desc": "实时性能 KPI 和执行级报告，用于明智决策",
      "capacity_title": "📈 容量规划",
      "capacity_desc": "基础设施扩展和资源优化的预测分析",
      "cost_title": "💰 成本优化",
      "cost_desc": "基于性能的成本分析和基础设施效率建议",
      "compliance_analytics_title": "🔒 合规报告",
      "compliance_analytics_desc": "企业治理的自动合规验证和审计跟踪生成",
      "value_title": "💎 企业价值主张",
      "value_desc": "SysManage 的性能测试框架通过减少停机时间、优化的基础设施成本、改善的用户满意度和随组织增长而扩展的企业级可靠性提供<strong>可衡量的投资回报率</strong>。",
      "uptime_value": "99.9%",
      "uptime_label": "正常运行时间可靠性",
      "response_value": "<500ms",
      "response_label": "平均响应时间",
      "cost_value": "30%",
      "cost_label": "基础设施成本降低"
    }
  }
}