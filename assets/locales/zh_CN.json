{
  "site": {
    "description": "用于全面基础设施监控和自动化的现代系统管理平台",
    "title": "SysManage - 现代系统管理平台"
  },
  "nav": {
    "config_builder": "配置构建器",
    "documentation": "文档",
    "features": "功能特性",
    "getting_started": "快速开始",
    "github": "GitHub",
    "github_agent": "代理 GitHub",
    "github_server": "服务器 GitHub"
  },
  "hero": {
    "get_started": "快速开始",
    "subtitle": "为您的整个基础设施提供集中监控、管理和自动化。支持 Linux、Windows、macOS、FreeBSD、OpenBSD 和 NetBSD。",
    "title": "现代系统管理变得简单",
    "view_agent_github": "代理 GitHub",
    "view_github": "在 GitHub 上查看",
    "view_server_github": "服务器 GitHub"
  },
  "features": {
    "cross_platform": {
      "description": "从单一界面管理 Linux、Windows、macOS、FreeBSD、OpenBSD 和 NetBSD 系统。",
      "title": "跨平台支持"
    },
    "modern_ui": {
      "description": "基于 React 的响应式界面，具有实时仪表板和全面报告功能。",
      "title": "现代 Web 界面"
    },
    "multilingual": {
      "description": "原生支持 14 种语言，包括英语、西班牙语、法语、德语等。",
      "title": "多语言支持"
    },
    "osVersionUpgrades": {
      "bsdSupport": {
        "description": "OpenBSD系统升级和FreeBSD版本升级",
        "title": "BSD支持"
      },
      "majorVersionDetection": {
        "description": "自动检测可用的操作系统主要版本升级",
        "title": "主要版本检测"
      },
      "multiPlatformSupport": {
        "description": "Ubuntu LTS升级、Fedora版本升级、macOS更新、Windows功能更新",
        "title": "多平台支持"
      },
      "opensuseIntegration": {
        "description": "发行版升级检测和管理",
        "title": "OpenSUSE集成"
      },
      "rebootManagement": {
        "description": "需要系统重启的操作系统升级的自动重启调度",
        "title": "重启管理"
      },
      "safetyFeatures": {
        "description": "试运行功能和部署前的升级验证",
        "title": "安全功能"
      },
      "title": "⬆️ 操作系统版本升级"
    },
    "package_management": {
      "description": "在所有支持的平台上进行远程软件安装、更新和管理。",
      "title": "包管理"
    },
    "real_time": {
      "description": "基于 WebSocket 的实时通信，提供即时系统更新和监控。",
      "title": "实时监控"
    },
    "security": {
      "description": "JWT 身份验证、mTLS、基于角色的访问控制和全面的安全扫描。",
      "title": "企业级安全"
    },
    "title": "核心功能"
  },
  "quick_start": {
    "step1": {
      "description": "在您的基础设施上部署 SysManage 服务器",
      "link": "服务器安装指南 →",
      "title": "安装服务器"
    },
    "step2": {
      "description": "在您要管理的系统上安装代理",
      "link": "代理安装指南 →",
      "title": "部署代理"
    },
    "step3": {
      "description": "访问 Web 界面并批准您的代理",
      "link": "入门指南 →",
      "title": "开始管理"
    },
    "title": "快速开始"
  },
  "secrets_management": {
    "architecture": {
      "description": "SysManage 和 OpenBAO 之间的集成创造了一个堡垒式的安全架构，保护您最敏感的数据。",
      "diagram_title": "🔄 安全数据流",
      "principle1": "<strong>零信任</strong>：每个访问请求都经过身份验证和授权",
      "principle2": "<strong>无处不在的加密</strong>：数据在静态、传输和内存中都被加密",
      "principle3": "<strong>最小暴露</strong>：密钥仅在需要时才解密",
      "principle4": "<strong>全面审计</strong>：每个操作都被记录和可追踪",
      "principle5": "<strong>最小权限原则</strong>：仅在需要时授予访问权限",
      "principles_title": "🛡️ 安全原则",
      "step1_description": "密钥被加密并存储在 OpenBAO 保险库中，带有元数据跟踪",
      "step1_title": "安全存储",
      "step2_description": "SysManage 使用基于令牌的安全认证与 OpenBAO 进行身份验证",
      "step2_title": "认证",
      "step3_description": "按需检索密钥，具有完整的审计日志记录",
      "step3_title": "安全检索",
      "step4_description": "通过加密的 WebSocket 通道将密钥传输到代理",
      "step4_title": "加密部署",
      "title": "🏗️ 安全架构"
    },
    "benefits": {
      "automation_description": "证书和 SSH 密钥部署的完全自动化消除了人为错误，减少了运营开销。",
      "automation_title": "🤖 零接触自动化",
      "compliance_description": "开箱即用满足 SOC 2、GDPR、HIPAA 和其他监管要求，具有全面的审计跟踪和加密。",
      "compliance_title": "✅ 合规就绪",
      "description": "SysManage 的 OpenBAO 集成提供的安全功能使其在所有其他系统管理平台中脱颖而出：",
      "enterprise_description": "当其他平台将安全视为后续考虑时，SysManage 从一开始就建立在 OpenBAO 企业级验证基础上。",
      "enterprise_title": "🏢 从第一天起就为企业做好准备",
      "integration_description": "原生 OpenBAO 集成意味着没有复杂的配置或第三方依赖 - 它就是能工作。",
      "integration_title": "🔗 无缝集成",
      "monitoring_description": "实时监控密钥部署，在所有基础设施中提供全面的日志记录和状态跟踪。",
      "monitoring_title": "📊 实时可见性",
      "scalability_description": "从单一服务器到大规模多云部署，架构扩展时不会影响安全性或性能。",
      "scalability_title": "📈 无限扩展",
      "title": "🏆 竞争优势"
    },
    "breadcrumb": "密钥管理",
    "card": {
      "description": "由 OpenBAO 保险库驱动的革命性密钥管理 - SysManage 安全架构的皇冠明珠。",
      "feature1": "企业级 OpenBAO 保险库集成",
      "feature2": "自动化 SSL/TLS 证书部署",
      "feature3": "集中式 SSH 密钥管理和部署",
      "feature4": "具有全面审计跟踪的零信任架构",
      "feature5": "所有敏感数据的军用级加密",
      "link": "密钥管理 →",
      "title": "🔒 OpenBAO 企业级密钥管理"
    },
    "deployment": {
      "cert_step1_description": "通过 SysManage Web 界面上传证书，自动存储在 OpenBAO 保险库中",
      "cert_step1_title": "上传与存储",
      "cert_step2_description": "通过直观的 Web 界面选择目标主机和部署路径",
      "cert_step2_title": "选择目标",
      "cert_step3_description": "通过加密的 WebSocket 连接安全传输证书到代理",
      "cert_step3_title": "安全传输",
      "cert_step4_description": "代理以适当权限部署证书并验证安装成功",
      "cert_step4_title": "部署与验证",
      "certificate_title": "📜 证书部署流程",
      "ssh_step1_description": "在 OpenBAO 中存储 SSH 公钥，带有元数据和访问控制",
      "ssh_step1_title": "密钥管理",
      "ssh_step2_description": "以细粒度权限将密钥分配给特定用户和主机",
      "ssh_step2_title": "用户分配",
      "ssh_step3_description": "密钥自动添加到 authorized_keys 文件，格式正确",
      "ssh_step3_title": "自动化部署",
      "ssh_step4_description": "验证 SSH 访问工作正常，并维护所有密钥操作的审计跟踪",
      "ssh_step4_title": "访问验证",
      "ssh_title": "🔑 SSH 密钥部署流程",
      "title": "🚀 部署工作流"
    },
    "description": "使用 OpenBAO 保险库进行企业级密钥管理，在 SysManage 中实现安全证书部署、SSH 密钥和凭据管理。",
    "features": {
      "certificates_description": "在整个基础设施中部署 SSL/TLS 证书，实现零停机。OpenBAO 安全存储证书和私钥，而 SysManage 处理到目标主机的自动化部署。",
      "certificates_feature1": "具有静态加密的安全证书存储",
      "certificates_feature2": "同时自动部署到多个主机",
      "certificates_feature3": "实时部署监控和状态跟踪",
      "certificates_feature4": "所有证书操作的全面审计跟踪",
      "certificates_title": "📜 自动化证书部署",
      "credentials_description": "使用军用级加密存储和管理敏感凭据，使手动凭据管理成为过去。",
      "credentials_feature1": "所有存储密钥的 AES-256 加密",
      "credentials_feature2": "细粒度访问控制和权限",
      "credentials_feature3": "密钥版本控制和回滚功能",
      "credentials_feature4": "与外部认证系统的集成",
      "credentials_title": "🛡️ 凭据保险库",
      "ssh_description": "通过集中式密钥存储、自动化部署和轮换功能彻底改变 SSH 访问管理，消除手动密钥分发。",
      "ssh_feature1": "集中式 SSH 密钥存储和管理",
      "ssh_feature2": "自动将密钥部署到 authorized_keys 文件",
      "ssh_feature3": "支持 ed25519、RSA 和 ECDSA 密钥类型",
      "ssh_feature4": "密钥轮换和生命周期管理",
      "ssh_title": "🔑 SSH 密钥管理",
      "title": "⭐ SysManage 中的革命性功能"
    },
    "getting_started": {
      "description": "准备体验企业级密钥管理？集成的 OpenBAO 设置让入门变得轻松：",
      "link1": "完整入门指南",
      "link2": "安全最佳实践",
      "link3": "管理指南",
      "link4": "API 文档",
      "next_title": "📚 下一步",
      "step1_description": "<code>sysmanage_secure_installation</code> 脚本自动配置 OpenBAO 生产模式和安全默认值。",
      "step1_title": "1. 自动化设置",
      "step2_description": "使用 Web 界面安全上传证书、SSH 密钥和其他敏感数据。",
      "step2_title": "2. 上传密钥",
      "step3_description": "选择目标并部署，具有实时监控和全面审计跟踪。",
      "step3_title": "3. 自信部署",
      "title": "🚀 快速开始"
    },
    "header": {
      "subtitle": "由 OpenBAO 保险库驱动的革命性密钥管理 - 为基础设施安全树立黄金标准。",
      "title": "🔒 OpenBAO 企业级密钥管理"
    },
    "openbao": {
      "benefit1_description": "每个密钥都在静态和传输中加密，具有细粒度访问控制和全面审计日志。",
      "benefit1_title": "🔐 零信任安全",
      "benefit2_description": "闪电般快速的密钥检索和存储，对您的操作的延迟影响最小。",
      "benefit2_title": "🏃‍♂️ 高性能",
      "benefit3_description": "从单一安装到大规模多区域部署的无缝扩展。",
      "benefit3_title": "🌐 企业级规模",
      "benefit4_description": "生成短生命周期的可轮换密钥，最小化暴露窗口。",
      "benefit4_title": "🔄 动态密钥",
      "benefits_title": "🎯 为什么 OpenBAO 让 SysManage 卓尔不群",
      "description": "OpenBAO 是一个前沿的开源密钥管理平台，为敏感数据提供企业级安全。基于 HashiCorp Vault 代码库开发，OpenBAO 代表着密钥管理的未来，具有增强的安全性、更好的性能和真正的开源治理。",
      "title": "🚀 什么是 OpenBAO？"
    },
    "overview": {
      "badge_description": "OpenBAO 提供银行级加密、零信任架构和企业审计跟踪，使 SysManage 成为市场上最安全的系统管理平台。",
      "badge_title": "🛡️ 军用级安全",
      "description": "SysManage 与 <strong>OpenBAO</strong>（企业级密钥管理平台）集成，为您的基础设施提供无与伦比的安全性。这不仅仅是另一个密钥管理器 - 它是一个完整的安全变革，将您的系统管理提升到企业标准。",
      "title": "🏆 无与伦比的安全架构"
    },
    "title": "OpenBAO 密钥管理 - SysManage"
  },
  "secure_installation": {
    "accomplishments": {
      "admin_feature1": "使用 Argon2 密码哈希创建安全管理员用户",
      "admin_feature2": "基于 UUID 的用户标识",
      "admin_feature3": "全面的密码策略执行",
      "admin_feature4": "基于角色的访问控制初始化",
      "admin_title": "👤 管理用户设置",
      "database_feature1": "完整的 Alembic 迁移执行",
      "database_feature2": "增强安全性的基于 UUID 的主键",
      "database_feature3": "安全数据库模式初始化",
      "database_feature4": "数据库连接验证和优化",
      "database_title": "🗄️ 数据库安全强化",
      "openbao_feature1": "自动 OpenBAO 服务器配置和启动",
      "openbao_feature2": "具有安全默认值的生产模式保险库初始化",
      "openbao_feature3": "自动化保险库解封和密钥引擎设置",
      "openbao_feature4": "安全凭据生成和存储",
      "openbao_title": "🏗️ OpenBAO 保险库初始化",
      "security_feature1": "加密安全的 JWT 密钥生成",
      "security_feature2": "生产安全默认值激活",
      "security_feature3": "SSL/TLS 配置优化",
      "security_feature4": "安全警告系统初始化",
      "security_title": "🔒 安全配置"
    },
    "breadcrumb": "安全安装",
    "card": {
      "description": "革命性自动化设置脚本，将您的 SysManage 安装转变为具有 OpenBAO 集成的企业级安全堡垒。",
      "feature1": "自动化 OpenBAO 保险库生产模式初始化",
      "feature2": "跨平台权限管理和提升",
      "feature3": "加密安全的管理员用户创建",
      "feature4": "企业安全默认值和强化",
      "feature5": "数据库迁移和模式初始化",
      "link": "安全安装指南 →",
      "title": "🔐 安全安装"
    },
    "cross_platform": {
      "description": "安全安装脚本展示了 SysManage 对通用兼容性的承诺，具有智能平台检测和权限管理：",
      "privileges_title": "🔐 智能权限管理",
      "supported_title": "✅ 支持的平台",
      "title": "🌐 跨平台卓越"
    },
    "description": "sysmanage_secure_installation 脚本的完整指南，用于自动化 OpenBAO 设置和安全系统初始化。",
    "flow": {
      "step1_description": "验证虚拟环境、依赖项和系统要求",
      "step1_title": "环境验证",
      "step2_description": "执行 Alembic 迁移以设置安全数据库模式",
      "step2_title": "数据库迁移",
      "step3_description": "使用安全密码哈希创建管理员用户",
      "step3_title": "管理员用户创建",
      "step4_description": "生成 JWT 密钥并应用安全强化",
      "step4_title": "安全配置",
      "step5_description": "配置并初始化 OpenBAO 保险库在生产模式",
      "step5_title": "OpenBAO 初始化",
      "success_description": "企业级 SysManage 安装已准备好用于生产",
      "success_title": "生产就绪！"
    },
    "header": {
      "subtitle": "具有集成 OpenBAO 保险库初始化和企业安全默认值的自动化生产就绪设置。",
      "title": "🔐 SysManage 安全安装"
    },
    "overview": {
      "badge_description": "过去需要数小时手动配置的工作现在只需几分钟，通过永不出错的防弹自动化完成。",
      "badge_title": "🚀 零配置卓越",
      "description": "<code>sysmanage_secure_installation</code> 脚本代表了系统管理部署的量子飞跃。受 MySQL 传奇安全安装过程启发，这个脚本将基本的 SysManage 安装转变为企业级的生产就绪安全堡垒。",
      "title": "🏆 从第一天起就为生产做好准备"
    },
    "platforms": {
      "freebsd_description": "BSD 原生，支持 doas 和 sudo",
      "freebsd_title": "😈 FreeBSD",
      "linux_description": "全面支持所有主要发行版，自动 sudo 检测",
      "linux_title": "🐧 Linux",
      "macos_description": "原生 macOS 支持，集成 Homebrew",
      "macos_title": "🍎 macOS",
      "openbsd_description": "OpenBSD 安全优先方法，集成 doas",
      "openbsd_title": "🐡 OpenBSD",
      "windows_description": "PowerShell 和 MSYS2 支持，管理员权限检测",
      "windows_title": "🪟 Windows"
    },
    "post_installation": {
      "check1": "<strong>保护凭据</strong>：将生成的 <code>.vault_credentials</code> 文件存储在安全位置",
      "check2": "<strong>启动服务</strong>：使用 <code>make start</code> 启动所有服务",
      "check3": "<strong>访问 Web 界面</strong>：导航到 <code>https://your-server:8443</code>",
      "check4": "<strong>登录</strong>：使用安装期间创建的管理员凭据",
      "check5": "<strong>部署代理</strong>：在您的基础设施上安装和批准 SysManage 代理",
      "check6": "<strong>上传密钥</strong>：开始使用密钥管理功能",
      "checklist_title": "✅ 安装后检查清单",
      "description": "成功完成后，您的 SysManage 安装已具备企业级安全的生产就绪状态。接下来要做的事情：",
      "link1": "完整入门指南",
      "link2": "探索密钥管理功能",
      "link3": "安装和配置代理",
      "link4": "查看安全最佳实践",
      "next_title": "🚀 下一步",
      "title": "🎉 安装后步骤"
    },
    "privileges": {
      "feature1": "<strong>自动检测</strong>：跨所有平台检测当前权限级别",
      "feature2": "<strong>智能提升</strong>：使用适当的提升方法（sudo、doas 或管理员）",
      "feature3": "<strong>虚拟环境</strong>：维护适当的 Python 虚拟环境上下文",
      "feature4": "<strong>安全检查</strong>：在进行系统更改前验证环境"
    },
    "security": {
      "argon2_description": "使用 Argon2id（密码哈希竞赛的获胜者），提供针对彩虹表和基于 GPU 的攻击的军用级保护。",
      "argon2_feature1": "内存困难算法，抵抗专用硬件攻击",
      "argon2_feature2": "可配置的时间和内存参数，实现最佳安全性",
      "argon2_feature3": "基于盐的保护，防御彩虹表攻击",
      "argon2_title": "🔐 Argon2 密码哈希",
      "jwt_description": "使用 Python 的 secrets 模块生成加密安全的 JWT 密钥，实现不可破解的令牌安全。",
      "jwt_feature1": "来自操作系统级随机性的 256 位熵",
      "jwt_feature2": "自动密钥轮换能力",
      "jwt_feature3": "安全令牌验证和过期",
      "jwt_title": "🎫 加密 JWT 密钥",
      "openbao_description": "无缝的 OpenBAO 集成从安装时刻就提供企业级密钥管理。",
      "openbao_feature1": "自动保险库初始化和解封",
      "openbao_feature2": "具有安全默认值的生产模式配置",
      "openbao_feature3": "键值密钥引擎设置和配置",
      "openbao_title": "🏦 OpenBAO 保险库集成",
      "uuid_description": "所有主键使用加密安全的 UUID，消除枚举攻击并提供增强隐私。",
      "uuid_feature1": "具有加密随机性的版本 4 UUID",
      "uuid_feature2": "防止用户枚举和可预测的资源 URL",
      "uuid_feature3": "增强隐私和 GDPR 合规性",
      "uuid_title": "🆔 基于 UUID 的安全"
    },
    "security_features": {
      "title": "🛡️ 高级安全功能"
    },
    "title": "安全安装指南 - SysManage",
    "troubleshooting": {
      "database_problem": "<strong>问题：</strong>迁移期间数据库连接失败",
      "database_solution1": "验证 PostgreSQL 正在运行：<code>systemctl status postgresql</code>",
      "database_solution2": "检查配置文件中的数据库凭据",
      "database_solution3": "确保数据库用户有 CREATE 权限",
      "database_solution4": "手动测试连接：<code>psql -h host -U user -d database</code>",
      "database_solution_title": "解决方案：",
      "database_title": "🗄️ 数据库连接问题",
      "openbao_problem": "<strong>问题：</strong>未找到 OpenBAO 二进制文件或初始化失败",
      "openbao_solution1": "安装 OpenBAO：<code>make install-dev</code>（包括 OpenBAO）",
      "openbao_solution2": "从官方发布手动安装 OpenBAO",
      "openbao_solution3": "检查本地主机连接的防火墙设置",
      "openbao_solution4": "使用 <code>--skip-vault</code> 标志临时跳过 OpenBAO 设置",
      "openbao_solution_title": "解决方案：",
      "openbao_title": "🏦 OpenBAO 安装问题",
      "privileges_problem": "<strong>问题：</strong>脚本因权限拒绝错误失败",
      "privileges_solution1": "确保您在系统上拥有管理员权限",
      "privileges_solution2": "在 Linux/macOS 上：使用 <code>sudo</code> 或确保您的用户在 sudoers 中",
      "privileges_solution3": "在 FreeBSD/OpenBSD 上：配置 <code>doas</code> 或使用 <code>sudo</code>",
      "privileges_solution4": "在 Windows 上：以管理员身份运行终端",
      "privileges_solution_title": "解决方案：",
      "privileges_title": "❌ 权限问题",
      "title": "🔧 故障排除",
      "venv_problem": "<strong>问题：</strong>\"未找到虚拟环境\"错误",
      "venv_solution_title": "解决方案：",
      "venv_title": "🐍 虚拟环境问题"
    },
    "usage": {
      "advanced_title": "高级选项：",
      "basic_title": "基本用法：",
      "flow_title": "📊 安装流程",
      "prereq1": "已设置虚拟环境的 SysManage 安装（<code>make install-dev</code>）",
      "prereq2": "系统上的管理员/root 权限",
      "prereq3": "PostgreSQL 数据库运行并可访问",
      "prereq4": "OpenBAO 二进制文件可用（随 <code>make install-dev</code> 自动安装）",
      "prerequisites_title": "📋 先决条件",
      "running_title": "⚡ 运行脚本",
      "title": "🚀 使用指南"
    },
    "what_it_does": {
      "description": "这个革命性脚本自动化了将您的 SysManage 安装完全转换为企业级安全平台：",
      "title": "⚡ 脚本完成的工作"
    }
  },
  "architecture": {
    "agent_features": "代理功能",
    "auto_discovery": "自动发现",
    "auto_discovery_desc": "网络中的自动服务器检测",
    "cross_platform": "跨平台",
    "cross_platform_desc": "所有主要操作系统的原生支持",
    "lightweight_desc": "最小资源占用",
    "lightweight_design": "轻量级设计",
    "secure_communication": "安全通信",
    "secure_communication_desc": "基于mTLS和证书的身份验证",
    "subtitle": "Technical documentation covering SysManage's system architecture, design patterns, and component interactions.",
    "system_overview": {
      "agent_capacity": "Agent Capacity",
      "agent_features": "代理功能",
      "agent_scaling": "Agent Scaling",
      "agent_server_communication": "Agent-to-Server Communication",
      "application_layer": "Application Layer",
      "architecture": "架构",
      "architecture_overview": "Architecture Overview",
      "authentication_systems": "Authentication Systems",
      "auto_discovery": "自动发现",
      "auto_discovery_desc": "网络中的服务器自动检测",
      "automation_orchestration": "Automation & Orchestration",
      "backend_technologies": "Backend Technologies",
      "certificate_based_auth": "Certificate-Based Authentication",
      "communication_security": "Communication & Security",
      "core_components": "Core Components",
      "cross_platform": "跨平台",
      "cross_platform_desc": "对所有主流操作系统的原生支持",
      "data_flow_architecture": "Data Flow Architecture",
      "data_layer": "Data Layer",
      "deployment_patterns": "Deployment Patterns",
      "devops_deployment": "DevOps & Deployment",
      "external_system_integration": "External System Integration",
      "frontend_technologies": "Frontend Technologies",
      "high_availability": "High Availability Deployment",
      "high_level_architecture": "High-Level Architecture",
      "horizontal_scaling": "Horizontal Scaling",
      "integration_points": "Integration Points",
      "key_features": "Key Features",
      "lightweight_desc": "最小资源占用",
      "lightweight_design": "轻量级设计",
      "monitoring_alerting": "Monitoring & Alerting",
      "multi_region": "Multi-Region Deployment",
      "network_security": "Network Security",
      "next_steps": "Next Steps",
      "package_repositories": "Package Repositories",
      "performance_characteristics": "Performance Characteristics",
      "resource_usage": "资源使用",
      "response_times": "Response Times",
      "rest_api": "REST API",
      "scalability_design": "Scalability Design",
      "secure_communication": "安全通信",
      "secure_communication_desc": "mTLS和基于证书的身份验证",
      "security_architecture": "Security Architecture",
      "server_scaling": "Server Scaling",
      "single_instance": "Single Instance Deployment",
      "subtitle": "Comprehensive overview of SysManage system architecture, components, and data flow patterns.",
      "sysmanage_agents": "SysManage Agents",
      "sysmanage_server": "SysManage Server",
      "technology_stack": "Technology Stack",
      "title": "System Overview",
      "transport_layer": "Transport Layer",
      "use_cases": "Use Cases",
      "user_request_processing": "User Request Processing",
      "view_agent_repo": "查看 SysManage 代理仓库",
      "web_interface": "Web Interface"
    },
    "title": "架构概述",
    "view_agent_repo": "查看 SysManage 代理仓库"
  },
  "docs": {
    "additional_resources": {
      "agent_repo": "代理仓库",
      "community_discussions": "社区讨论",
      "github_repo": "GitHub仓库",
      "issue_tracker": "问题跟踪器",
      "title": "附加资源"
    },
    "administration": {
      "backup": "备份和恢复",
      "description": "管理用户、主机和系统设置的管理指南。",
      "host_management": "主机管理",
      "maintenance": "维护",
      "monitoring": "监控和警报",
      "title": "管理",
      "user_management": "用户管理",
      "view_docs": "查看管理文档 →",
      "grafana_setup": "Grafana集成设置",
      "firewall_management": "防火墙管理"
    },
    "agent": {
      "configuration": "配置",
      "cross_platform": "跨平台支持",
      "description": "在所有平台上设置和管理SysManage代理的指南。",
      "installation": "安装指南",
      "privileged_execution": "特权执行",
      "title": "代理文档",
      "troubleshooting": "故障排除",
      "view_docs": "查看代理文档 →"
    },
    "api": {
      "authentication": "身份验证",
      "description": "与SysManage集成的完整REST API文档。",
      "hosts": "主机管理",
      "monitoring": "监控",
      "packages": "包管理和卸载",
      "title": "API参考",
      "view_docs": "查看API文档 →",
      "websockets": "WebSocket API"
    },
    "architecture": {
      "database_schema": "数据库设计",
      "description": "包括系统设计、消息流和组件交互的技术架构文档。",
      "message_flow": "消息流和队列",
      "multi_os_cicd": "多操作系统 CI/CD 流水线",
      "performance_metrics": "性能和可扩展性",
      "performance_testing": "性能测试框架",
      "system_overview": "系统概述",
      "testing_excellence": "测试卓越",
      "title": "架构",
      "view_docs": "查看架构 →",
      "websocket_protocol": "通信协议"
    },
    "description": "SysManage服务器和代理组件的完整文档。",
    "getting_started": {
      "agent_approval": "代理审批",
      "basic_management": "基本管理",
      "description": "为新用户提供的快速入门指南和教程。",
      "first_deployment": "首次部署",
      "quick_start": "快速开始",
      "title": "快速入门",
      "tutorials": "教程",
      "view_docs": "快速入门 →",
      "webui_overview": "Web界面概览"
    },
    "header": {
      "subtitle": "用于部署、配置和管理SysManage的全面指南。",
      "title": "文档"
    },
    "security": {
      "authentication": "身份验证和授权",
      "best_practices": "最佳实践",
      "description": "安全功能、最佳实践和漏洞报告。",
      "mtls": "双向TLS (mTLS)",
      "reporting": "漏洞报告",
      "scanning": "安全扫描",
      "title": "安全",
      "view_docs": "查看安全文档 →"
    },
    "server": {
      "configuration": "配置",
      "deployment": "部署",
      "description": "安装、配置和管理SysManage服务器的完整指南。",
      "features": "功能",
      "installation": "安装指南",
      "reports": "报告和PDF生成",
      "testing": "测试和Playwright",
      "title": "服务器文档",
      "troubleshooting": "故障排除",
      "view_docs": "查看服务器文档 →"
    },
    "title": "文档 - SysManage",
    "admin": {
      "firewall": {
        "title": "防火墙管理 - SysManage管理",
        "meta_description": "使用SysManage在您的基础设施中部署、管理和监控防火墙软件的完整指南。",
        "breadcrumb": "防火墙管理",
        "header": {
          "title": "防火墙管理",
          "subtitle": "全面指南，用于在您的基础设施中部署、配置和管理防火墙软件，具有实时监控和控制功能。"
        },
        "overview": {
          "title": "概述",
          "description": "SysManage在所有支持的平台上提供防火墙软件的集中管理。该平台自动化部署，实现防火墙状态的实时监控，并提供远程启用、禁用、重启或部署防火墙软件的工具。",
          "key_features": "主要功能",
          "features": {
            "cross_platform": "<strong>跨平台支持：</strong>在Linux、BSD、macOS和Windows系统上管理防火墙",
            "auto_detection": "<strong>自动检测：</strong>代理自动检测并报告防火墙软件状态",
            "remote_deployment": "<strong>远程部署：</strong>从Web界面一键部署防火墙软件",
            "service_control": "<strong>服务控制：</strong>远程启用、禁用或重启防火墙服务",
            "port_monitoring": "<strong>端口监控：</strong>实时监控开放端口和防火墙规则",
            "realtime_status": "<strong>实时状态：</strong>监控防火墙状态、启用/禁用状态和端口配置",
            "agent_protection": "<strong>代理保护：</strong>启用防火墙时自动打开代理通信所需的端口"
          }
        }
      }
    }
  },
  "navigation": {
    "best_practices": "安全最佳实践 →",
    "security_overview": "← 安全概述",
    "server_configuration": "服务器配置 →",
    "server_installation": "← 服务器安装",
    "title": "快速导航"
  },
  "footer": {
    "agent_docs": "代理文档",
    "agent_github_repo": "代理 GitHub 仓库",
    "api_reference": "API 参考",
    "community": "社区",
    "copyright": "© 2024 SysManage. 保留所有权利。",
    "description": "用于全面基础设施监控和自动化的现代系统管理平台。",
    "discussions": "讨论",
    "documentation": "文档",
    "github_repo": "GitHub 仓库",
    "issue_tracker": "问题追踪",
    "license": "许可证",
    "licensed_under": "采用 AGPLv3 许可",
    "security": "安全",
    "server_docs": "服务器文档",
    "server_github_repo": "服务器 GitHub 仓库",
    "view_license": "查看许可证"
  },
  "installation": {
    "installation_steps": "安装步骤",
    "prerequisites": "先决条件",
    "system_requirements": "系统要求",
    "title": "安装指南",
    "troubleshooting": "故障排除"
  },
  "configuration": {
    "advanced_features": "高级功能",
    "basic_config": "基础配置",
    "security_config": "安全配置",
    "title": "配置指南"
  },
  "security_page": {
    "features": "安全功能",
    "overview": "安全概述",
    "title": "安全文档",
    "vulnerability_reporting": "漏洞报告"
  },
  "platforms": {
    "opensuse": {
      "leap_note": "使用稳定包，可能需要手动安装 Rust",
      "package_notes": "包管理器说明",
      "python_versions": "Leap 搭载 Python 3.9+，Tumbleweed 搭载最新稳定版",
      "title": "openSUSE Leap/Tumbleweed",
      "tumbleweed_note": "滚动发布，可通过 zypper 获得 Rust"
    },
    "sles": {
      "apparmor_note": "SUSE 默认使用 AppArmor 而非 SELinux",
      "enterprise_considerations": "企业级考量",
      "firewall_config": "通过 YaST 或 firewall-cmd 打开所需端口",
      "firewall_note": "SuSEfirewall2 或 firewalld 可能阻止代理端口",
      "logging_note": "可通过 journalctl 或 /var/log/messages 查看日志",
      "selinux_note": "如果启用，可能需要策略调整",
      "service_notes": "SUSE 企业版说明",
      "sles12_note": "可能需要软件集合 (SCL) 来获得更新的 Python",
      "sles15_note": "包含 Python 3.6+，但建议使用 3.9+",
      "subscription_note": "某些包需要有效的 SLES 订阅",
      "title": "SUSE Linux Enterprise Server (SLES)"
    }
  },
  "server_docs": {
    "configuration": {
      "database_settings": "Database connection settings",
      "description": "用于自定义 SysManage 部署的全面配置选项。",
      "file_structure": "Configuration file structure",
      "link": "Configuration Guide →",
      "security_options": "Security and authentication options",
      "title": "⚙️ Configuration",
      "websocket_api": "WebSocket and API configuration"
    },
    "deployment": {
      "backup": "Backup and disaster recovery",
      "checklist": "Production deployment checklist",
      "description": "可扩展基础设施的生产部署策略和最佳实践。",
      "link": "Deployment Guide →",
      "monitoring": "监控和可观测性",
      "scaling": "Load balancing and scaling",
      "title": "部署指南"
    },
    "description": "SysManage服务器安装、配置和管理的完整文档。",
    "features": {
      "description": "所有服务器功能和能力的详细概述。",
      "host_management": "Host and agent management",
      "link": "Features Overview →",
      "monitoring": "Real-time monitoring and alerts",
      "package_management": "包管理",
      "title": "功能概述",
      "user_management": "用户管理"
    },
    "header": {
      "subtitle": "安装、配置和管理SysManage服务器的完整指南。",
      "title": "服务器文档"
    },
    "installation": {
      "database": "Database setup and configuration",
      "description": "在您的基础设施上设置 SysManage 服务器的分步安装指南。",
      "link": "Installation Guide →",
      "methods": "Docker and traditional installation methods",
      "requirements": "System requirements and prerequisites",
      "ssl": "SSL certificate configuration",
      "title": "🚀 Installation"
    },
    "navigation": {
      "agent": "← Agent Documentation",
      "api": "API Reference →",
      "title": "快速导航"
    },
    "overview": {
      "backend_api": "后端API - 具有异步支持、JWT认证和WebSocket通信的FastAPI",
      "components_title": "服务器组件",
      "database": "数据库 - 具有SQLAlchemy ORM和Alembic迁移的PostgreSQL",
      "description": "SysManage服务器是一个现代的Web应用程序，使用FastAPI（Python）后端和React（TypeScript）前端构建。它通过轻量级代理提供管理多个系统的集中平台。",
      "frontend_ui": "前端UI - 具有TypeScript、Material-UI组件和实时更新的React",
      "security_layer": "<strong>Security Layer</strong> - Enterprise-grade security with mTLS, RBAC, and comprehensive scanning",
      "title": "概述",
      "websocket_engine": "<strong>WebSocket Engine</strong> - Real-time bidirectional communication with agents"
    },
    "reports": {
      "description": "Comprehensive reporting system with real-time HTML viewing and professional PDF generation.",
      "generation": "Real-time HTML and PDF generation",
      "i18n": "Internationalized report content",
      "inventory": "Host inventory and system reports",
      "link": "Reports Documentation →",
      "security": "User management and security reports",
      "title": "报告和PDF生成"
    },
    "section_title": "服务器",
    "security": {
      "auth": "Authentication and authorization",
      "description": "Security features, configuration, and best practices for secure deployments.",
      "hardening": "Hardening guidelines",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) configuration",
      "scanning": "Security scanning and monitoring",
      "title": "🔐 Security"
    },
    "testing": {
      "cicd": "CI/CD testing pipeline",
      "coverage": "Test coverage and reporting",
      "description": "Comprehensive testing strategy including unit tests, integration tests, and E2E testing with Playwright.",
      "e2e": "End-to-end testing with Playwright",
      "link": "Testing Documentation →",
      "title": "测试",
      "unit_integration": "Unit and integration testing"
    },
    "title": "服务器文档 - SysManage",
    "troubleshooting": {
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for server problems.",
      "errors": "Common error messages and solutions",
      "link": "Troubleshooting Guide →",
      "maintenance": "Database maintenance",
      "performance": "Performance optimization",
      "title": "故障排除指南"
    }
  },
  "server_installation": {
    "breadcrumb_installation": "安装",
    "description": "SysManage服务器的完整安装指南，包括先决条件、数据库设置和配置。",
    "header": {
      "subtitle": "在您的基础设施上设置SysManage服务器的完整逐步安装指南。",
      "title": "服务器安装指南"
    },
    "installation_steps": {
      "step1": {
        "title": "步骤1：克隆和设置"
      },
      "step2": {
        "description": "创建PostgreSQL数据库和用户：",
        "linux_macos_freebsd": "Linux/macOS/FreeBSD",
        "netbsd": "NetBSD",
        "openbsd": "OpenBSD",
        "security_notes": {
          "change_password": "在PostgreSQL和配置文件中都要更改密码",
          "dev_password": "开发密码<code>abc123</code>与<code>sysmanage-dev.yaml</code>匹配",
          "never_production": "绝不要在生产环境中使用此密码",
          "title": "⚠️ 安全注意事项"
        },
        "title": "步骤2：数据库设置",
        "windows": "Windows"
      },
      "step3": {
        "title": "步骤3：安装后端依赖"
      },
      "step4": {
        "title": "步骤4：测试数据库连接"
      },
      "step5": {
        "title": "步骤5：安装前端依赖"
      },
      "step6": {
        "config_generator": {
          "description": "使用交互式",
          "link": "配置构建器工具",
          "title": "💡 配置生成器可用"
        },
        "description": "创建配置文件于：",
        "linux_macos_bsd": "Linux/macOS/BSD：",
        "security_steps": {
          "file_permissions": "设置适当的文件权限：<code>chmod 600 /etc/sysmanage.yaml</code>",
          "generate_secrets": "生成新的密钥：<code>openssl rand -base64 32</code>",
          "never_commit": "永远不要将配置文件提交到版本控制",
          "strong_passwords": "使用强密码（12个字符以上）",
          "title": "🔐 必需的安全步骤"
        },
        "title": "步骤6：配置",
        "windows_path": "Windows："
      },
      "step7": {
        "features": {
          "admin_user": "创建初始管理员用户账户",
          "config_hardening": "对配置文件应用安全强化",
          "jwt_secret": "生成用于认证的唯一JWT密钥",
          "password_salt": "生成用于安全密码哈希的唯一密码盐值",
          "prevents_defaults": "防止使用默认/示例安全令牌",
          "title": "此脚本的功能："
        },
        "security_note": {
          "description": "必须运行安全安装脚本来创建初始管理员用户并为您的安装配置唯一的安全令牌。",
          "title": "🔐 新安装必需"
        },
        "title": "步骤7：运行安全安装脚本",
        "warning": {
          "backup_config": "运行此脚本后备份您的配置文件",
          "required": "此步骤是必需的",
          "required_desc": "没有它应用程序将无法安全运行",
          "run_once": "每次安装只运行此脚本一次",
          "title": "⚠️ 重要安全注意事项",
          "unique_tokens": "每个安装都获得唯一的安全令牌以防止凭据重用"
        }
      },
      "step8": {
        "access_description": "访问应用程序：",
        "http": "HTTP:",
        "http_url": "http://localhost:3000 (后备)",
        "https": "HTTPS:",
        "https_url": "https://sysmanage.org:7443 (如果SSL证书存在)",
        "title": "步骤8：启动应用程序"
      },
      "title": "安装步骤"
    },
    "navigation": {
      "config_guide": "配置指南 →",
      "server_docs": "← 服务器文档"
    },
    "note": "注意",
    "prerequisites": {
      "centos": {
        "tab_title": "CentOS/RHEL",
        "title": "CentOS/RHEL/Fedora"
      },
      "centos_rhel": "CentOS/RHEL",
      "freebsd": {
        "tab_title": "FreeBSD",
        "title": "FreeBSD"
      },
      "macos": {
        "tab_title": "macOS",
        "title": "macOS"
      },
      "netbsd": {
        "tab_title": "NetBSD",
        "title": "NetBSD 完整设置指南"
      },
      "openbsd": {
        "tab_title": "OpenBSD",
        "title": "OpenBSD"
      },
      "opensuse": {
        "note_leap": "openSUSE Leap：稳定包，通常可用 Python 3.11",
        "note_nodejs": "Node.js 版本：可能需要明确指定版本（nodejs20）",
        "note_postgresql": "PostgreSQL：为兼容性指定版本（postgresql14）",
        "note_title": "📦 包管理器说明",
        "note_tumbleweed": "openSUSE Tumbleweed：滚动发布，包含最新包",
        "tab_title": "openSUSE",
        "title": "openSUSE Leap/Tumbleweed"
      },
      "sles": {
        "note_firewall": "防火墙：可能使用 SuSEfirewall2（旧版）或 firewalld（新版）",
        "note_modules": "模块：某些包需要通过 SUSEConnect 启用其他模块",
        "note_selinux": "SELinux：如果启用，可能需要策略调整",
        "note_sles12": "SLES 12：较新的 Python 可能需要 Software Collections (SCL)",
        "note_sles15": "SLES 15：包含 Python 3.6+，但建议使用 3.11+",
        "note_subscription": "订阅：需要有效的 SLES 订阅才能完全访问包",
        "note_title": "🏢 企业考虑因素",
        "tab_title": "SLES",
        "title": "SUSE Linux Enterprise Server (SLES)"
      },
      "title": "平台特定的先决条件",
      "ubuntu": {
        "title": "Ubuntu 22.04 - 24.10 (推荐)"
      },
      "ubuntu25": {
        "note": "Ubuntu 25.04+ 只提供 Python 3.13，目前还不兼容。您必须从源码编译 Python 3.12：",
        "tab_title": "Ubuntu 25.04+",
        "title": "Ubuntu 25.04+ (从源码安装Python 3.12)"
      },
      "ubuntu_debian": "Ubuntu/Debian",
      "windows": {
        "tab_title": "Windows",
        "title": "Windows"
      }
    },
    "requirements": {
      "nodejs": {
        "description": "用于构建React前端",
        "title": "🟢 Node.js",
        "version": "20.x或更高版本"
      },
      "os": {
        "description": "跨平台部署",
        "platforms": "Linux、macOS、Windows、FreeBSD、OpenBSD, NetBSD",
        "title": "💻 操作系统"
      },
      "postgresql": {
        "description": "所有应用程序数据的主数据库",
        "title": "🐘 PostgreSQL",
        "version": "14或更高版本"
      },
      "python": {
        "note": "注意：由于包兼容性问题，Python 3.13尚未支持",
        "title": "🐍 Python",
        "version": "3.11或3.12"
      },
      "required": "必需",
      "supported": "支持",
      "title": "系统要求"
    },
    "ssl": {
      "description": "对于HTTPS开发，请将您的SSL证书放置在：",
      "fallback": "如果找不到证书，系统会自动回退到localhost上的HTTP。",
      "title": "SSL证书（可选）"
    },
    "title": "服务器安装指南 - SysManage",
    "troubleshooting": {
      "db_issues": {
        "check_credentials": "检查凭据是否与配置文件匹配",
        "test_connection": "使用上述psql命令测试连接",
        "title": "数据库连接问题",
        "verify_postgresql": "验证PostgreSQL正在运行：<code>sudo systemctl status postgresql</code>"
      },
      "package_errors": {
        "httptools_errors": "httptools构建错误：",
        "install_libpq": "安装<code>libpq-dev</code>（Ubuntu）或<code>postgresql-devel</code>（RHEL）",
        "install_libuv": "安装<code>libuv1-dev</code>（Ubuntu）或<code>libuv-devel</code>（RHEL）",
        "missing_libpq": "缺少libpq-fe.h：",
        "python313_issues": "Python 3.13问题：",
        "title": "包构建错误",
        "use_older_python": "改用Python 3.11或3.12"
      },
      "permission_issues": {
        "check_venv": "检查虚拟环境激活",
        "ensure_ownership": "确保目录的适当所有权",
        "set_config_permissions": "设置配置文件权限：<code>chmod 600 /etc/sysmanage.yaml</code>",
        "title": "权限问题"
      },
      "port_conflicts": {
        "check_services": "检查现有服务：<code>netstat -tlnp | grep :6443</code>",
        "ensure_ports": "确保端口6443（API）和7443（前端）可用",
        "modify_ports": "如需要，修改配置中的端口",
        "title": "端口冲突"
      },
      "title": "故障排除"
    }
  },
  "server_configuration": {
    "advanced": {
      "discovery": {
        "service": {
          "description": "允许代理自动发现和配置网络上的可用服务器。",
          "title": "📡 发现服务"
        },
        "title": "代理发现服务"
      },
      "logging": {
        "title": "日志配置"
      },
      "performance": {
        "title": "性能调优"
      },
      "title": "高级功能"
    },
    "basic": {
      "api_server": {
        "notes": {
          "host_binding": "<strong>主机绑定：</strong>外部访问使用<code>0.0.0.0</code>，仅本地使用<code>localhost</code>",
          "port_selection": "<strong>端口选择：</strong>确保端口未被其他服务使用",
          "ssl_certificates": "<strong>SSL证书：</strong>如果未提供，服务器将回退到HTTP",
          "title": "📝 注意事项"
        },
        "title": "API服务器设置"
      },
      "database": {
        "security_warning": {
          "description": "示例密码<code>abc123</code>仅用于开发。<strong>生产环境中始终使用强密码！</strong>",
          "title": "⚠️ 安全警告"
        },
        "title": "数据库配置"
      },
      "title": "基本配置",
      "webui": {
        "title": "Web界面设置"
      }
    },
    "breadcrumb": {
      "configuration": "配置",
      "server": "服务器"
    },
    "certificates": {
      "mtls": {
        "description": "相互TLS设置由服务器自动管理。主机批准后，客户端证书将生成并存储在证书目录中。",
        "title": "mTLS配置",
        "workflow": {
          "step1": "<strong>主机注册：</strong>代理以待处理状态注册",
          "step2": "<strong>手动批准：</strong>管理员在Web界面中批准主机",
          "step3": "<strong>证书生成：</strong>服务器生成唯一客户端证书",
          "step4": "<strong>安全认证：</strong>后续连接使用mTLS",
          "title": "🔄 mTLS工作流"
        }
      },
      "storage": {
        "permissions": {
          "certificates": "<strong>证书：</strong><code>0644</code>（所有者rw，其他读）",
          "directory": "<strong>证书目录：</strong><code>0755</code>（所有者rwx，组/其他rx）",
          "private_keys": "<strong>私钥：</strong><code>0600</code>（仅所有者读写）",
          "title": "🔒 必需权限"
        },
        "title": "证书存储"
      },
      "title": "证书管理"
    },
    "description": "SysManage服务器完整配置指南，包括安全设置、数据库配置和高级功能。",
    "email": {
      "smtp": {
        "providers": {
          "exchange": "Exchange",
          "gmail": "Gmail",
          "gmail_note": "<strong>注意：</strong>需要2FA和应用密码。设置请访问<a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\">Google应用密码</a>。",
          "office365": "Office 365",
          "postfix": "Postfix",
          "title": "📧 常见SMTP配置"
        },
        "title": "SMTP设置"
      },
      "title": "邮件配置"
    },
    "environment": {
      "description": "配置也可通过环境变量设置（覆盖YAML文件）：",
      "title": "环境变量"
    },
    "file_locations": {
      "development": "🛠️ 开发",
      "linux_macos_bsd": "🐧 Linux/macOS/BSD",
      "title": "配置文件位置",
      "windows": "🪟 Windows"
    },
    "header": {
      "description": "自定义SysManage服务器部署的全面配置选项。",
      "title": "服务器配置指南"
    },
    "navigation": {
      "deployment": "部署指南 →",
      "installation": "← 安装指南"
    },
    "permissions": {
      "directory": {
        "title": "必需目录结构"
      },
      "security_checklist": {
        "cert_directory": "✅ 证书目录访问受限",
        "config_file": "✅ 配置文件仅服务用户可读",
        "db_credentials": "✅ 数据库凭据唯一且强",
        "jwt_rotation": "✅ JWT秘密定期轮换",
        "private_keys": "✅ 私钥受0600权限保护",
        "strong_passwords": "✅ 使用强密码和秘密",
        "title": "🛡️ 安全检查清单"
      },
      "title": "文件权限和安全"
    },
    "security": {
      "core": {
        "generating_values": {
          "title": "🔐 生成安全值"
        },
        "title": "核心安全设置"
      },
      "password_policy": {
        "notes": {
          "flexible_requirements": "<strong>灵活要求：</strong>调整策略以满足组织需求",
          "multilanguage": "<strong>多语言：</strong>所有14种支持语言均提供错误消息",
          "realtime_validation": "<strong>实时验证：</strong>策略在前端和后端都强制执行",
          "title": "📝 密码策略注意事项"
        },
        "title": "密码策略配置"
      },
      "title": "安全配置"
    },
    "testing": {
      "title": "测试配置",
      "validation": {
        "database": "<strong>数据库连接：</strong>",
        "email": "<strong>邮件配置：</strong>",
        "ssl": "<strong>SSL证书：</strong>",
        "syntax": "<strong>配置语法：</strong>",
        "title": "验证步骤"
      }
    },
    "title": "服务器配置指南 - SysManage"
  },
  "server_deployment": {
    "backup": {
      "database": {
        "title": "数据库备份"
      },
      "disaster": {
        "step1": "<strong>评估：</strong>确定故障范围和受影响系统",
        "step2": "<strong>沟通：</strong>通知利益相关者和用户事件",
        "step3": "<strong>隔离：</strong>隔离故障组件防止进一步损害",
        "step4": "<strong>恢复：</strong>从备份恢复或故障转移到备用系统",
        "step5": "<strong>验证：</strong>测试恢复系统并验证功能",
        "step6": "<strong>事后分析：</strong>记录事件并改进程序",
        "title": "灾难恢复计划"
      },
      "title": "备份和灾难恢复"
    },
    "breadcrumb": {
      "deployment": "部署",
      "server": "服务器"
    },
    "checklist": {
      "performance": {
        "assets": "前端资源已压缩和优化",
        "caching": "缓存头已配置",
        "limits": "应用进程资源限制已设置",
        "logging": "日志级别适当设置为生产",
        "pooling": "数据库连接池已配置",
        "title": "性能优化"
      },
      "pre_deployment": {
        "database": "PostgreSQL数据库服务器已准备",
        "dns": "DNS记录已配置",
        "hardware": "服务器硬件/VM规格满足要求",
        "monitoring": "备份和监控系统已就位",
        "network": "网络连接和防火墙规则已配置",
        "ssl": "SSL证书已获取并验证",
        "title": "部署前"
      },
      "security": {
        "database": "数据库访问限制为应用程序",
        "firewall": "防火墙规则限制对必需端口的访问",
        "https": "HTTPS/TLS已启用并强制",
        "jwt": "JWT令牌设置已优化",
        "logs": "日志文件权限和轮换已配置",
        "passwords": "强密码策略已配置",
        "title": "安全配置"
      },
      "title": "生产检查清单"
    },
    "container": {
      "docker": {
        "title": "Docker Compose"
      },
      "kubernetes": {
        "title": "Kubernetes部署"
      },
      "title": "容器部署"
    },
    "description": "可扩展SysManage基础设施的生产部署策略和最佳实践。",
    "ha": {
      "architecture": {
        "title": "架构概述"
      },
      "database": {
        "replication": {
          "title": "PostgreSQL流复制"
        },
        "title": "数据库集群"
      },
      "load_balancer": {
        "nginx": {
          "title": "Nginx配置"
        },
        "title": "负载均衡器配置"
      },
      "title": "高可用部署"
    },
    "header": {
      "description": "可扩展、安全、可靠的SysManage基础设施的生产部署策略和最佳实践。",
      "title": "部署指南"
    },
    "maintenance": {
      "procedure": {
        "step1": "<strong>备份：</strong>更新前创建完整系统备份",
        "step2": "<strong>测试：</strong>在预发布环境中测试更新",
        "step3": "<strong>维护窗口：</strong>安排维护并通知用户",
        "step4": "<strong>更新：</strong>按照文档程序应用更新",
        "step5": "<strong>验证：</strong>验证所有系统正常运行",
        "step6": "<strong>回滚计划：</strong>准备回滚程序以备需要",
        "title": "更新程序"
      },
      "tasks": {
        "daily": {
          "backup": "验证备份完成",
          "logs": "检查应用日志错误",
          "monitoring": "监控系统健康和性能",
          "title": "每日"
        },
        "monthly": {
          "capacity": "容量规划审查",
          "performance": "性能分析和优化",
          "security": "安全漏洞评估",
          "title": "每月"
        },
        "title": "维护任务",
        "weekly": {
          "packages": "更新系统包",
          "restore_test": "测试备份恢复程序",
          "security": "检查安全日志和警报",
          "title": "每周"
        }
      },
      "title": "维护和更新"
    },
    "monitoring": {
      "logs": {
        "title": "日志管理"
      },
      "system": {
        "health": {
          "title": "健康检查端点"
        },
        "prometheus": {
          "title": "Prometheus配置"
        },
        "title": "系统监控"
      },
      "title": "监控和日志"
    },
    "overview": {
      "description": "SysManage可根据基础设施需求部署在各种配置中，从单服务器设置到高可用多节点集群。",
      "strategies": {
        "cloud": {
          "description": "可扩展的云原生部署选项",
          "features": {
            "availability": "多区域可用性",
            "database": "托管数据库服务",
            "orchestration": "容器编排（Kubernetes）",
            "scaling": "自动扩展功能"
          },
          "title": "☁️ 云部署"
        },
        "ha": {
          "description": "需要零停机的生产环境",
          "features": {
            "clustering": "带故障转移的数据库集群",
            "load_balancer": "带SSL终端的负载均衡器",
            "redundancy": "冗余网络和存储",
            "servers": "多个应用服务器"
          },
          "title": "🔄 高可用部署"
        },
        "single": {
          "description": "适合小到中型环境（最多100台主机）",
          "features": {
            "components": "单台服务器托管所有组件",
            "configuration": "简单配置和维护",
            "database": "同一服务器上的PostgreSQL数据库",
            "resources": "较低资源需求"
          },
          "title": "🖥️ 单服务器部署"
        }
      },
      "title": "部署概述"
    },
    "performance": {
      "application": {
        "title": "应用调优"
      },
      "caching": {
        "application": "<strong>应用缓存：</strong>数据库查询结果缓存",
        "browser": "<strong>浏览器缓存：</strong>带适当头的客户端资源缓存",
        "cdn": "<strong>CDN：</strong>静态资源分发和地理分布",
        "redis": "<strong>Redis：</strong>会话存储和临时数据缓存",
        "title": "缓存策略"
      },
      "database": {
        "title": "数据库调优"
      },
      "title": "性能优化"
    },
    "security": {
      "application": {
        "audit_logging": "<strong>审计日志：</strong>记录所有管理操作",
        "csp": "<strong>CSP：</strong>内容安全策略实现",
        "hsts": "<strong>HSTS：</strong>HTTP严格传输安全头",
        "https": "<strong>仅HTTPS：</strong>对所有连接强制TLS",
        "input_validation": "<strong>输入验证：</strong>全面输入清理",
        "rate_limiting": "<strong>速率限制：</strong>API端点速率限制",
        "title": "应用安全"
      },
      "network": {
        "title": "网络安全"
      },
      "title": "安全加固"
    },
    "single_server": {
      "config": {
        "title": "生产配置"
      },
      "installation": {
        "title": "安装步骤"
      },
      "requirements": {
        "component": "组件",
        "minimum": "最低",
        "recommended": "推荐",
        "title": "系统要求"
      },
      "title": "单服务器部署"
    },
    "title": "部署指南 - SysManage服务器"
  },
  "getting_started": {
    "breadcrumb": "入门指南",
    "cards": {
      "quick_start": {
        "description": "使用我们简化的安装指南快速运行SysManage。适合评估和小规模部署。",
        "features": {
          "config": "初始配置和设置",
          "docker": "使用Docker Compose安装",
          "login": "首次登录和基本导航",
          "requirements": "系统要求和先决条件"
        },
        "link": "快速开始指南 →",
        "title": "🚀 快速开始"
      },
      "webui": {
        "description": "SysManage Web界面及其监控和管理主要功能的全面介绍。",
        "features": {
          "dashboard": "仪表板概述和导航",
          "hosts": "主机管理界面",
          "monitoring": "监控和警报",
          "packages": "软件包管理功能"
        },
        "link": "Web界面指南 →",
        "title": "🌐 Web界面概述"
      }
    },
    "description": "快速开始指南和教程，帮助您快速开始使用SysManage进行基础设施监控和自动化。",
    "header": {
      "description": "快速开始指南和教程，帮助您快速开始使用SysManage进行基础设施监控和自动化。",
      "title": "入门指南"
    },
    "help": {
      "community": {
        "description": "与其他SysManage用户和贡献者联系",
        "title": "💬 社区"
      },
      "docs": {
        "description": "涵盖SysManage所有方面的全面指南",
        "title": "📖 文档"
      },
      "title": "获取帮助",
      "troubleshooting": {
        "description": "常见问题及其解决方案",
        "title": "🔧 故障排除"
      }
    },
    "journey": {
      "description": "按照这些指导步骤在您的环境中运行SysManage：",
      "steps": {
        "agents": {
          "description": "安装并批准您的第一个代理",
          "title": "代理设置"
        },
        "deployment": {
          "description": "部署您的第一个SysManage服务器实例",
          "title": "首次部署"
        },
        "management": {
          "description": "学习基本管理任务",
          "title": "基本管理"
        },
        "quick_start": {
          "description": "几分钟内安装并运行SysManage",
          "title": "快速开始"
        }
      },
      "title": "您的旅程从这里开始"
    },
    "learning_path": {
      "title": "推荐学习路径"
    },
    "navigation": {
      "docs_home": "← 文档主页",
      "quick_start": "快速开始 →",
      "title": "快速导航"
    },
    "prerequisites": {
      "knowledge": {
        "title": "必需知识"
      },
      "needed": {
        "title": "您需要什么"
      },
      "system": {
        "platforms": {
          "title": "支持的平台"
        },
        "server": {
          "title": "服务器要求"
        },
        "title": "系统要求"
      },
      "title": "开始之前"
    },
    "title": "入门指南 - SysManage",
    "use_cases": {
      "large": {
        "title": "🌐 大型组织"
      },
      "medium": {
        "title": "🏭 中型企业"
      },
      "small": {
        "title": "🏢 小型企业"
      },
      "title": "常见用例"
    },
    "welcome": {
      "description": "SysManage是一个全面的基础设施监控和自动化平台，帮助您管理整个基础设施中的主机、软件包和系统健康。无论您是管理几台服务器还是数千台主机，SysManage都提供有效维护和监控系统所需的工具。",
      "title": "欢迎使用SysManage"
    }
  },
  "testing": {
    "breadcrumb": "测试",
    "description": "SysManage的综合测试指南，包括单元测试、集成测试和使用Playwright的E2E测试。",
    "msw": {
      "benefits": {
        "cicd": "CI/CD：无需在测试环境中启动后端服务",
        "development": "开发：在后端 API 准备就绪之前就可以开发前端功能",
        "isolation": "测试隔离：前端测试独立于后端可用性运行",
        "reliability": "可靠性：一致的响应消除了不稳定的测试",
        "speed": "性能：无网络延迟，测试运行更快",
        "title": "为什么选择 MSW？"
      },
      "bestpractices": {
        "coverage": "API 覆盖：确保组件使用的所有 API 端点都被模拟",
        "errors": "错误场景：测试成功和错误响应",
        "isolation": "测试隔离：MSW 在测试之间自动重置处理器",
        "logging": "请求日志：使用 MSW 日志调试意外的 API 调用",
        "realistic": "逼真数据：使用与生产 API 响应密切匹配的模拟数据",
        "title": "最佳实践"
      },
      "compatibility": {
        "description": "SysManage 在测试环境中包含对 React 19 的特殊兼容性修复：",
        "title": "React 19 兼容性"
      },
      "debugging": {
        "console": "控制台输出中的 MSW 请求日志",
        "description": "如果测试因 API 问题失败，请检查：",
        "handlers": "处理器模式与实际 API 调用匹配",
        "setup": "MSW 服务器在测试设置中正确启动",
        "title": "MSW 调试",
        "unhandled": "关于未处理请求的警告"
      },
      "features": {
        "ci": {
          "description": "MSW 包含对持续集成环境的特殊处理：",
          "title": "CI/CD 集成"
        },
        "dynamic": {
          "description": "MSW 使用广泛的模式匹配和动态路径解析：",
          "fallback": "对不匹配端点的优雅回退",
          "parsing": "URL 解析提取特定端点路径",
          "title": "动态路径处理",
          "wildcard": "通配符模式捕获所有 /api/* 请求"
        },
        "realistic": {
          "description": "MSW 提供全面的模拟数据，反映真实的 API 响应：",
          "hosts": "包含硬件详细信息的完整主机信息",
          "operations": "包安装/卸载操作",
          "packages": "具有搜索功能的软件包数据",
          "title": "逼真的响应模拟",
          "users": "用户身份验证和配置文件数据"
        },
        "title": "关键功能"
      },
      "handlers": {
        "description": "MSW 处理器在 /src/mocks/handlers.ts 中定义，提供全面的 API 覆盖：",
        "title": "请求处理器"
      },
      "implementation": {
        "title": "实现架构"
      },
      "installation": {
        "description": "MSW 已在 SysManage 前端中安装和配置。设置包括：",
        "title": "安装和配置"
      },
      "integration": {
        "description": "MSW 在 /src/setupTests.ts 中为所有测试自动配置，具有适当的生命周期管理：",
        "title": "测试集成"
      },
      "overview": {
        "description": "Mock Service Worker (MSW) 是一个强大的 API 模拟库，在网络层拦截 HTTP 请求，为前端测试提供逼真的 API 响应。SysManage 广泛使用 MSW 来确保前端组件可以在不需要运行后端服务器的情况下进行隔离测试。",
        "title": "概述"
      },
      "server": {
        "description": "MSW 服务器在 /src/mocks/node.ts 中为 Node.js 测试环境配置：",
        "title": "测试服务器设置"
      },
      "title": "使用 Mock Service Worker (MSW) 进行前端测试",
      "usage": {
        "automatic": {
          "description": "大多数测试自动从 MSW 中受益，无需额外配置：",
          "title": "自动 API 模拟"
        },
        "custom": {
          "description": "测试可以为自定义场景覆盖特定处理器：",
          "title": "自定义处理器覆盖"
        },
        "title": "在测试中使用"
      }
    },
    "overview": {
      "description": "SysManage 采用多层测试方法来确保所有组件的可靠性、安全性和功能性：",
      "e2e": {
        "crossbrowser": "跨浏览器兼容性",
        "crossplatform": "跨平台支持（Linux、macOS、Windows、OpenBSD、FreeBSD）",
        "description": "使用 Playwright 进行完整的用户工作流测试",
        "framework": "三重测试框架：Playwright（主要）+ Selenium（备用）+ CI/CD 集成",
        "journey": "完整的用户旅程测试",
        "link": "→ Complete UI Testing Documentation",
        "realworld": "真实场景验证",
        "title": "端到端 (E2E) 测试",
        "ui": "UI 交互和工作流测试"
      },
      "integration": {
        "api": "API 端点测试",
        "auth": "身份验证和授权流程测试",
        "database": "数据库集成测试",
        "description": "测试不同系统组件之间的交互",
        "title": "集成测试",
        "websocket": "WebSocket 通信测试"
      },
      "msw": {
        "description": "用于隔离和可靠前端测试的 API 模拟",
        "isolation": "完全隔离测试，不依赖后端",
        "realistic": "逼真的 API 响应模拟",
        "reliability": "一致且可预测的测试行为",
        "speed": "无网络请求，测试执行更快",
        "title": "Mock Service Worker (MSW)"
      },
      "title": "测试策略概述",
      "unit": {
        "backend": {
          "count": "使用pytest的1,432个Python测试",
          "text": "后端:"
        },
        "coverage": {
          "text": "覆盖率:",
          "value": "后端和前端100%测试覆盖率"
        },
        "description": "对各个组件和函数进行全面的单元测试",
        "frontend": {
          "count": "使用Vitest的63个TypeScript测试",
          "text": "前端:"
        },
        "title": "单元测试"
      }
    },
    "running": {
      "all": {
        "title": "所有测试"
      },
      "backend": {
        "title": "后端测试 (Python/pytest)"
      },
      "e2e": {
        "title": "端到端测试 (Playwright)"
      },
      "frontend": {
        "description": "前端测试自动使用 Mock Service Worker 进行 API 模拟：",
        "msw": {
          "automatic": "MSW 自动拦截所有 API 请求",
          "description": "运行前端测试时：",
          "isolation": "每个测试都在完全隔离的环境中运行",
          "logging": "请求日志出现在控制台输出中",
          "realistic": "自动提供逼真的 API 响应",
          "title": "MSW 行为"
        },
        "title": "前端测试 (TypeScript/Vitest 与 MSW)"
      },
      "title": "运行测试"
    },
    "subtitle": "SysManage服务器的综合测试策略，包括单元测试、集成测试和使用Playwright的端到端测试。",
    "title": "测试"
  },
  "common": {
    "back_to_top": "返回顶部",
    "configuration": "配置",
    "documentation": "文档",
    "download": "下载",
    "features": "功能特性",
    "github": "GitHub",
    "installation": "安装",
    "learn_more": "了解更多",
    "next": "下一页",
    "overview": "概述",
    "previous": "上一页",
    "read_more": "阅读更多",
    "security": "安全",
    "troubleshooting": "故障排除"
  },
  "administration": {
    "host_management": {
      "agent_deployment": "代理部署",
      "agent_lifecycle_management": "代理生命周期管理",
      "agent_troubleshooting": "代理故障排除",
      "agent_updates": "代理更新",
      "approval_criteria": "审批标准",
      "approval_workflow": "审批工作流",
      "automation_integration": "自动化集成",
      "available_bulk_operations": "可用的批量操作",
      "best_practices": "主机管理最佳实践",
      "bulk_operation_process": "批量操作流程",
      "bulk_operations": "批量操作",
      "cloud_integration": "云集成",
      "collected_information": "收集的信息",
      "common_issues": "常见问题",
      "common_tag_categories": "常见标签类别",
      "configuration_management": "配置管理",
      "creating_host_groups": "创建主机组",
      "deployment_best_practices": "部署最佳实践",
      "deployment_methods": "部署方法",
      "diagnostic_tools": "诊断工具",
      "dynamic_group_assignment": "动态组分配",
      "group_types": "Group Types",
      "hardware_inventory": "Hardware Inventory",
      "host_groups": "Host Groups",
      "host_organization": "Host Organization",
      "host_registration_approval": "Host Registration and Approval",
      "inventory_management": "Infrastructure Inventory Management",
      "inventory_reports": "Inventory Reports",
      "key_concepts": "Key Concepts",
      "mass_actions": "Mass Management Actions",
      "operational_practices": "Operational Best Practices",
      "organizational_practices": "Organizational Best Practices",
      "overview": "概述",
      "registration_process": "Registration Process",
      "reviewing_pending_hosts": "Reviewing Pending Hosts",
      "security_practices": "Security Best Practices",
      "software_inventory": "Software Inventory",
      "software_reports": "Software Reports",
      "software_tracking": "Software Tracking",
      "subtitle": "Comprehensive guide to organizing and managing hosts, agents, and infrastructure inventory across your environment.",
      "tag_management": "Tag Management",
      "tagging_metadata": "Tagging and Metadata",
      "title": "主机管理",
      "update_process": "Update Process",
      "update_strategy": "Update Strategy"
    },
    "monitoring": {
      "access_control": "访问控制",
      "agent_performance": "Agent Performance",
      "alert_configuration": "Alert Configuration",
      "alert_design": "Alert Design Best Practices",
      "alert_suppression": "Alert Suppression",
      "alert_types": "Alert Types",
      "alerting_system": "Alerting System",
      "api_integration": "API 集成",
      "application_dashboards": "Application Dashboards",
      "application_service_metrics": "Application and Service Metrics",
      "channel_configuration": "Channel Configuration",
      "collection_intervals": "Collection Intervals",
      "collection_optimization": "Collection Optimization",
      "core_system_checks": "Core System Checks",
      "cpu_metrics": "CPU Metrics",
      "custom_health_checks": "Custom Health Checks",
      "custom_metrics": "Custom Metrics",
      "custom_script_monitoring": "Custom Script Monitoring",
      "dashboard_configuration": "Dashboard Configuration",
      "dashboard_customization": "Dashboard Customization",
      "dashboard_design": "Dashboard Design Best Practices",
      "dashboard_types": "Dashboard Types",
      "data_retention": "Data Retention Policies",
      "database_monitoring": "Database Monitoring",
      "escalation_management": "Escalation Management",
      "escalation_policies": "Escalation Policies",
      "executive_dashboards": "Executive Dashboards",
      "health_checks": "Health Check Configuration",
      "infrastructure_dashboards": "Infrastructure Dashboards",
      "layout_options": "Layout Options",
      "memory_metrics": "Memory Metrics",
      "metrics_collection": "Metrics Collection",
      "monitoring_best_practices": "Monitoring Best Practices",
      "monitoring_capabilities": "Monitoring Capabilities",
      "network_metrics": "Network Metrics",
      "notification_channels": "Notification Channels",
      "operational_practices": "Operational Best Practices",
      "operations_dashboards": "Operations Dashboards",
      "overview": "概述",
      "performance_optimization": "Monitoring Performance Optimization",
      "retention_strategies": "Retention Strategies",
      "service_health_checks": "Service Health Checks",
      "service_monitoring": "Service Monitoring",
      "storage_metrics": "Storage Metrics",
      "storage_optimization": "Storage Optimization",
      "subtitle": "Comprehensive monitoring setup including alerting, performance metrics, and system health tracking for proactive infrastructure management.",
      "supported_channels": "Supported Channels",
      "system_health": "System Health Checks",
      "system_performance_metrics": "System Performance Metrics",
      "threshold_configuration": "Threshold Configuration",
      "title": "监控和警报",
      "web_server_monitoring": "Web Server Monitoring",
      "widget_types": "Widget Types"
    },
    "subtitle": "Comprehensive system administration guides and procedures",
    "title": "Administration",
    "user_management": {
      "account_deactivation": "Account Deactivation",
      "account_deactivation_deletion": "Account Deactivation and Deletion",
      "account_deletion": "Account Deletion",
      "account_security": "Account Security",
      "active_session_monitoring": "Active Session Monitoring",
      "administrative_updates": "Administrative Updates",
      "administrator": "Administrator",
      "api_example": "API Example",
      "auditor": "Auditor",
      "authentication_methods": "Authentication Methods",
      "authentication_security": "Authentication Security",
      "built_in_roles": "Built-in Roles",
      "common_user_workflows": "Common User Management Workflows",
      "compliance_considerations": "Compliance Considerations",
      "creating_custom_roles": "Creating Custom Roles",
      "creating_user_accounts": "Creating User Accounts",
      "custom_roles": "Custom Roles",
      "employee_offboarding": "Employee Offboarding",
      "external_authentication": "External Authentication",
      "integration_issues": "Integration Issues",
      "ldap_active_directory": "LDAP/Active Directory Integration",
      "local_authentication": "Local Authentication",
      "login_problems": "Login Problems",
      "mfa_configuration": "MFA Configuration",
      "modifying_user_accounts": "Modifying User Accounts",
      "multi_factor_authentication": "Multi-Factor Authentication (MFA)",
      "new_employee_onboarding": "New Employee Onboarding",
      "oauth_openid": "OAuth 2.0 / OpenID Connect",
      "operator": "Operator",
      "overview": "概述",
      "password_policy_configuration": "Password Policy Configuration",
      "permission_issues": "Permission Issues",
      "permission_matrix": "Permission Matrix",
      "profile_updates": "Profile Updates",
      "role_change_process": "Role Change Process",
      "roles_permissions": "Roles and Permissions",
      "saml_integration": "SAML 2.0 Integration",
      "security_best_practices": "Security Best Practices",
      "security_incident_response": "Security Incident Response",
      "session_configuration": "Session Configuration",
      "session_management": "Session Management",
      "session_policies": "Session Policies",
      "subtitle": "Complete guide to managing user accounts, roles, permissions, and authentication in SysManage.",
      "supported_mfa_methods": "Supported MFA Methods",
      "title": "用户管理",
      "troubleshooting_user_issues": "Troubleshooting User Issues",
      "user_account_management": "User Account Management",
      "viewer": "Viewer",
      "web_interface": "Web Interface"
    },
    "grafana_setup": {
      "title": "Grafana集成设置",
      "subtitle": "使用OpenTelemetry将SysManage与Grafana集成以实现高级指标可视化和监控的完整指南。",
      "overview": "概述",
      "integration_benefits": "集成优势",
      "architecture_overview": "架构概述",
      "prerequisites": "先决条件",
      "grafana_server_requirements": "Grafana服务器要求",
      "network_connectivity": "网络连接",
      "required_ports": "所需端口",
      "installing_grafana_alloy": "安装Grafana Alloy",
      "repository_setup": "仓库设置",
      "debian_ubuntu": "Debian/Ubuntu",
      "rhel_centos": "RHEL/CentOS",
      "package_installation": "包安装",
      "service_enablement": "服务启用",
      "configuring_alloy_otlp": "配置Alloy以接收OTLP指标",
      "config_file_location": "配置文件位置",
      "otlp_receiver_setup": "OTLP接收器设置",
      "receiver_configuration": "接收器配置",
      "batch_processor": "批处理器",
      "batch_processor_configuration": "批处理器配置",
      "prometheus_exporter": "Prometheus导出器",
      "exporter_configuration": "导出器配置",
      "remote_write_config": "远程写入本地Prometheus",
      "remote_write_configuration": "远程写入配置",
      "complete_config_example": "完整配置示例",
      "configuring_prometheus": "配置Prometheus进行远程写入",
      "prometheus_config_description": "必须配置Prometheus以接受来自Grafana Alloy的远程写入请求。这需要启用远程写入接收器功能。",
      "enable_remote_write": "启用远程写入接收器",
      "enable_remote_write_description": "编辑Prometheus systemd服务文件以添加--web.enable-remote-write-receiver标志:",
      "apply_prometheus_changes": "应用配置更改",
      "warning": "警告",
      "prometheus_warning": "如果没有--web.enable-remote-write-receiver标志，Alloy在尝试向Prometheus写入指标时会收到\"404 Not Found\"错误。这是必需的配置步骤。",
      "restart_alloy_after_prometheus": "配置Prometheus后重启Alloy",
      "restart_alloy_description": "如果Alloy在配置Prometheus之前已经在运行并遇到错误，请重启它以清除任何重试退避状态:",
      "enabling_grafana_integration": "在SysManage中启用Grafana集成",
      "web_ui_settings": "Web UI设置",
      "accessing_settings": "访问集成设置",
      "providing_grafana_url": "提供Grafana URL",
      "url_format": "URL格式",
      "testing_connection": "测试连接",
      "deploying_opentelemetry": "在受管主机上部署OpenTelemetry",
      "using_deploy_button": "使用部署OpenTelemetry按钮",
      "deployment_process": "部署过程",
      "automatic_configuration": "自动配置",
      "service_status_monitoring": "服务状态监控",
      "verifying_deployment": "验证部署",
      "verifying_telemetry_flow": "验证遥测流",
      "checking_collector_logs": "检查收集器日志",
      "log_locations": "日志位置",
      "log_interpretation": "日志解释",
      "viewing_metrics_grafana": "在Grafana中查看指标",
      "creating_dashboards": "创建仪表板",
      "exploring_metrics": "探索指标",
      "sample_queries": "示例Prometheus查询",
      "troubleshooting": "常见问题故障排除",
      "connection_issues": "连接问题",
      "alloy_not_receiving_metrics": "Alloy未接收指标",
      "metrics_not_appearing_grafana": "指标未在Grafana中显示",
      "collector_service_issues": "OpenTelemetry收集器服务问题",
      "performance_issues": "性能问题",
      "security_considerations": "安全考虑",
      "tls_configuration": "TLS配置",
      "authentication": "认证",
      "network_security": "网络安全",
      "best_practices": "最佳实践",
      "deployment_strategy": "部署策略",
      "monitoring_setup": "监控设置最佳实践",
      "maintenance": "维护和更新"
    },
    "third_party_repositories": {
      "adding": {
        "examples": {
          "chocolatey_private": "Chocolatey私有仓库示例",
          "freebsd_custom": "FreeBSD自定义仓库示例",
          "homebrew_tap": "Homebrew Tap示例",
          "rhel_epel": "RHEL EPEL示例",
          "title": "仓库配置示例",
          "ubuntu_ppa": "Ubuntu PPA示例",
          "ubuntu_ppa_gpg": "Ubuntu PPA GPG"
        },
        "title": "添加第三方仓库",
        "web_interface": {
          "automatic_detection": "自动操作系统检测",
          "automatic_detection_desc": "当您为特定操作系统(例如Ubuntu 24.04)添加仓库时,SysManage会自动:",
          "detection_feature1": "识别运行该操作系统版本的所有主机",
          "detection_feature2": "向匹配的代理发送仓库配置",
          "detection_feature3": "如果提供则导入GPG密钥",
          "detection_feature4": "更新软件包缓存",
          "detection_feature5": "报告每个主机的成功/失败",
          "step1": "导航到设置 → 第三方仓库",
          "step2": "从下拉菜单中选择目标操作系统",
          "step3": "输入仓库配置(格式因操作系统而异)",
          "step4": "可选择提供GPG密钥URL或内容(适用于Linux系统)",
          "step5": "在预览窗格中查看配置",
          "step6": "点击添加仓库以应用到所有兼容主机",
          "step_by_step": "分步流程",
          "title": "使用Web界面"
        }
      },
      "api": {
        "add_repository": "添加仓库",
        "automation": {
          "bash_script": "Bash脚本示例",
          "title": "自动化示例"
        },
        "endpoints": {
          "title": "REST API端点"
        },
        "list_repositories": "列出仓库",
        "remove_repository": "删除仓库",
        "title": "API集成"
      },
      "best_practices": {
        "organizational": {
          "approval_workflow": "审批工作流:",
          "approval_workflow_desc": "在添加仓库前要求经理批准",
          "documentation": "文档记录:",
          "documentation_desc": "维护已批准仓库及其用途的注册表",
          "periodic_review": "定期审查:",
          "periodic_review_desc": "对所有第三方仓库进行季度审查",
          "testing_procedure": "测试程序:",
          "testing_procedure_desc": "为新仓库建立测试协议",
          "title": "组织最佳实践",
          "version_control": "版本控制:",
          "version_control_desc": "在版本控制系统中跟踪仓库配置"
        },
        "technical": {
          "backup_keys": "备份密钥:",
          "backup_keys_desc": "维护GPG密钥的离线备份",
          "mirror_repos": "镜像仓库:",
          "mirror_repos_desc": "托管关键第三方仓库的内部镜像",
          "monitor_changes": "监控变化:",
          "monitor_changes_desc": "为仓库配置更改设置警报",
          "pin_versions": "固定版本:",
          "pin_versions_desc": "尽可能使用特定版本的仓库URL",
          "staged_rollout": "分阶段部署:",
          "staged_rollout_desc": "按开发 → 测试 → 生产环境顺序部署",
          "title": "技术最佳实践"
        },
        "title": "最佳实践"
      },
      "database": {
        "field_added_by": "添加仓库的管理员",
        "field_descriptions": "字段描述",
        "field_gpg_key_content": "GPG密钥内容(URL的替代方案)",
        "field_gpg_key_url": "GPG签名密钥的URL(用于验证)",
        "field_os_name": "目标操作系统名称",
        "field_os_version": "特定操作系统版本",
        "field_repository_config": "完整的仓库配置文本",
        "table_description": "The",
        "table_title": "第三方仓库表",
        "title": "数据库架构"
      },
      "management": {
        "removing": {
          "description": "要删除第三方仓库:",
          "step1": "在列表中找到仓库",
          "step2": "点击删除按钮",
          "step3": "在对话框中确认删除",
          "step4": "SysManage从所有受影响的主机中删除配置",
          "step5": "在每个主机上更新软件包缓存",
          "title": "删除仓库",
          "warning": "警告"
        },
        "title": "仓库管理",
        "updating": {
          "description": "要修改现有仓库配置:",
          "note": "SysManage目前不支持就地编辑仓库配置,以防止意外更改整个基础设施。",
          "step1": "删除旧的仓库配置",
          "step2": "使用更新的设置添加新配置",
          "title": "更新仓库配置"
        },
        "viewing": {
          "configuration_preview": "配置预览:",
          "configuration_preview_desc": "查看完整的仓库配置",
          "description": "第三方仓库页面按操作系统组织显示所有已配置的仓库:",
          "host_count": "主机数量:",
          "host_count_desc": "使用此仓库的主机数量",
          "metadata": "元数据:",
          "metadata_desc": "由用户添加,时间戳,GPG密钥状态",
          "os_grouping": "操作系统分组:",
          "os_grouping_desc": "按目标操作系统分组的仓库(Ubuntu 24.04, RHEL 9等)",
          "title": "查看已配置的仓库"
        }
      },
      "overview": {
        "description": "SysManage提供跨多个操作系统的第三方软件包仓库的集中管理。此功能允许管理员为所有受支持的平台添加、配置和管理额外的软件源,除了OpenBSD,它在设计上不支持第三方仓库。",
        "feature_automatic_detection_desc": "特定于操作系统的仓库格式和GPG密钥处理",
        "feature_automatic_detection_title": "自动检测:",
        "feature_centralized_desc": "从单一界面管理整个机群的仓库",
        "feature_centralized_title": "集中管理:",
        "feature_cross_platform_desc": "在Debian、Ubuntu、RHEL、CentOS、Fedora、SUSE、FreeBSD、NetBSD、Windows和macOS上管理仓库",
        "feature_cross_platform_title": "跨平台支持:",
        "feature_gpg_key_desc": "自动导入和验证GPG密钥",
        "feature_gpg_key_title": "GPG密钥管理:",
        "feature_user_attribution_desc": "跟踪哪个管理员添加了每个仓库",
        "feature_user_attribution_title": "用户归属:",
        "feature_validation_desc": "语法验证和确认对话框",
        "feature_validation_title": "验证和安全:",
        "key_features": "关键特性",
        "title": "概述"
      },
      "related_api": "第三方仓库API →",
      "related_docs": "相关文档",
      "related_host_management": "主机管理 →",
      "related_package_management": "软件包管理 →",
      "security": {
        "best_practices": {
          "audit_regularly": "定期审计:",
          "audit_regularly_desc": "定期审查已配置的仓库",
          "document_purpose": "记录用途:",
          "document_purpose_desc": "维护关于每个仓库添加原因的文档",
          "gpg_keys": "使用GPG密钥:",
          "gpg_keys_desc": "在Linux系统上始终提供GPG密钥以进行软件包验证",
          "https": "HTTPS必需:",
          "https_desc": "使用HTTPS仓库URL以防止中间人攻击",
          "test_first": "先测试:",
          "test_first_desc": "先在非生产系统上测试新仓库",
          "title": "最佳实践",
          "verify_sources": "验证来源:",
          "verify_sources_desc": "仅添加来自受信任、已验证来源的仓库"
        },
        "compliance": {
          "approval_process": "建立添加仓库的正式审批流程",
          "audit_trail": "维护仓库添加和删除的审计跟踪",
          "description": "在受监管环境中管理第三方仓库时:",
          "license_compliance": "验证来自第三方来源的软件的许可证合规性",
          "risk_assessment": "在添加新来源之前进行安全风险评估",
          "title": "合规性考虑",
          "vendor_support": "记录第三方软件对供应商支持的影响"
        },
        "title": "安全考虑",
        "warnings": {
          "abandoned_repos": "废弃的仓库",
          "http_repos": "HTTP仓库",
          "malicious_packages": "恶意软件包",
          "title": "安全警告",
          "untrusted_keys": "不受信任的密钥"
        }
      },
      "subtitle": "为Debian、Ubuntu、基于RHEL、基于SUSE、FreeBSD、NetBSD、Windows和macOS系统管理基础设施中的第三方软件包仓库的综合指南。",
      "supported_systems": {
        "debian_ubuntu": {
          "gpg_keys": "GPG密钥:",
          "gpg_keys_desc": "通过以下方式导入",
          "repository_format": "仓库格式:",
          "storage_location": "存储位置:",
          "title": "Debian和Ubuntu",
          "update_command": "更新命令:"
        },
        "freebsd": {
          "gpg_keys": "GPG密钥:",
          "gpg_keys_desc": "通过以下方式进行软件包签名验证",
          "repository_format": "仓库格式:",
          "repository_format_desc": "仓库URL配置",
          "storage_location": "存储位置:",
          "title": "FreeBSD",
          "update_command": "更新命令:"
        },
        "macos": {
          "add_command": "添加命令:",
          "authentication": "认证:",
          "authentication_desc": "私有tap的基于Git的认证",
          "repository_format": "仓库格式:",
          "repository_format_desc": "Tap URL(GitHub或自定义)",
          "title": "macOS (Homebrew)",
          "update_command": "更新命令:"
        },
        "netbsd": {
          "gpg_keys": "GPG密钥:",
          "gpg_keys_desc": "通过以下方式进行软件包签名验证",
          "repository_format": "仓库格式:",
          "repository_format_desc": "环境变量",
          "storage_location": "存储位置:",
          "title": "NetBSD",
          "update_command": "更新命令:"
        },
        "openbsd": {
          "description": "OpenBSD在设计上不支持第三方软件包仓库。OpenBSD软件包系统专门使用由OpenBSD项目维护的官方特定版本仓库。这是OpenBSD团队在安全性和稳定性方面的有意设计决策。",
          "title": "OpenBSD - 不支持"
        },
        "rhel_based": {
          "gpg_keys": "GPG密钥:",
          "gpg_keys_desc": "通过以下方式导入",
          "repository_format": "仓库格式:",
          "repository_format_desc": "带有INI样式配置的文件",
          "storage_location": "存储位置:",
          "title": "基于RHEL (CentOS, Fedora, Rocky, AlmaLinux)",
          "update_command": "更新命令:",
          "update_command_desc": "或"
        },
        "suse_based": {
          "gpg_keys": "GPG密钥:",
          "gpg_keys_desc": "通过以下方式导入",
          "repository_format": "仓库格式:",
          "repository_format_desc": "通过以下方式管理的文件",
          "storage_location": "存储位置:",
          "title": "基于SUSE (openSUSE, SLES)",
          "update_command": "更新命令:"
        },
        "title": "支持的操作系统",
        "windows": {
          "add_command": "添加命令:",
          "authentication": "认证:",
          "authentication_desc": "支持用户名/密码和API密钥认证",
          "repository_format": "仓库格式:",
          "repository_format_desc": "仓库URL或本地路径",
          "ssl_verification": "SSL验证:",
          "ssl_verification_desc": "可选的证书验证绕过",
          "title": "Windows (Chocolatey)"
        }
      },
      "title": "第三方仓库管理",
      "troubleshooting": {
        "common_issues": {
          "title": "常见问题和解决方案"
        },
        "diagnostic_commands": {
          "debian_ubuntu": "Debian/Ubuntu",
          "description": "在目标主机上运行这些命令以诊断仓库问题:",
          "freebsd": "FreeBSD",
          "rhel_based": "基于RHEL的系统",
          "title": "诊断命令"
        },
        "gpg_key_import_failed": "GPG密钥导入失败",
        "gpg_key_import_failed_solution1": "验证目标主机可以访问GPG密钥URL",
        "gpg_key_import_failed_solution2": "检查网络连接和防火墙规则",
        "gpg_key_import_failed_solution3": "尝试直接提供GPG密钥内容而不是URL",
        "gpg_key_import_failed_solution4": "验证密钥格式对于操作系统是正确的",
        "gpg_key_import_failed_solutions": "GPG密钥导入失败解决方案",
        "gpg_key_import_failed_symptoms": "GPG密钥导入失败症状",
        "hosts_not_receiving": "某些主机未接收仓库配置",
        "hosts_not_receiving_solution1": "验证主机在线并连接到SysManage",
        "hosts_not_receiving_solution2": "检查操作系统名称和版本是否完全匹配",
        "hosts_not_receiving_solution3": "审查受影响主机的WebSocket连接状态",
        "hosts_not_receiving_solution4": "检查代理权限问题(需要root/管理员)",
        "hosts_not_receiving_solutions": "主机未接收解决方案",
        "hosts_not_receiving_symptoms": "主机未接收症状",
        "permission_denied": "权限被拒绝错误",
        "permission_denied_solution1": "确保SysManage代理以提升的权限运行",
        "permission_denied_solution2": "检查仓库配置目录的文件权限",
        "permission_denied_solution3": "验证SELinux/AppArmor策略允许仓库修改",
        "permission_denied_solutions": "权限被拒绝解决方案",
        "permission_denied_symptoms": "权限被拒绝症状",
        "repository_not_found": "添加后未找到仓库",
        "repository_not_found_solution1": "验证仓库URL正确且可访问",
        "repository_not_found_solution2": "检查操作系统版本是否与仓库配置匹配",
        "repository_not_found_solution3": "确保已在目标主机上更新软件包缓存",
        "repository_not_found_solution4": "查看代理日志中的错误消息",
        "repository_not_found_solutions": "仓库未找到解决方案",
        "repository_not_found_symptoms": "仓库未找到症状",
        "title": "故障排除"
      }
    }
  },
  "agent_docs": {
    "architecture": {
      "approval": "<strong>Approval Process</strong> - Registers with system information and awaits administrator approval",
      "auto_discovery": "<strong>Auto-Discovery</strong> - Discovers SysManage servers on the network (if no configuration exists)",
      "description": "The agent operates as a persistent service with the following workflow:",
      "execution": "<strong>Command Execution</strong> - Listens for and executes commands with validation and security controls",
      "monitoring": "<strong>Monitoring</strong> - Monitors system health and sends periodic heartbeat messages",
      "mtls_setup": "<strong>mTLS Setup</strong> - Retrieves client certificates after approval for enhanced security",
      "registration": "<strong>Registration</strong> - Connects to server via secure WebSocket with authentication tokens",
      "reporting": "<strong>Reporting</strong> - Reports command results and system status with message integrity",
      "title": "Agent Architecture"
    },
    "configuration": {
      "auto_discovery": "Auto-discovery setup (recommended)",
      "description": "Agent configuration options including auto-discovery and manual setup.",
      "link": "Configuration Guide →",
      "logging": "Logging and internationalization",
      "manual": "Manual server configuration",
      "security": "Security and authentication options",
      "title": "⚙️ Configuration"
    },
    "cross_platform": {
      "bsd": "BSD-specific considerations",
      "description": "Platform-specific features, package managers, and system integration details.",
      "link": "Cross-Platform Guide →",
      "linux": "Linux distributions and package managers",
      "macos": "macOS launchd configuration",
      "title": "🌍 Cross-Platform Support",
      "windows": "Windows service integration"
    },
    "description": "Complete documentation for SysManage agent installation, configuration, and cross-platform management.",
    "header": {
      "subtitle": "Complete guide for installing, configuring, and managing SysManage agents across all supported platforms.",
      "title": "Agent Documentation"
    },
    "installation": {
      "description": "Platform-specific installation instructions for all supported operating systems.",
      "link": "Installation Guide →",
      "methods": "Installation methods (source, packages)",
      "prerequisites": "Prerequisites and system requirements",
      "service": "Service configuration",
      "title": "🚀 Installation",
      "venv": "Virtual environment setup"
    },
    "navigation": {
      "api": "API Reference →",
      "server": "← Server Documentation",
      "title": "快速导航"
    },
    "overview": {
      "auto_discovery": "<strong>Auto-Discovery</strong> - Automatic server detection on the network",
      "description": "The SysManage agent is a lightweight, secure, cross-platform Python application that connects to the SysManage server via WebSocket for real-time system monitoring and management.",
      "features_title": "Key Features",
      "lightweight": "<strong>Lightweight</strong> - Minimal resource footprint and dependencies",
      "multilingual": "<strong>Multi-language Support</strong> - Native support for 14 languages",
      "package_management": "<strong>Cross-platform Package Management</strong> - Native support for all major package managers",
      "platform_freebsd": "🔒 FreeBSD",
      "platform_linux": "🐧 Linux (Ubuntu, Debian, CentOS, RHEL, Fedora)",
      "platform_macos": "🍎 macOS (Intel and Apple Silicon)",
      "platform_openbsd": "🛡️ OpenBSD",
      "platform_windows": "🪟 Windows (10, 11, Server 2019/2022)",
      "platforms_title": "Supported Platforms",
      "realtime_communication": "<strong>Real-time Communication</strong> - WebSocket-based instant responsiveness",
      "secure_design": "<strong>Secure by Design</strong> - mTLS, certificate-based authentication, no inbound ports",
      "title": "概述",
      "platform_netbsd": "🔧 NetBSD"
    },
    "privileged": {
      "cross_platform": "Cross-platform privileged execution",
      "description": "Running agents with elevated privileges for package management and system administration.",
      "link": "Privileged Execution →",
      "scripts": "Automated privilege scripts",
      "security": "Security considerations and best practices",
      "service_account": "Service account configuration",
      "title": "🔐 Privileged Execution"
    },
    "section_title": "代理",
    "security": {
      "certificates": "Certificate management",
      "description": "Agent security features, mTLS configuration, and security best practices.",
      "link": "Security Documentation →",
      "mtls": "Mutual TLS (mTLS) authentication",
      "network": "Network security and communication",
      "scanning": "Security scanning and validation",
      "title": "🔒 Security"
    },
    "title": "Agent Documentation - SysManage",
    "troubleshooting": {
      "connection": "Connection and network issues",
      "debugging": "Log analysis and debugging",
      "description": "Common issues, debugging techniques, and solutions for agent problems.",
      "link": "Troubleshooting Guide →",
      "permissions": "Permission and privilege problems",
      "platform": "Platform-specific troubleshooting",
      "title": "🔧 Troubleshooting"
    }
  },
  "agent_installation": {
    "breadcrumb": {
      "agent": "代理",
      "documentation": "文档",
      "installation": "安装"
    },
    "configuration": {
      "auto_discovery": {
        "agent_ports": "代理端口（出站）：",
        "description": "SysManage 代理包含自动服务器发现功能，无需手动配置：",
        "how_it_works": "🔍 How Auto-Discovery Works",
        "network_ports": "🌐 Required Network Ports",
        "step1": "无需配置：",
        "step1_desc": "如果不存在配置文件，代理会自动尝试发现服务器",
        "step2": "网络扫描：",
        "step2_desc": "发送 UDP 广播发现请求并侦听服务器公告",
        "step3": "服务器评估：",
        "step3_desc": "使用评分系统（SSL 偏好，本地网络偏好）",
        "step4": "自动配置：",
        "step4_desc": "写入完整的配置文件并开始正常操作",
        "tcp_6443": "TCP 6443",
        "tcp_6443_desc": "（或服务器端口）- 与发现的服务器的 HTTPS 连接",
        "title": "自动发现（推荐）",
        "udp_31337": "UDP 31337",
        "udp_31337_desc": "向服务器发送发现请求",
        "udp_31338": "UDP 31338",
        "udp_31338_desc": "Listen for server announcements"
      },
      "manual": {
        "create_text": "Or create configuration file manually at:",
        "generator_link": "Configuration Builder Tool",
        "generator_suffix": "to generate customized agent configuration files for your environment.",
        "generator_text": "Use the interactive",
        "generator_title": "💡 Configuration Generator Available",
        "linux_path": "Linux/macOS/BSD:",
        "title": "Manual Configuration (Alternative)",
        "windows_path": "Windows:"
      },
      "title": "配置"
    },
    "description": "跨 Linux、Windows、macOS、FreeBSD、OpenBSD 和 NetBSD 平台的 SysManage 代理完整安装指南。",
    "header": {
      "subtitle": "Complete step-by-step installation guide for deploying SysManage agents across all supported platforms.",
      "title": "Agent Installation Guide"
    },
    "installation": {
      "method1": {
        "title": "从源代码安装",
        "desc": "对于FreeBSD、OpenBSD、NetBSD和其他平台，请从源代码手动安装："
      },
      "method2": {
        "title": "方法3: 直接安装"
      },
      "title": "Installation Methods",
      "apt": {
        "title": "📦 方法1: APT仓库 (Ubuntu/Debian - 推荐)",
        "supported": "支持的平台：",
        "platforms_ubuntu_2204": "Ubuntu 22.04 LTS 及更高版本",
        "platforms_debian_11": "Debian 11 及更高版本",
        "platforms_note": "该软件包在自包含的 virtualenv 中包含所有 Python 依赖项，因此可在任何具有 Python 3.10 或更高版本的 Ubuntu/Debian 版本上运行。",
        "quick_start": "快速安装",
        "benefits_title": "✨ APT 安装的好处",
        "automatic": "自动更新：",
        "automatic_desc": "通过标准 apt upgrade 获取新版本",
        "dependencies": "依赖管理：",
        "dependencies_desc": "软件包中包含所有 Python 依赖项",
        "systemd": "Systemd 集成：",
        "systemd_desc": "服务自动配置和启用",
        "user": "用户和权限：",
        "user_desc": "系统用户和 sudoers 自动配置",
        "directories": "目录结构：",
        "directories_desc": "配置、日志和数据目录自动创建",
        "whats_installed": "📂 安装内容",
        "component": "组件",
        "location": "位置",
        "application": "应用程序",
        "config_dir": "配置目录",
        "main_config": "主配置文件",
        "database": "数据库",
        "logs": "日志",
        "systemd_service": "Systemd 服务",
        "sudoers": "Sudoers 文件",
        "version_management": "🔄 版本管理",
        "uninstall": "🗑️ 卸载",
        "security_note": "🔒 安全说明",
        "security_text": "由于软件包未进行 GPG 签名，仓库当前使用 [trusted=yes]。对于生产环境，将在未来版本中添加 GPG 签名。软件包通过 HTTPS 从 GitHub Pages 提供，提供传输级别的安全性。",
        "ppa_intro": "对于Ubuntu用户，我们还通过Launchpad PPA提供官方软件包，自动为多个Ubuntu版本构建：",
        "ppa_title": "🔷 Launchpad PPA（Ubuntu的替代方案）",
        "ppa_supported": "支持的Ubuntu版本：",
        "ppa_22_04": "Ubuntu 22.04 LTS (Jammy Jellyfish)",
        "ppa_24_04": "Ubuntu 24.04 LTS (Noble Numbat)",
        "ppa_24_10": "Ubuntu 24.10 (Oracular Oriole)",
        "ppa_25_04": "Ubuntu 25.04 (Plucky Puffin)",
        "ppa_25_10": "Ubuntu 25.10 (Questing Quetzal)",
        "ppa_benefits_title": "✨ Launchpad PPA的优势",
        "ppa_benefits_official": "官方Ubuntu PPA：",
        "ppa_benefits_official_desc": "原生Ubuntu软件包构建和分发",
        "ppa_benefits_multi": "多版本支持：",
        "ppa_benefits_multi_desc": "自动为多个Ubuntu版本构建",
        "ppa_benefits_trusted": "可信来源：",
        "ppa_benefits_trusted_desc": "由Canonical的Launchpad构建和托管",
        "ppa_quick_start": "通过PPA快速安装",
        "ppa_note": "注意：PPA构建针对每个特定的Ubuntu版本进行了优化，可能与通用APT存储库的依赖关系略有不同。"
      },
      "rpm": {
        "title": "📦 RPM方式: YUM/DNF仓库 (RHEL/CentOS/Fedora/Rocky/AlmaLinux - 推荐)",
        "supported": "支持的平台：",
        "platforms_rhel9": "RHEL 9 / CentOS Stream 9 / Rocky 9 / AlmaLinux 9 - Python 3.9+ (2022+)",
        "platforms_rhel8": "RHEL 8 / CentOS 8 / Rocky 8 / AlmaLinux 8 - Python 3.11 via AppStream (2019+)",
        "platforms_fedora": "Fedora 38+ - Python 3.11+ (2023+)",
        "platforms_note": "该软件包在自包含的 virtualenv 中包含所有 Python 依赖项，因此可在任何具有 Python 3.10 或更高版本的基于 Red Hat 的发行版上运行。",
        "quick_start_el9": "快速安装 - EL9 (RHEL 9, Rocky 9, AlmaLinux 9, CentOS Stream 9)",
        "quick_start_el8": "快速安装 - EL8 (RHEL 8, Rocky 8, AlmaLinux 8)",
        "quick_start_fedora": "快速安装 - Fedora 38+",
        "benefits_title": "✨ RPM 安装的好处",
        "automatic": "自动更新：",
        "automatic_desc": "通过标准 dnf upgrade / yum upgrade 获取新版本",
        "dependencies": "依赖管理：",
        "dependencies_desc": "软件包中包含所有 Python 依赖项",
        "systemd": "Systemd 集成：",
        "systemd_desc": "服务自动配置和启用",
        "user": "用户和权限：",
        "user_desc": "系统用户和 sudoers 自动配置，具有 DNF/YUM、firewalld、SELinux 权限",
        "directories": "目录结构：",
        "directories_desc": "配置、日志和数据目录自动创建",
        "whats_installed": "📂 安装内容",
        "component": "组件",
        "location": "位置",
        "application": "应用程序",
        "config_dir": "配置目录",
        "main_config": "主配置文件",
        "database": "数据库",
        "logs": "日志",
        "systemd_service": "Systemd 服务",
        "sudoers": "Sudoers 文件",
        "version_management": "🔄 版本管理",
        "uninstall": "🗑️ 卸载",
        "security_note": "🔒 安全说明",
        "security_text": "由于软件包未进行 GPG 签名，仓库当前使用 gpgcheck=0。对于生产环境，将在未来版本中添加 GPG 签名。软件包通过 HTTPS 从 GitHub Pages 提供，提供传输级别的安全性。",
        "copr_intro": "对于 Fedora、RHEL、CentOS 和 Amazon Linux 用户，我们通过 Fedora Copr 提供官方软件包，并为多个发行版自动构建：",
        "copr_title": "🔷 Fedora Copr（替代方案）",
        "copr_supported": "支持的发行版：",
        "copr_fedora_41": "Fedora 41（Python 3.13）",
        "copr_fedora_42": "Fedora 42（Python 3.13）",
        "copr_fedora_43": "Fedora 43（Python 3.14）",
        "copr_epel_9": "EPEL 9（RHEL 9、Rocky Linux 9、AlmaLinux 9、CentOS Stream 9 - Python 3.9）",
        "copr_epel_10": "EPEL 10（RHEL 10、CentOS Stream 10 - Python 3.12）",
        "copr_amazon": "Amazon Linux 2023（Python 3.9）",
        "copr_note": "注意：不支持 EPEL 8，因为它使用 Python 3.6，对于我们的依赖项来说太旧了。",
        "copr_quick_start": "通过 Copr 快速安装",
        "copr_benefits_title": "✨ Copr 的优势",
        "copr_benefits_official": "官方 Copr 仓库：",
        "copr_benefits_official_desc": "原生 Fedora/RHEL 包构建基础设施",
        "copr_benefits_automatic": "自动构建：",
        "copr_benefits_automatic_desc": "从标记的发布自动触发构建",
        "copr_benefits_multi": "多发行版：",
        "copr_benefits_multi_desc": "单个命令适用于 Fedora、RHEL、CentOS 和 Amazon Linux",
        "copr_benefits_python": "Python 版本支持：",
        "copr_benefits_python_desc": "为 Python 3.9、3.12、3.13 和 3.14 优化的 wheels",
        "copr_benefits_offline": "离线安装：",
        "copr_benefits_offline_desc": "所有 Python 依赖项都打包在包中",
        "copr_benefits_updates": "轻松更新：",
        "copr_benefits_updates_desc": "标准 dnf upgrade 工作流程",
        "copr_specific_versions": "📋 特定于发行版的说明",
        "copr_fedora_title": "Fedora 41、42、43：",
        "copr_rhel_9_title": "RHEL 9 / Rocky 9 / AlmaLinux 9 / CentOS Stream 9：",
        "copr_rhel_10_title": "RHEL 10 / CentOS Stream 10：",
        "copr_amazon_title": "Amazon Linux 2023：",
        "copr_uninstall": "🗑️ 卸载",
        "copr_build_status": "🔗 查看构建状态",
        "copr_build_status_text": "您可以在以下位置查看当前构建状态并浏览所有可用版本："
      },
      "macos": {
        "tab": "macOS"
      },
      "macos_pkg": {
        "title": "📦 软件包安装程序 (macOS - 推荐)",
        "supported": "支持的平台：",
        "platforms_bigsur": "macOS 11.0 (Big Sur) 及更高版本",
        "platforms_apple_silicon": "Apple Silicon (ARM64) 原生",
        "platforms_intel": "Intel (x86_64) 兼容",
        "platforms_note": "软件包使用系统 Python (3.9+) 并自动检测您的架构以安装原生二进制文件。",
        "quick_start": "快速安装",
        "benefits_title": "✨ 软件包安装的优势",
        "automatic": "自动启动：",
        "automatic_desc": "使用 LaunchDaemon 配置服务以在启动时自动启动",
        "dependencies": "依赖管理：",
        "dependencies_desc": "所有 Python 依赖项都包含在虚拟环境中",
        "launchd": "LaunchDaemon 集成：",
        "launchd_desc": "服务自动配置和加载",
        "user": "用户和权限：",
        "user_desc": "以 root 身份运行，具有适当的系统权限",
        "directories": "目录结构：",
        "directories_desc": "配置、日志和数据目录自动创建",
        "architecture": "架构检测：",
        "architecture_desc": "自动安装 ARM64 或 x86_64 原生二进制文件",
        "whats_installed": "📂 安装内容",
        "component": "组件",
        "location": "位置",
        "application": "应用程序",
        "config_dir": "配置目录",
        "main_config": "主配置文件",
        "example_config": "配置示例",
        "database": "数据库",
        "logs": "日志",
        "launchd_plist": "LaunchDaemon",
        "service_management": "🔧 服务管理",
        "checksum_verify": "🔐 校验和验证",
        "uninstall": "🗑️ 卸载"
      },
      "windows_msi": {
        "title": "📦 MSI安装程序（Windows - 推荐）",
        "supported": "支持的平台：",
        "platforms_windows10": "Windows 10（1809）或更高版本",
        "platforms_windows11": "Windows 11",
        "platforms_server": "Windows Server 2019或更高版本",
        "platforms_arch": "架构：x64和ARM64",
        "platforms_note": "MSI安装程序包含所有依赖项（Python 3.12、VC++ Redistributable），并使用NSSM自动将代理安装为Windows服务。",
        "quick_start": "快速安装",
        "benefits_title": "✨ MSI安装程序的优势",
        "automatic": "全自动安装：",
        "automatic_desc": "Python、VC++ Redistributable和所有依赖项自动安装",
        "service": "Windows服务集成：",
        "service_desc": "使用NSSM（Non-Sucking Service Manager）配置",
        "dependencies": "依赖项管理：",
        "dependencies_desc": "所有Python依赖项包含在隔离的virtualenv中",
        "upgrade": "无缝升级：",
        "upgrade_desc": "安装程序自动更新，无需手动卸载",
        "architecture": "架构检测：",
        "architecture_desc": "x64和ARM64 Windows的单独软件包",
        "directories": "目录结构：",
        "directories_desc": "自动创建配置、日志和数据目录",
        "whats_installed": "📂 安装内容",
        "component": "组件",
        "location": "位置",
        "application": "应用程序",
        "config_dir": "配置文件",
        "example_config": "示例配置",
        "database": "数据库",
        "logs": "日志",
        "service_files": "Windows服务",
        "service_management": "🔄 服务管理",
        "verify_checksum": "🔒 验证包完整性",
        "uninstall": "🗑️ 卸载",
        "uninstall_gui": "使用控制面板",
        "uninstall_gui_steps": "1. 打开**设置** > **应用** > **应用和功能**\\n2. 搜索\"SysManage Agent\"\\n3. 点击**卸载**",
        "uninstall_powershell": "使用PowerShell",
        "architecture_note": "💡 架构注意事项",
        "architecture_text": "确保为您的架构下载正确的安装程序：\\n- **x64**：适用于Intel/AMD 64位系统\\n- **ARM64**：适用于ARM64 Windows设备（Surface Pro X等）"
      },
      "windows": {
        "tab": "Windows"
      },
      "other": {
        "tab": "其他平台"
      },
      "zypper_opensuse": {
        "title": "📦 Zypper仓库（openSUSE - 推荐）",
        "supported": "支持的平台：",
        "platforms_leap": "openSUSE Leap 15.x - Python 3.11（2021+）",
        "platforms_tumbleweed": "openSUSE Tumbleweed - Python 3.11+（滚动发行）",
        "platforms_note": "软件包在自包含的virtualenv中包含所有Python依赖项。",
        "quick_start_leap": "快速安装 - openSUSE Leap 15.x",
        "quick_start_tumbleweed": "快速安装 - openSUSE Tumbleweed",
        "benefits_title": "✨ Zypper安装的优势",
        "automatic": "自动更新：",
        "automatic_desc": "通过标准zypper update获取新版本",
        "dependencies": "依赖项管理：",
        "dependencies_desc": "软件包中包含所有Python依赖项",
        "systemd": "Systemd集成：",
        "systemd_desc": "服务自动配置和启用",
        "isolation": "隔离环境：",
        "isolation_desc": "不与系统Python包冲突",
        "version_management": "🔄 版本管理",
        "uninstall": "🗑️ 卸载",
        "obs_intro": "对于openSUSE和SLES用户，我们通过openSUSE Build Service（OBS）提供官方软件包，自动为多个发行版构建：",
        "obs_title": "🔷 openSUSE Build Service（替代方案）",
        "obs_supported": "支持的发行版：",
        "obs_tumbleweed": "openSUSE Tumbleweed（滚动发布）",
        "obs_leap_15_6": "openSUSE Leap 15.6",
        "obs_leap_15_5": "openSUSE Leap 15.5",
        "obs_sle_15_sp6": "SUSE Linux Enterprise 15 SP6",
        "obs_sle_15_sp5": "SUSE Linux Enterprise 15 SP5",
        "obs_benefits_title": "✨ OBS的优势",
        "obs_benefits_official": "官方OBS存储库：",
        "obs_benefits_official_desc": "原生openSUSE/SLES软件包构建",
        "obs_benefits_multi": "多发行版支持：",
        "obs_benefits_multi_desc": "自动为Tumbleweed、Leap和SLES构建",
        "obs_benefits_integration": "YaST集成：",
        "obs_benefits_integration_desc": "与openSUSE工具无缝集成",
        "obs_quick_start_leap": "通过OBS快速安装 - openSUSE Leap",
        "obs_quick_start_tumbleweed": "通过OBS快速安装 - openSUSE Tumbleweed",
        "obs_quick_start_sles": "通过OBS快速安装 - SLES 15",
        "obs_note": "注意：OBS构建针对每个特定的发行版版本进行了优化。软件包在openSUSE Build Service基础设施上从源代码构建。",
        "obs_view_builds": "查看构建状态：https://build.opensuse.org/package/show/home:bryaneverly/sysmanage-agent"
      },
      "zypper_sles": {
        "title": "📦 Zypper仓库（SLES - 推荐）",
        "supported": "支持的平台：",
        "platforms_sles15": "SUSE Linux Enterprise Server 15 - Python 3.11（2018+）",
        "platforms_note": "软件包在自包含的virtualenv中包含所有Python依赖项。",
        "quick_start": "快速安装 - SLES 15",
        "benefits_title": "✨ Zypper安装的优势",
        "automatic": "自动更新：",
        "automatic_desc": "通过标准zypper update获取新版本",
        "dependencies": "依赖项管理：",
        "dependencies_desc": "软件包中包含所有Python依赖项",
        "systemd": "Systemd集成：",
        "systemd_desc": "服务自动配置和启用",
        "enterprise": "企业支持：",
        "enterprise_desc": "适用于SUSE企业环境的生产就绪",
        "version_management": "🔄 版本管理",
        "uninstall": "🗑️ 卸载",
        "enterprise_note": "🏢 企业考虑事项",
        "subscription": "订阅：",
        "subscription_desc": "SLES需要有效订阅才能进行系统更新",
        "firewall": "防火墙：",
        "firewall_desc": "为出站HTTPS配置SuSEfirewall2或firewalld",
        "apparmor": "AppArmor：",
        "apparmor_desc": "如果使用AppArmor，可能需要调整配置文件",
        "obs_intro": "对于openSUSE和SLES用户，我们通过openSUSE Build Service（OBS）提供官方软件包，自动为多个发行版构建：",
        "obs_title": "🔷 openSUSE Build Service（替代方案）",
        "obs_supported": "支持的发行版：",
        "obs_tumbleweed": "openSUSE Tumbleweed（滚动发布）",
        "obs_leap_15_6": "openSUSE Leap 15.6",
        "obs_leap_15_5": "openSUSE Leap 15.5",
        "obs_sle_15_sp6": "SUSE Linux Enterprise 15 SP6",
        "obs_sle_15_sp5": "SUSE Linux Enterprise 15 SP5",
        "obs_benefits_title": "✨ OBS的优势",
        "obs_benefits_official": "官方OBS存储库：",
        "obs_benefits_official_desc": "原生openSUSE/SLES软件包构建",
        "obs_benefits_multi": "多发行版支持：",
        "obs_benefits_multi_desc": "自动为Tumbleweed、Leap和SLES构建",
        "obs_benefits_integration": "YaST集成：",
        "obs_benefits_integration_desc": "与openSUSE工具无缝集成",
        "obs_quick_start_leap": "通过OBS快速安装 - openSUSE Leap",
        "obs_quick_start_tumbleweed": "通过OBS快速安装 - openSUSE Tumbleweed",
        "obs_quick_start_sles": "通过OBS快速安装 - SLES 15",
        "obs_note": "注意：OBS构建针对每个特定的发行版版本进行了优化。软件包在openSUSE Build Service基础设施上从源代码构建。",
        "obs_view_builds": "查看构建状态：https://build.opensuse.org/package/show/home:bryaneverly/sysmanage-agent"
      },
      "snap_strict": {
        "title": "📦 Snap 软件包 - 严格限制（只读监控）",
        "note": "注意：",
        "note_text": "由于 Snap Store 政策，管理类 snap（需要系统修改功能的）不被批准用于经典限制。严格限制版本仅提供只读监控。",
        "limitation": "⚠️ 重要限制",
        "limitation_text": "此 snap 仅提供只读监控功能。它不能：",
        "no_packages": "安装或更新系统软件包",
        "no_firewall": "管理防火墙规则",
        "no_scripts": "执行管理脚本",
        "no_certificates": "安装系统证书",
        "full_management": "要获得完整的系统管理功能，请使用上述 APT/DEB 或源代码安装方法。",
        "supported": "支持的平台：",
        "platforms": "Ubuntu 22.04+（core22 基础）",
        "quick_start": "快速安装",
        "benefits_title": "✨ Snap 安装的优势",
        "benefit_sandboxed": "沙盒化且安全",
        "benefit_automatic": "自动更新",
        "benefit_easy": "简单安装",
        "benefit_monitoring": "只读监控，不修改系统",
        "uninstall": "🗑️ 卸载",
        "store_link": "在 Snap Store 上查看",
        "more_info": "有关 Snap 限制的更多信息，请参阅：",
        "docs_link": "Snap 限制文档"
      },
      "flatpak": {
        "tab": "Flatpak",
        "title": "📦 Flatpak（通用Linux包）",
        "supported": "适用于任何支持Flatpak的Linux发行版：",
        "platforms_ubuntu": "Ubuntu / Debian",
        "platforms_fedora": "Fedora / RHEL / CentOS",
        "platforms_opensuse": "openSUSE / SLES",
        "platforms_arch": "Arch Linux",
        "platforms_others": "以及更多...",
        "sandboxed_note": "注意：Flatpak在沙箱环境中运行，系统访问受限。要获得完整的系统管理功能，请使用原生软件包。",
        "repository_method": "方法1：从SysManage仓库安装（推荐）",
        "bundle_method": "方法2：从Bundle文件安装",
        "benefits_title": "✨ Flatpak安装的优势",
        "universal": "通用性：",
        "universal_desc": "适用于任何Linux发行版",
        "dependencies": "自包含：",
        "dependencies_desc": "包含所有依赖项，包括Python运行时",
        "automatic_updates": "自动更新：",
        "automatic_updates_desc": "使用标准flatpak update命令更新",
        "sandboxed": "沙箱化：",
        "sandboxed_desc": "在隔离环境中运行以提供额外安全性",
        "no_conflicts": "无冲突：",
        "no_conflicts_desc": "与系统软件包隔离",
        "limitations_title": "⚠️ 限制",
        "limitation_system_access": "由于Flatpak沙箱导致系统访问受限",
        "limitation_read_only": "某些系统目录为只读",
        "limitation_privileged": "特权操作功能受限",
        "limitation_recommendation": "要进行完整的系统管理，请使用原生APT/RPM软件包",
        "version_management": "🔄 版本管理",
        "config_location": "📂 配置和数据位置",
        "component": "组件",
        "location": "位置",
        "config_file": "配置文件",
        "database": "数据库",
        "logs": "日志"
      }
    },
    "navigation": {
      "next": "Configuration Guide →",
      "prev": "← Agent Documentation"
    },
    "openbsd_notes": {
      "description": "OpenBSD users require special attention to Rust installation:",
      "security_note_text": "The agent requires cryptography support for secure certificate-based authentication. Rust is mandatory for building these security packages. The run script automatically detects if Rust is available and uses appropriate installation methods.",
      "security_note_title": "🔐 Security Note",
      "title": "OpenBSD-Specific Installation Notes"
    },
    "permissions": {
      "certificate": {
        "linux_path": "Linux/macOS/BSD:",
        "title": "Certificate Storage",
        "windows_path": "Windows:"
      },
      "config": {
        "title": "Configuration File"
      },
      "dev_note_text": "During development and testing, the application automatically detects test environments and uses temporary directories to avoid permission issues.",
      "dev_note_title": "📝 Development Note",
      "log": {
        "title": "Log Directory"
      },
      "title": "Required Directories and Permissions",
      "user": {
        "title": "Service User Account"
      }
    },
    "prerequisites": {
      "centos": {
        "tab": "CentOS/RHEL",
        "title": "CentOS/RHEL/Fedora"
      },
      "freebsd": {
        "tab": "FreeBSD",
        "title": "FreeBSD"
      },
      "macos": {
        "tab": "macOS",
        "title": "macOS"
      },
      "netbsd": {
        "important_text": "Rust is absolutely required for building cryptography packages. The agent uses certificate-based authentication which requires cryptography support for security.",
        "important_title": "⚠️ Important for NetBSD",
        "tab": "NetBSD",
        "title": "NetBSD",
        "gcc14_required": "需要 GCC 14：",
        "gcc14_reason": "NetBSD 的基础系统 GCC 10.5 不能正确支持 grpcio 和其他包所需的 C++17 功能。安装 GCC 14 可确保正确的 C++17 支持。",
        "rust_required": "需要 Rust：",
        "rust_reason": "代理使用基于证书的身份验证，需要加密支持以确保安全。",
        "profile_note": "注意：",
        "profile_note_text": "在 BSD 系统上，使用 <code>. ~/.profile</code> 而不是 <code>source ~/.profile</code> 来重新加载 shell 环境。"
      },
      "openbsd": {
        "important_text": "Rust is absolutely required for building cryptography packages. The agent uses certificate-based authentication which requires cryptography support for security.",
        "important_title": "⚠️ Important for OpenBSD",
        "tab": "OpenBSD",
        "title": "OpenBSD"
      },
      "opensuse": {
        "leap_desc": "Uses stable packages, may need manual Rust installation",
        "leap_note": "openSUSE Leap:",
        "note_title": "📦 Package Manager Notes",
        "python_desc": "Leap ships with Python 3.9+, Tumbleweed with latest stable",
        "python_note": "Python versions:",
        "tab": "openSUSE",
        "title": "openSUSE Leap/Tumbleweed",
        "tumbleweed_desc": "Rolling release, Rust available via zypper",
        "tumbleweed_note": "openSUSE Tumbleweed:"
      },
      "sles": {
        "firewall": "Firewall:",
        "firewall_desc": "SuSEfirewall2 or firewalld may block agent ports",
        "note_title": "🏢 Enterprise Considerations",
        "selinux": "SELinux:",
        "selinux_desc": "May require policy adjustments if enabled",
        "sles12": "SLES 12:",
        "sles12_desc": "May require Software Collections (SCL) for newer Python",
        "sles15": "SLES 15:",
        "sles15_desc": "Python 3.6+ included, but 3.9+ recommended",
        "subscription": "Subscription:",
        "subscription_desc": "Some packages require active SLES subscription",
        "tab": "SLES",
        "title": "SUSE Linux Enterprise Server (SLES)"
      },
      "title": "Platform-Specific Prerequisites",
      "ubuntu": {
        "tab": "Ubuntu/Debian",
        "title": "Ubuntu 22.04 - 24.10"
      },
      "ubuntu25": {
        "note": "Note:",
        "note_text": "Ubuntu 25.04+ only ships with Python 3.13. You must build Python 3.12 from source:",
        "tab": "Ubuntu 25.04+",
        "title": "Ubuntu 25.04+ (Python 3.12 from Source)"
      },
      "windows": {
        "step1": {
          "avoid": "AVOID Python 3.13",
          "avoid_reason": "Package compatibility issues",
          "check_path": "Check \"Add Python to PATH\" during installation",
          "download": "Download from",
          "sqlite_included": "SQLite3 is included with Python on Windows",
          "title": "Python 3.9-3.12:"
        },
        "step2": {
          "download": "Download from",
          "instruction": "Run rustup-init.exe and follow prompts",
          "title": "Rust:"
        },
        "step3": {
          "description": "Includes build tools needed for Python packages",
          "download": "Download from",
          "title": "Git for Windows:"
        },
        "step4": {
          "download": "Download",
          "title": "Windows Build Tools (if needed):"
        },
        "tab": "Windows",
        "title": "Windows"
      }
    },
    "requirements": {
      "network": {
        "description": "Outbound HTTPS access to SysManage Server",
        "ports": "No inbound ports required",
        "required": "Required:",
        "title": "🌐 Network Access"
      },
      "os": {
        "description": "Cross-platform compatibility",
        "platforms": "Linux (Ubuntu, CentOS/RHEL, openSUSE, SLES), Windows, macOS, FreeBSD, OpenBSD, NetBSD",
        "supported": "Supported:",
        "title": "💻 Operating System"
      },
      "privileges": {
        "description": "系统管理的管理权限",
        "limitation": "Can run as regular user with limitations",
        "optional": "Optional:",
        "title": "🛡️ Privileges"
      },
      "python": {
        "note": "Note: Python 3.13 is NOT yet supported due to package compatibility",
        "required": "Required:",
        "title": "🐍 Python",
        "version": "3.9, 3.11, or 3.12"
      },
      "title": "System Requirements"
    },
    "running": {
      "development": {
        "title": "Development Mode"
      },
      "options": {
        "title": "Command Line Options"
      },
      "title": "Running the Agent"
    },
    "service": {
      "macos": {
        "create_text": "Create",
        "create_title": "Create launchd service",
        "load_title": "Load the service",
        "tab": "macOS (launchd)"
      },
      "opensuse": {
        "apparmor": "AppArmor:",
        "apparmor_desc": "SUSE uses AppArmor instead of SELinux by default",
        "commands_title": "Service management commands",
        "create_text": "Create",
        "firewall": "Firewall:",
        "firewall_desc": "Open required ports via YaST or firewall-cmd",
        "logging": "Logging:",
        "logging_desc": "Logs available via journalctl or /var/log/messages",
        "note_title": "🏢 SUSE Enterprise Notes",
        "selinux": "SELinux:",
        "selinux_desc": "May require setsebool or custom policies",
        "service_title": "openSUSE/SLES systemd service",
        "tab": "openSUSE/SLES"
      },
      "systemd": {
        "create_text": "Create",
        "create_title": "Create systemd service file",
        "enable_title": "Enable and start service",
        "tab": "Linux (systemd)"
      },
      "title": "Service Installation",
      "windows": {
        "tab": "Windows Service",
        "title": "Windows Service Installation"
      }
    },
    "title": "Agent Installation Guide - SysManage",
    "troubleshooting": {
      "connection": {
        "dns": "DNS resolution:",
        "server": "Server connectivity:",
        "ssl": "SSL certificate:",
        "title": "Connection Issues"
      },
      "discovery": {
        "firewall": "Check firewall rules on both agent and server",
        "ports": "Ensure UDP ports 31337 and 31338 are accessible",
        "service": "Verify server discovery service is enabled",
        "title": "Auto-Discovery Issues"
      },
      "packages": {
        "crypto": "Cryptography build errors:",
        "crypto_desc": "Ensure Rust is installed and in PATH",
        "missing": "Missing dependencies:",
        "missing_desc": "Install build tools and development libraries",
        "python313": "Python 3.13 compatibility:",
        "python313_desc": "Use Python 3.11 or 3.12 instead",
        "title": "Python Package Issues"
      },
      "permission": {
        "check_log": "Check log file access:",
        "check_user": "Check agent user permissions:",
        "title": "Permission Issues",
        "verify_file": "Verify file permissions:"
      },
      "title": "故障排除"
    }
  },
  "api": {
    "authentication": {
      "authentication_flow": "Authentication Flow",
      "error_responses": "Error Responses",
      "example": "示例",
      "login": "Login",
      "overview": "概述",
      "password_reset": "Password Reset",
      "path_parameters": "Path Parameters",
      "refresh_token": "Refresh Token",
      "request_body": "Request Body",
      "reset_password": "Reset Password",
      "response": "响应",
      "security_best_practices": "Security Best Practices",
      "subtitle": "JWT-based authentication system for secure access to SysManage APIs with token refresh and session management.",
      "title": "Authentication API",
      "token_expiration": "Token Expiration",
      "using_auth_tokens": "Using Authentication Tokens",
      "validate_reset_token": "Validate Reset Token"
    },
    "hosts": {
      "authentication_required": "Authentication Required",
      "bulk_operations": "批量操作",
      "fleet_management": "Fleet Management",
      "hardware_system_info": "Hardware and System Information",
      "host_operations": "Host Operations",
      "important_notes": "Important Notes",
      "overview": "概述",
      "software_package_info": "Software and Package Information",
      "subtitle": "Complete host and agent management including registration, system operations, and data collection.",
      "title": "Host Management API"
    },
    "packages": {
      "important_notes": "Important Notes",
      "os_upgrades": "OS Upgrades",
      "overview": "概述",
      "package_cache_management": "Package Cache Management",
      "package_discovery": "Package Discovery",
      "package_installation": "Package Installation",
      "package_search": "Package Search",
      "package_updates": "Package Updates",
      "query_parameters": "Query Parameters",
      "subtitle": "Cross-platform package management for installing, updating, and removing software packages across your infrastructure.",
      "title": "Package Management API"
    },
    "subtitle": "Comprehensive API documentation for integrating with SysManage programmatically",
    "title": "API 参考"
  },
  "api_docs": {
    "description": "Complete REST API documentation for integrating with SysManage.",
    "header": {
      "subtitle": "Complete REST API documentation for integrating with SysManage server and managing infrastructure programmatically.",
      "title": "API 参考"
    },
    "overview": {
      "description": "SysManage provides a comprehensive REST API built with FastAPI, offering full programmatic access to all platform features. The API supports modern standards including OpenAPI 3.0 specification, JWT authentication, and real-time WebSocket communication.",
      "features_title": "API Features",
      "title": "概述"
    },
    "section_title": "API 参考",
    "title": "API Reference - SysManage"
  },
  "database_security": {
    "best_practices": {
      "backup": {
        "access_control": "实施备份访问控制",
        "encrypted": "使用加密数据库备份",
        "retention": "遵循数据保留策略",
        "secure_storage": "将备份存储在安全位置",
        "testing": "定期测试备份恢复",
        "title": "💾 Backup and Recovery"
      },
      "maintenance": {
        "audit_logs": "Maintain comprehensive audit logs",
        "migration_testing": "在预发布环境中测试数据库迁移",
        "patches": "及时应用安全补丁",
        "performance": "Monitor database performance and security metrics",
        "schema_review": "审查架构更改的安全影响",
        "title": "🔧 Maintenance and Updates"
      },
      "production": {
        "credentials": "安全存储数据库凭据",
        "encryption": "启用静态数据库加密",
        "monitoring": "实施数据库活动监控",
        "network": "限制数据库网络访问",
        "ssl": "使用 SSL/TLS 进行数据库连接",
        "title": "🏭 Production Deployment"
      },
      "title": "数据库安全最佳实践"
    },
    "breadcrumb": "数据库安全",
    "description": "SysManage 的全面数据库安全文档，包括基于 UUID 的主键、安全安装和数据库加固。",
    "examples": {
      "secure": "✅ Secure (UUID):",
      "vulnerable": "❌ Vulnerable (Sequential):"
    },
    "header": {
      "subtitle": "高级数据库安全功能，包括基于 UUID 的主键、安全安装程序和数据库加固技术。",
      "title": "数据库安全"
    },
    "implementation": {
      "api_security": {
        "authorization": {
          "no_enumeration": "即使对于无效的 UUID 也不泄露信息",
          "rbac": "将基于角色的访问控制应用于 UUID 引用的资源",
          "resource_ownership": "UUID 解析前验证资源所有权",
          "title": "授权检查"
        },
        "title": "API 安全考虑",
        "validation": {
          "format": "所有 UUID 输入都经过验证以确保格式正确",
          "pydantic": "Pydantic 模型强制执行 UUID 类型",
          "rejection": "无效的 UUID 立即被拒绝",
          "title": "UUID 验证"
        }
      },
      "database_schema": {
        "description": "SysManage 中的所有主键都使用 UUID 版本 4（随机）以获得最大安全性：",
        "example_title": "示例表定义：",
        "title": "数据库架构设计"
      },
      "title": "实施详情"
    },
    "migration": {
      "benefits": {
        "attack_surface": "Dramatically reduced attack surface",
        "compliance": "Enhanced regulatory compliance posture",
        "enumeration": "Eliminated ID enumeration vulnerabilities",
        "future_proof": "Future-proofed against sequential ID-based attacks",
        "information_disclosure": "Prevented information disclosure through predictable IDs",
        "title": "Post-Migration Security Benefits"
      },
      "description": "SysManage has been fully migrated from sequential integer IDs to UUIDs using a comprehensive migration strategy.",
      "process": {
        "step1": {
          "description": "Alembic migrations converted all primary keys and foreign keys from integers to UUIDs",
          "title": "Step 1: Schema Migration"
        },
        "step2": {
          "description": "Existing data was migrated with new UUID identifiers while preserving relationships",
          "title": "Step 2: Data Migration"
        },
        "step3": {
          "description": "All API endpoints updated to handle UUID parameters and responses",
          "title": "Step 3: API Updates"
        },
        "step4": {
          "description": "Frontend components updated to work with UUID identifiers",
          "title": "Step 4: Frontend Updates"
        },
        "title": "Migration Process"
      },
      "title": "Migration from Sequential IDs"
    },
    "navigation": {
      "best_practices": "Security Best Practices →",
      "security_docs": "← Security Documentation"
    },
    "secure_installation": {
      "description": "SysManage 包含必须在新安装上运行的强制性安全安装脚本，以建立适当的安全基础。",
      "features": {
        "admin_user": {
          "no_defaults": "防止使用默认或示例凭据",
          "password_validation": "强制执行密码复杂性要求",
          "secure_password": "提示输入安全管理员密码",
          "title": "👤 Initial Admin User Creation"
        },
        "config_hardening": {
          "file_permissions": "设置限制性文件权限（600）",
          "ownership": "确保适当的文件所有权",
          "title": "⚙️ Configuration File Hardening",
          "validation": "验证配置安全设置"
        },
        "jwt_security": {
          "entropy": "使用高熵随机数据进行令牌生成",
          "prevents_reuse": "防止跨安装重复使用凭据",
          "title": "🔐 JWT Security Token Generation",
          "unique_secret": "生成加密安全的唯一 JWT 密钥"
        },
        "password_salt": {
          "rainbow_protection": "防止彩虹表攻击",
          "secure_hashing": "增强密码哈希安全性",
          "title": "🧂 Password Salt Generation",
          "unique_salt": "为每个安装创建唯一的密码盐"
        },
        "title": "实施的安全功能"
      },
      "requirements": {
        "backup": "配置备份：",
        "backup_desc": "脚本执行后备份配置文件",
        "mandatory": "强制执行：",
        "mandatory_desc": "首次使用前必须运行脚本",
        "no_defaults": "无默认凭据：",
        "no_defaults_desc": "系统将不会使用默认安全令牌运行",
        "run_once": "仅运行一次：",
        "run_once_desc": "每次安装仅执行一次",
        "title": "⚠️ Security Requirements"
      },
      "script_location": {
        "path": "scripts/sysmanage_secure_installation",
        "title": "脚本位置"
      },
      "title": "安全安装脚本"
    },
    "title": "数据库安全 - SysManage",
    "uuid_architecture": {
      "benefits": {
        "distributed": {
          "description": "UUID 是全局唯一的，防止分布式系统中的 ID 冲突，并减少多租户环境中的攻击面。",
          "title": "🌐 Distributed System Security"
        },
        "enumeration": {
          "description": "顺序 ID（1、2、3...）允许攻击者轻松枚举资源。UUID 通过使用不可预测的标识符消除了此漏洞。",
          "title": "🛡️ ID Enumeration Attack Prevention"
        },
        "gdpr": {
          "description": "UUID 通过提供不能轻易跨系统关联的标识符来支持数据匿名化要求。",
          "title": "📋 GDPR Compliance Support"
        },
        "information_leakage": {
          "description": "顺序 ID 可以泄露业务指标（用户数、主机数等）。UUID 防止此信息泄露。",
          "title": "🔒 Information Leakage Prevention"
        },
        "privacy": {
          "description": "UUID 提供不可关联的标识符，增强用户隐私并防止跨系统跟踪。",
          "title": "🕵️ Enhanced Privacy Protection"
        },
        "replay": {
          "description": "非顺序标识符防止攻击者预测有效的资源 ID 以进行重放攻击或自动扫描。",
          "title": "🔄 Replay Attack Protection"
        },
        "title": "安全优势"
      },
      "description": "SysManage 在所有数据库表中实现基于 UUID 的主键，而不是传统的顺序整数 ID。此架构决策提供了显著的安全优势并防止常见的攻击向量。",
      "title": "基于 UUID 的主键架构"
    }
  },
  "multi_os_cicd": {
    "benefit_1": "<strong>零基础设施成本：</strong>使用 GitHub 免费运行器的完整 CI/CD 流水线",
    "benefit_2": "<strong>多平台卓越性：</strong>在 3 个主要操作系统上同时测试",
    "benefit_3": "<strong>快速失败架构：</strong>立即故障检测节省计算资源",
    "benefit_4": "<strong>企业级可靠性：</strong>具有全面验证的生产级测试",
    "best_practices": {
      "automated_deployment": "自动部署到暂存环境",
      "branch_protection": "分支保护规则强制质量门",
      "compliance_reporting": "合规报告和审计跟踪",
      "cost_desc": "在不投资基础设施的情况下提供高级 CI/CD 能力",
      "cost_savings": "$0/月",
      "cost_savings_label": "基础设施成本",
      "cost_title": "💰 零成本企业优势",
      "coverage_label": "平台覆盖率",
      "coverage_metric": "100%",
      "dependency_checking": "依赖安全验证",
      "description": "SysManage 的 CI/CD 流水线实现<strong>行业领先的最佳实践</strong>，提供通常在昂贵的商业 CI/CD 平台中发现的企业级可靠性和效率。",
      "enterprise_desc": "与企业开发工作流的无缝集成",
      "enterprise_title": "🏢 企业集成",
      "failure_detection": "立即故障检测和通知",
      "github_runners": "GitHub 托管的运行器消除服务器成本",
      "health_checks": "自动健康检查和服务验证",
      "intelligent_caching": "智能缓存减少执行时间和成本",
      "matrix_efficiency": "矩阵策略最大化每美元的测试覆盖率",
      "performance_monitoring": "性能监控和优化",
      "reliability_desc": "具有全面监控的生产级可靠性",
      "reliability_label": "流水线可靠性",
      "reliability_metric": "99.9%",
      "reliability_title": "🛡️ 可靠性和监控",
      "required_checks": "必需的状态检查防止破坏的部署",
      "resource_optimization": "资源优化最小化计算使用",
      "retry_logic": "瞬态故障的智能重试逻辑",
      "rollback_capability": "失败部署的自动回滚能力",
      "secret_management": "使用 GitHub Secrets 的安全密钥管理",
      "security_desc": "整个流水线集成的企业级安全",
      "security_title": "🔒 安全和合规性",
      "title": "企业 CI/CD 最佳实践",
      "value_desc": "SysManage 的 CI/CD 流水线通过减少部署风险、更快的上市时间、改进的代码质量和零基础设施开销提供<strong>可衡量的企业价值</strong> - 通常为组织节省数千美元的 CI/CD 平台成本，同时提供卓越的可靠性和性能。",
      "value_title": "💎 企业价值主张",
      "vulnerability_scanning": "每个构建中的自动漏洞扫描"
    },
    "breadcrumb": "多操作系统 CI/CD",
    "github_actions": {
      "caching": "跨运行的智能依赖缓存",
      "description": "SysManage 利用<strong>GitHub Actions 矩阵策略</strong>以零基础设施成本提供企业级 CI/CD 能力，提供通常与昂贵的专用 CI/CD 平台相关的可靠性和可扩展性。",
      "fail_fast": "快速失败策略在首次失败时停止执行",
      "manual": "手动工作流分发",
      "matrix_desc": "在多个环境中并行执行",
      "matrix_title": "🎯 矩阵策略实现",
      "optimization_desc": "高级流水线优化技术",
      "optimization_title": "⚡ 性能优化",
      "os_macos": "macos-latest（Apple Silicon）",
      "os_ubuntu": "ubuntu-latest（主要 Linux）",
      "os_windows": "windows-latest（Windows Server）",
      "parallel": "并行作业执行最大化吞吐量",
      "pull_requests": "所有拉取请求",
      "push_main": "推送到主分支",
      "python_versions": "支持 Python 3.11 和 3.12",
      "resource": "资源高效执行最小化成本",
      "schedule": "计划维护运行",
      "title": "GitHub Actions 实现",
      "triggers_desc": "流水线在代码更改时自动执行",
      "triggers_title": "🚀 自动触发器",
      "workflow_title": "📋 工作流配置"
    },
    "intro": "SysManage 实现了<strong>革命性的零成本多操作系统 CI/CD 流水线</strong>，使用 GitHub Actions 在 Linux、macOS 和 Windows 平台上提供企业级测试和部署能力，无需基础设施成本。",
    "key_benefits_title": "🚀 关键企业优势",
    "main_title": "企业级多操作系统 CI/CD 流水线",
    "matrix_testing": {
      "bsd_simulation": "BSD：通过 Docker 容器模拟测试",
      "comprehensive_desc": "每个提交在所有目标平台上测试",
      "comprehensive_reporting": "所有平台的全面报告",
      "comprehensive_title": "📊 全面平台覆盖",
      "description": "SysManage 的矩阵测试策略提供<strong>全面的跨平台验证</strong>，确保在所有支持的操作系统上的一致行为，同时保持零基础设施成本。",
      "framework_selection": "每个平台的最佳测试框架选择",
      "graceful_degradation": "不支持功能的优雅降级",
      "integration_tests": "集成测试：跨组件交互验证",
      "intelligent_desc": "智能测试执行适应平台能力",
      "intelligent_title": "🧠 智能测试执行",
      "linux_testing": "Linux：具有完整依赖堆栈的 Ubuntu LTS",
      "macos_testing": "macOS：原生 Apple Silicon 执行环境",
      "platform_detection": "自动平台能力检测",
      "security_tests": "安全测试：漏洞扫描和合规性",
      "strategy_title": "🎯 测试策略",
      "title": "多操作系统矩阵测试策略",
      "ui_tests": "UI 测试：用户界面和工作流验证",
      "unit_tests": "单元测试：组件级功能验证",
      "validation_desc": "多层验证确保生产就绪性",
      "validation_title": "✅ 验证级别",
      "windows_testing": "Windows：使用 PowerShell 自动化的 Server 2022"
    },
    "overview": {
      "backend_desc": "使用 pytest、数据库集成和安全验证的全面 Python 测试套件",
      "backend_feature_1": "1,432+ 单元和集成测试",
      "backend_feature_2": "真实 PostgreSQL 数据库测试",
      "backend_feature_3": "安全扫描和验证",
      "backend_feature_4": "代码覆盖率分析（66%+）",
      "backend_title": "🔧 后端测试",
      "description": "SysManage 的 CI/CD 流水线代表了<strong>成本效益企业部署的范式转变</strong>，利用 GitHub Actions 的矩阵策略提供全面的多操作系统测试，无需专用基础设施投资。",
      "execution_title": "⚡ 流水线执行策略",
      "frontend_desc": "使用 Vitest、Mock Service Worker 和组件验证的 TypeScript/React 测试",
      "frontend_feature_1": "63+ TypeScript 单元测试",
      "frontend_feature_2": "Mock Service Worker 集成",
      "frontend_feature_3": "组件渲染验证",
      "frontend_feature_4": "代码覆盖率跟踪",
      "frontend_title": "🌐 前端测试",
      "pipeline_title": "🏗️ 流水线组件",
      "title": "CI/CD 流水线架构",
      "ui_desc": "使用 Playwright 和 Selenium 后备的跨平台 UI 测试，提供全面的浏览器覆盖",
      "ui_feature_1": "现代浏览器的 Playwright",
      "ui_feature_2": "BSD 系统的 Selenium 后备",
      "ui_feature_3": "真实数据库集成",
      "ui_feature_4": "跨浏览器兼容性",
      "ui_title": "🎭 UI 测试",
      "workflow_title": "🔄 工作流编排"
    },
    "page_title": "多操作系统 CI/CD 流水线 - SysManage 文档",
    "platform_specific": {
      "api_consistency": "API 行为一致性验证",
      "config_portability": "配置文件可移植性测试",
      "cross_platform_desc": "确保所有平台上的一致行为",
      "cross_platform_title": "🌍 跨平台一致性",
      "database_compatibility": "跨平台数据库驱动程序兼容性",
      "description": "SysManage 实现<strong>平台感知测试策略</strong>，利用每个操作系统的独特能力，同时在所有平台上保持一致的验证标准。",
      "linux_desc": "具有全面工具的主要开发和测试平台",
      "linux_docker": "Docker 容器测试和验证",
      "linux_full_stack": "使用 PostgreSQL 的全栈测试",
      "linux_packaging": "包管理测试（apt/dpkg）",
      "linux_systemd": "systemd 服务集成测试",
      "linux_title": "🐧 Linux（Ubuntu）测试",
      "macos_desc": "具有平台特定功能的原生 Apple Silicon 测试",
      "macos_homebrew": "Homebrew 包管理测试",
      "macos_launchd": "launchd 服务集成测试",
      "macos_security": "macOS 安全功能验证",
      "macos_title": "🍎 macOS 测试",
      "macos_webkit": "WebKit/Safari 浏览器测试",
      "network_behavior": "网络通信一致性验证",
      "title": "平台特定测试功能",
      "windows_desc": "使用 PowerShell 自动化的 Windows Server 环境",
      "windows_iis": "IIS Web 服务器集成测试",
      "windows_powershell": "PowerShell 脚本测试和验证",
      "windows_security": "Windows 安全功能验证",
      "windows_services": "Windows 服务管理测试",
      "windows_title": "🪟 Windows 测试"
    },
    "tabs": {
      "best_practices": "最佳实践",
      "github_actions": "GitHub Actions",
      "matrix_testing": "矩阵测试",
      "overview": "概述",
      "platform_specific": "平台特定"
    }
  },
  "performance_testing": {
    "artillery": {
      "api_desc": "核心 API 端点性能测试（20% 流量）",
      "api_title": "主机管理 API",
      "auth_desc": "JWT 身份验证性能验证（40% 流量）",
      "auth_title": "身份验证流程测试",
      "budgets_title": "💎 性能预算",
      "description": "Artillery 为 SysManage 的后端 API 提供<strong>企业级负载测试</strong>，模拟真实的用户负载并在各种流量模式下验证系统性能。",
      "error_rate": "最大值：< 1%",
      "error_title": "🛡️ 错误率",
      "health_desc": "持续健康端点验证（30% 流量）",
      "health_title": "健康检查监控",
      "normal_desc": "30 秒，每秒 5 个请求 - 典型生产负载",
      "normal_title": "⚡ 正常负载",
      "peak_desc": "20 秒，每秒 10 个请求 - 高流量模拟",
      "peak_title": "🚀 峰值负载",
      "phases_title": "📈 负载测试阶段",
      "response_p95": "95百分位：< 500ms",
      "response_p99": "99百分位：< 1000ms",
      "response_title": "⚡ 响应时间",
      "scenarios_title": "🎯 负载测试场景",
      "throughput_rate": "最小值：8 RPS",
      "throughput_title": "📊 吞吐量",
      "title": "Artillery 后端负载测试",
      "warmup_desc": "10 秒，每秒 2 个请求 - 系统初始化",
      "warmup_title": "🔥 预热阶段",
      "websocket_desc": "实时通信性能验证（10% 流量）",
      "websocket_title": "WebSocket 连接测试"
    },
    "benefit_1": "<strong>生产就绪负载测试：</strong>全面的 API 性能验证",
    "benefit_2": "<strong>多平台测试：</strong>在 Linux、macOS 和 Windows 上验证",
    "benefit_3": "<strong>自动回归检测：</strong>CI/CD 中的持续性能监控",
    "benefit_4": "<strong>企业可扩展性：</strong>性能预算和 SLA 验证",
    "breadcrumb": "性能测试",
    "ci": {
      "alerts_desc": "超出性能预算时立即通知",
      "alerts_title": "🚨 自动警报",
      "baseline_desc": "具有可配置容差带的历史性能数据比较",
      "baseline_title": "📊 基线比较",
      "description": "SysManage 的性能测试框架与<strong>GitHub Actions CI/CD 流水线</strong>无缝集成，在多个操作系统上的每次代码更改时提供自动性能验证。",
      "macos_artillery": "Artillery 跨平台验证",
      "macos_native": "原生 macOS 应用程序性能",
      "macos_title": "🍎 macOS",
      "macos_webkit": "WebKit/Safari 性能测试",
      "matrix_desc": "在 Ubuntu、macOS 和 Windows 环境中并行测试",
      "matrix_title": "🎯 矩阵执行",
      "platform_title": "🌐 多平台性能测试",
      "regression_title": "📈 性能回归检测",
      "reporting_desc": "性能指标导出用于趋势分析和监控",
      "reporting_title": "📊 结果报告",
      "title": "CI/CD 性能集成",
      "trends_desc": "长期性能趋势监控和容量规划",
      "trends_title": "📈 趋势分析",
      "trigger_desc": "性能测试在每次推送到主分支和拉取请求时执行",
      "trigger_title": "🚀 触发事件",
      "ubuntu_artillery": "Artillery 后端负载测试",
      "ubuntu_docker": "Docker 容器性能验证",
      "ubuntu_playwright": "Playwright UI 性能（Chrome、Firefox）",
      "ubuntu_title": "🐧 Ubuntu Linux",
      "validation_desc": "自动性能预算执行和回归检测",
      "validation_title": "✅ 性能验证",
      "windows_artillery": "Windows 特定的 Artillery 测试",
      "windows_edge": "Edge 浏览器性能测试",
      "windows_powershell": "PowerShell 环境验证",
      "windows_title": "🪟 Windows",
      "workflow_title": "🔄 自动性能工作流"
    },
    "enterprise": {
      "analytics_title": "📈 企业分析和报告",
      "capacity_desc": "基础设施扩展和资源优化的预测分析",
      "capacity_title": "📈 容量规划",
      "cloud_autoscaling": "自动扩展验证",
      "cloud_containers": "容器性能优化",
      "cloud_desc": "在 AWS、Azure、GCP 和混合云环境中进行全面测试",
      "cloud_latency": "跨区域延迟测试",
      "cloud_title": "☁️ 云基础设施测试",
      "compliance_analytics_desc": "企业治理的自动合规验证和审计跟踪生成",
      "compliance_analytics_title": "🔒 合规报告",
      "compliance_availability": "高可用性测试场景",
      "compliance_budgets": "可配置的性能预算",
      "compliance_reporting": "企业级报告和分析",
      "compliance_sla": "SLA 响应时间验证",
      "compliance_title": "🛡️ SLA 合规验证",
      "cost_desc": "基于性能的成本分析和基础设施效率建议",
      "cost_label": "基础设施成本降低",
      "cost_title": "💰 成本优化",
      "cost_value": "30%",
      "dashboards_desc": "实时性能 KPI 和执行级报告，用于明智决策",
      "dashboards_title": "📊 执行仪表板",
      "deployment_title": "🌍 多环境部署测试",
      "description": "SysManage 的性能测试框架提供<strong>企业级能力</strong>，专为关键任务生产环境设计，确保大规模的最佳性能。",
      "hybrid_connectivity": "跨云连接测试",
      "hybrid_desc": "复杂混合云和多云部署验证",
      "hybrid_failover": "灾难恢复验证",
      "hybrid_sync": "数据同步性能",
      "hybrid_title": "🔄 混合架构测试",
      "load_authentication": "身份验证流程压力测试",
      "load_concurrent": "高达 1000+ 用户的并发用户模拟",
      "load_realistic": "真实的用户行为模式",
      "load_scenarios": "多流量场景建模",
      "load_title": "🚀 生产负载模拟",
      "monitoring_memory": "内存泄漏检测和分析",
      "monitoring_network": "网络性能优化洞察",
      "monitoring_realtime": "实时性能指标收集",
      "monitoring_title": "📊 高级性能监控",
      "monitoring_vitals": "核心 Web 指标合规验证",
      "onprem_desc": "为企业数据中心部署的专用测试",
      "onprem_hardware": "硬件特定优化",
      "onprem_integration": "遗留系统集成测试",
      "onprem_security": "安全合规验证",
      "onprem_title": "🏢 企业本地测试",
      "response_label": "平均响应时间",
      "response_value": "<500ms",
      "scalability_title": "⚡ 企业可扩展性测试",
      "title": "企业性能功能",
      "uptime_label": "正常运行时间可靠性",
      "uptime_value": "99.9%",
      "value_desc": "SysManage 的性能测试框架通过减少停机时间、优化的基础设施成本、改善的用户满意度和随组织增长而扩展的企业级可靠性提供<strong>可衡量的投资回报率</strong>。",
      "value_title": "💎 企业价值主张"
    },
    "intro": "SysManage 实现了<strong>全面的性能测试框架</strong>，使用 Artillery 进行后端 API 负载测试，结合 Playwright 进行前端性能监控。这种企业级方法确保在所有部署环境和规模下的最佳系统性能。",
    "key_benefits_title": "🚀 关键企业优势",
    "main_title": "使用 Artillery 进行企业级性能测试",
    "overview": {
      "backend_desc": "基于 Artillery 的负载测试，具有真实的用户场景、身份验证流程和 API 端点验证",
      "backend_feature_1": "多阶段负载测试（预热、正常、峰值）",
      "backend_feature_2": "WebSocket 连接测试",
      "backend_feature_3": "身份验证流程验证",
      "backend_feature_4": "性能预算执行",
      "backend_title": "🔧 后端 API 测试",
      "description": "SysManage 的性能测试框架提供<strong>双层性能验证</strong>，涵盖后端 API 性能和前端用户体验指标。这种全面的方法确保整个应用程序堆栈的最佳性能。",
      "execution_title": "⚡ 性能测试执行",
      "framework_title": "📊 测试框架组件",
      "frontend_desc": "基于 Playwright 的核心 Web 指标监控和用户体验性能验证",
      "frontend_feature_1": "首次内容绘制（FCP）监控",
      "frontend_feature_2": "DOM 内容加载（DCL）时序",
      "frontend_feature_3": "网络性能分析",
      "frontend_feature_4": "内存使用跟踪",
      "frontend_title": "🌐 前端性能测试",
      "requirements_desc": "在执行性能测试之前，确保 SysManage 服务器在 <code>localhost:8001</code> 上运行。测试框架针对实时实例进行验证，以获得真实的性能指标。",
      "requirements_title": "📋 先决条件",
      "title": "性能测试架构"
    },
    "page_title": "使用 Artillery 进行性能测试 - SysManage 文档",
    "playwright": {
      "chromium_desc": "具有完整性能 API 支持的主要测试平台",
      "chromium_title": "🟦 Chromium/Chrome",
      "cross_browser_title": "🌍 跨浏览器性能验证",
      "dcl_desc": "初始 HTML 文档加载和解析的时间",
      "dcl_target": "目标：< 1500ms",
      "dcl_title": "📄 DOM 内容加载（DCL）",
      "description": "Playwright 提供<strong>全面的前端性能监控</strong>，专注于对企业应用程序至关重要的核心 Web 指标和用户体验指标。",
      "fcp_desc": "测量第一个内容元素何时变为可见",
      "fcp_target": "目标：< 2000ms",
      "fcp_title": "🎨 首次内容绘制（FCP）",
      "firefox_desc": "跨浏览器性能验证和兼容性测试",
      "firefox_title": "🟧 Firefox",
      "load_desc": "包括所有资源的完整页面加载",
      "load_target": "目标：< 5000ms",
      "load_title": "🌐 页面加载时间",
      "login_flow_desc": "表单交互和身份验证响应时间验证",
      "login_flow_title": "🚀 登录流程性能",
      "login_page_desc": "全面的页面加载性能和核心 Web 指标验证",
      "login_page_title": "🔐 登录页面性能",
      "memory_desc": "JavaScript 堆内存消耗监控",
      "memory_target": "跟踪：JS 堆大小",
      "memory_title": "💾 内存使用",
      "metrics_title": "📊 核心 Web 指标监控",
      "network_desc": "资源加载优化和网络请求监控",
      "network_title": "🌐 网络性能分析",
      "tests_title": "🧪 性能测试场景",
      "title": "Playwright 前端性能测试",
      "webkit_desc": "macOS 环境中的 Safari 性能测试",
      "webkit_title": "🟪 WebKit（macOS）"
    },
    "tabs": {
      "artillery": "Artillery 后端",
      "ci_integration": "CI/CD 集成",
      "enterprise": "企业功能",
      "overview": "概述",
      "playwright": "Playwright 前端"
    }
  },
  "rbac_docs": {
    "best_practices": {
      "audit": {
        "description": "监视和审查角色分配和基于权限的操作的审计日志，以检测潜在的安全问题。",
        "title": "📝 审计日志"
      },
      "least_privilege": {
        "description": "仅授予用户执行其工作职能所需的最小角色。除非绝对必要，否则避免授予广泛的权限。",
        "title": "🔒 最小权限原则"
      },
      "role_review": {
        "description": "定期审查用户角色分配，以确保它们仍然适当。当用户更改职责或离开组织时删除角色。",
        "title": "🔍 定期角色审查"
      },
      "separation": {
        "description": "对于敏感操作，考虑将批准和执行角色分离给不同的用户，以防止未经授权的操作。",
        "title": "🔐 职责分离"
      },
      "title": "最佳实践"
    },
    "breadcrumb": "RBAC",
    "card": {
      "description": "具有纵深防御安全性的基于角色的访问控制",
      "feature1": "细粒度权限系统",
      "feature2": "前端和后端验证",
      "feature3": "60+ 个独立安全角色",
      "feature4": "便于管理的角色组",
      "feature5": "最小权限执行",
      "link": "RBAC 文档 →",
      "title": "RBAC"
    },
    "defense_in_depth": {
      "description": "SysManage 中的每个受保护操作都使用两层安全验证方法：",
      "layer1": {
        "description": "UI 元素（按钮、菜单、操作）根据用户权限被隐藏或禁用。这可以防止用户尝试未经授权的操作，并提供更好的用户体验。",
        "title": "🖥️ 前端层"
      },
      "layer2": {
        "description": "API 端点在执行任何操作之前验证用户权限。即使绕过前端，后端也会通过 HTTP 403 错误强制执行安全性，防止未经授权的访问。",
        "title": "🔒 后端层"
      },
      "title": "纵深防御架构",
      "why": {
        "description": "前端层不能被信任用于安全执行，因为它在用户的浏览器中运行并且可以被操纵。后端层提供实际的安全保证。它们一起提供安全性（后端）和可用性（前端）。",
        "title": "为什么需要两层？"
      }
    },
    "description": "SysManage 基于角色的访问控制系统的综合文档，具有纵深防御安全性。",
    "footer": {
      "auth_link": "← 身份验证",
      "quick_nav": "快速导航",
      "security_index": "安全文档 →"
    },
    "groups": {
      "host_management": {
        "description": "用于管理主机、其生命周期和操作状态的控制。",
        "title": "🖥️ 主机管理"
      },
      "integration_management": {
        "description": "用于管理系统集成和消息队列的控制。",
        "title": "🔗 集成管理"
      },
      "package_management": {
        "description": "用于软件包操作和 OS 升级的控制。",
        "title": "📦 软件包管理"
      },
      "report_management": {
        "description": "用于查看和生成系统报告的控制。",
        "title": "📊 报告管理"
      },
      "script_management": {
        "description": "用于管理和在主机上执行脚本的控制。",
        "title": "📜 脚本管理"
      },
      "secrets_management": {
        "description": "用于 OpenBAO 保险库和密钥操作的控制。",
        "title": "🔐 密钥管理"
      },
      "ubuntu_pro": {
        "description": "用于 Ubuntu Pro 订阅管理的控制。",
        "title": "🔷 Ubuntu Pro 管理"
      },
      "user_management": {
        "description": "用于管理 SysManage 用户及其帐户的控制。",
        "title": "👥 用户管理"
      }
    },
    "header": {
      "subtitle": "为所有 SysManage 操作提供纵深防御保护的细粒度安全权限。",
      "title": "基于角色的访问控制 (RBAC)"
    },
    "implementation": {
      "assignment": {
        "description": "管理员可以通过设置 → 用户界面为用户分配角色。可以为每个用户分配多个角色，为不同的组织需求提供灵活的权限组合。",
        "title": "角色分配"
      },
      "backend": {
        "description": "FastAPI 端点在执行操作之前验证用户角色。未经授权的访问返回 HTTP 403：",
        "title": "后端权限验证"
      },
      "frontend": {
        "description": "React 前端使用 hasPermission() 函数检查用户权限。UI 元素根据这些检查有条件地呈现：",
        "title": "前端权限检查"
      },
      "title": "实施详情"
    },
    "overview": {
      "description": "SysManage 实施了一个全面的基于角色的访问控制 (RBAC) 系统，为平台中的每个操作提供细粒度权限。该系统建立在纵深防御安全模型之上，确保在多个层面执行安全检查。",
      "title": "安全模型概述"
    },
    "role_groups": {
      "description": "安全角色根据它们控制的功能区域组织成逻辑组：",
      "title": "安全角色组"
    },
    "roles": {
      "add_package": "添加软件包",
      "add_package_desc": "在主机上安装新的软件包",
      "add_script": "添加脚本",
      "add_script_desc": "在库中创建新脚本",
      "add_secret": "添加密钥",
      "add_secret_desc": "在保险库中创建新密钥",
      "add_user": "添加用户",
      "add_user_desc": "创建新用户帐户",
      "apply_host_os_upgrade": "应用主机 OS 升级",
      "apply_host_os_upgrade_desc": "执行主要 OS 版本升级",
      "apply_software_update": "应用软件更新",
      "apply_software_update_desc": "应用可用的软件包更新",
      "approve_host_registration": "批准主机注册",
      "approve_host_registration_desc": "批准或拒绝新的主机注册请求",
      "attach_ubuntu_pro": "附加 Ubuntu Pro",
      "attach_ubuntu_pro_desc": "将 Ubuntu Pro 订阅附加到主机",
      "change_ubuntu_pro_master_key": "更改 Ubuntu Pro 主密钥",
      "change_ubuntu_pro_master_key_desc": "更新 Ubuntu Pro 主令牌",
      "delete_host": "删除主机",
      "delete_host_desc": "从系统中删除主机",
      "delete_queue_message": "删除队列消息",
      "delete_queue_message_desc": "从消息队列中删除消息",
      "delete_script": "删除脚本",
      "delete_script_desc": "从库中删除脚本",
      "delete_script_execution": "删除脚本执行",
      "delete_script_execution_desc": "删除脚本执行历史记录",
      "delete_secret": "删除密钥",
      "delete_secret_desc": "从保险库中删除密钥",
      "delete_user": "删除用户",
      "delete_user_desc": "从系统中删除用户帐户",
      "deploy_certificate": "部署证书",
      "deploy_certificate_desc": "将 SSL/TLS 证书部署到主机",
      "deploy_ssh_key": "部署 SSH 密钥",
      "deploy_ssh_key_desc": "将 SSH 密钥部署到主机",
      "detach_ubuntu_pro": "分离 Ubuntu Pro",
      "detach_ubuntu_pro_desc": "从主机分离 Ubuntu Pro 订阅",
      "edit_script": "编辑脚本",
      "edit_script_desc": "修改现有脚本",
      "edit_secret": "编辑密钥",
      "edit_secret_desc": "修改现有密钥",
      "edit_tags": "编辑标签",
      "edit_tags_desc": "修改主机标签以进行组织",
      "edit_user": "编辑用户",
      "edit_user_desc": "修改用户帐户详细信息",
      "enable_grafana_integration": "启用 Grafana 集成",
      "enable_grafana_integration_desc": "配置并启用 Grafana 集成",
      "generate_pdf_report": "生成 PDF 报告",
      "generate_pdf_report_desc": "将报告导出为 PDF 文档",
      "lock_user": "锁定用户",
      "lock_user_desc": "锁定用户帐户以防止访问",
      "reboot_host": "重启主机",
      "reboot_host_desc": "启动主机重启",
      "reset_user_password": "重置用户密码",
      "reset_user_password_desc": "重置用户帐户的密码",
      "restart_host_service": "重启主机服务",
      "restart_host_service_desc": "重启在主机上运行的服务",
      "run_script": "运行脚本",
      "run_script_desc": "在主机上执行脚本",
      "shutdown_host": "关闭主机",
      "shutdown_host_desc": "关闭主机",
      "start_host_service": "启动主机服务",
      "start_host_service_desc": "在主机上启动服务",
      "start_vault": "启动保险库",
      "start_vault_desc": "启动 OpenBAO 保险库服务",
      "stop_host_service": "停止主机服务",
      "stop_host_service_desc": "停止在主机上运行的服务",
      "stop_vault": "停止保险库",
      "stop_vault_desc": "停止 OpenBAO 保险库服务",
      "unlock_user": "解锁用户",
      "unlock_user_desc": "解锁先前锁定的用户帐户",
      "view_host_details": "查看主机详细信息",
      "view_host_details_desc": "访问有关主机的详细信息",
      "view_report": "查看报告",
      "view_report_desc": "在 Web 界面中查看报告"
    },
    "title": "基于角色的访问控制 - SysManage"
  },
  "security": {
    "authentication": {
      "admin": "Admin",
      "administrative_actions": "Administrative Actions",
      "alert_configuration": "Alert Configuration",
      "auditor": "Auditor",
      "auth_architecture": "Authentication Architecture",
      "authentication_events": "Authentication Events",
      "automatic_rotation": "Automatic Rotation",
      "common_issues": "常见问题",
      "default_password_policy": "Default Password Policy",
      "default_roles": "Default Roles",
      "diagnostic_commands": "Diagnostic Commands",
      "email_otp": "Email OTP",
      "external_auth_integration": "External Auth Integration",
      "external_auth_providers": "External Authentication Providers",
      "integration_examples": "Integration Examples",
      "jwt_authentication": "JWT Authentication",
      "jwt_configuration": "JWT Configuration",
      "jwt_implementation": "JWT Implementation",
      "jwt_token_structure": "JWT Token Structure",
      "ldap_ad_integration": "LDAP/Active Directory Integration",
      "mfa_configuration": "MFA Configuration",
      "mfa_enrollment_process": "MFA Enrollment Process",
      "mfa_implementation": "MFA Implementation",
      "mfa_setup_problems": "MFA Setup Problems",
      "monitored_events": "Monitored Events",
      "multi_factor_auth": "Multi-Factor Authentication (MFA)",
      "next_steps": "Next Steps",
      "operator": "Operator",
      "overview": "Authentication Overview",
      "password_policies": "Password Policies",
      "password_policy_configuration": "Password Policy Configuration",
      "password_requirements": "Password Requirements",
      "permission_examples": "Permission Examples",
      "permission_system": "Permission System",
      "rbac_architecture": "RBAC Architecture",
      "rbac_data_model": "RBAC Data Model",
      "rbac_implementation": "RBAC Implementation",
      "rbac_permission_errors": "RBAC Permission Errors",
      "rbac_system": "Role-Based Access Control (RBAC)",
      "recovery_codes": "Recovery Codes",
      "saml_integration": "SAML 2.0 Integration",
      "security_events": "Security Events",
      "security_monitoring": "Authentication Security Monitoring",
      "session_architecture": "Session Architecture",
      "session_configuration": "Session Configuration",
      "session_features": "Session Features",
      "session_management": "Session Management",
      "session_monitoring": "Session Monitoring",
      "session_security": "Session Security",
      "subtitle": "Comprehensive guide to SysManage's JWT-based authentication system, role-based access control, multi-factor authentication, and session management.",
      "supported_mfa_methods": "Supported MFA Methods",
      "suspicious_activities": "Suspicious Activities",
      "title": "Authentication & Authorization",
      "token_based_sessions": "Token-Based Sessions",
      "token_blacklisting": "Token Blacklisting",
      "token_expired_errors": "Token Expired Errors",
      "token_generation_process": "Token Generation Process",
      "token_rotation_security": "Token Rotation & Security",
      "token_validation_flow": "Token Validation Flow",
      "totp": "TOTP (Time-based OTP)",
      "troubleshooting": "Troubleshooting Authentication",
      "viewer": "Viewer"
    },
    "subtitle": "Comprehensive security documentation covering authentication, authorization, encryption, and best practices.",
    "title": "Security Documentation"
  },
  "security_docs": {
    "database_security": {
      "description": "基于UUID的主键和安全数据库设计模式以增强安全性。",
      "gdpr_compliance": "支持GDPR合规性进行数据匿名化",
      "information_leakage": "消除可预测的资源URL模式",
      "link": "数据库安全 →",
      "privacy_enhanced": "通过不可关联的标识符增强隐私",
      "replay_protection": "非顺序标识符防止重放攻击",
      "secure_installation": "具有唯一令牌的安全安装脚本",
      "title": "🗄️ 数据库安全",
      "uuid_keys": "基于UUID的主键防止ID枚举攻击"
    },
    "description": "Comprehensive security documentation for SysManage including authentication, mTLS, security scanning, and best practices.",
    "header": {
      "subtitle": "Comprehensive security features, configuration, and best practices for SysManage deployments.",
      "title": "Security Documentation"
    },
    "section_title": "安全",
    "title": "Security Documentation - SysManage"
  },
  "ui_testing": {
    "best_practices": {
      "description": "可维护和可靠的 UI 测试的行业最佳实践。",
      "maintenance": {
        "coverage": "覆盖率分析：确保关键用户工作流的充分覆盖",
        "flaky_test": "不稳定测试管理：及时识别和修复不可靠的测试",
        "performance": "性能监控：跟踪测试执行时间并优化慢速测试",
        "regular_updates": "定期更新：保持浏览器和框架版本最新",
        "title": "维护指南"
      },
      "test_design": {
        "data_driven": "数据驱动测试：参数化测试以实现全面的场景覆盖",
        "idempotent": "幂等测试：测试可以多次运行并获得一致的结果",
        "independent": "测试独立性：每个测试独立运行，无依赖关系",
        "page_object": "页面对象模式：将页面交互封装在可重用对象中",
        "title": "🎯 Test Design Principles"
      },
      "title": "最佳实践"
    },
    "breadcrumb": "UI 测试",
    "cicd_integration": {
      "badges": {
        "integration": "README 集成：项目文档中可见的测试状态",
        "real_time": "实时更新：测试完成时自动更新徽章",
        "title": "状态徽章",
        "ui_tests": "UI Tests: Green 'Passing' / Red 'Failing' status badge"
      },
      "description": "企业级 CI/CD 集成，GitHub Actions 为每次提交和拉取请求提供自动化测试。",
      "github_actions": {
        "artifact_collection": "工件收集：保留截图和日志以供分析",
        "comprehensive_logging": "全面日志记录：详细输出用于调试失败的测试",
        "fail_fast": "快速失败逻辑：首次测试失败时立即停止执行",
        "parallel_execution": "并行执行：后端、前端和 UI 测试并发运行",
        "title": "🚀 GitHub Actions Workflow"
      },
      "title": "CI/CD 集成",
      "workflow_steps": {
        "cleanup": "清理：资源清理和工件保存",
        "database_setup": "数据库设置：PostgreSQL 初始化和架构迁移",
        "dependency_install": "依赖项安装：后端和前端依赖项",
        "server_startup": "服务器启动：应用程序启动和健康检查",
        "setup": "环境设置：Python、Node.js 和浏览器安装",
        "test_execution": "测试执行：并行测试套件执行和故障检测",
        "title": "工作流执行步骤"
      }
    },
    "cross_platform": {
      "description": "全面的测试策略，确保在所有支持的操作系统上行为一致。",
      "intelligent_selection": {
        "makefile_logic": "Makefile 逻辑：基于平台检测的自动框架选择",
        "playwright_preferred": "首选 Playwright：可用时使用以获得更好的性能",
        "selenium_fallback": "Selenium 备用：不支持平台的自动备用",
        "title": "🧠 Intelligent Framework Selection",
        "transparent_switching": "透明切换：无论底层框架如何，测试界面相同"
      },
      "platform_matrix": {
        "freebsd": "FreeBSD：Selenium 支持 Chrome/Firefox",
        "linux": "Linux：Playwright 完全支持浏览器（Chrome、Firefox，WebKit 除外）",
        "macos": "macOS：Playwright 完全支持浏览器（Chrome、Firefox、WebKit）",
        "openbsd": "OpenBSD：Selenium 支持 Chrome/Firefox",
        "title": "📊 Platform Testing Matrix",
        "windows": "Windows：Playwright 完全支持浏览器（Chrome、Firefox，WebKit 除外）"
      },
      "title": "跨平台测试策略"
    },
    "database_integration": {
      "database_setup": {
        "real_postgres": "真实 PostgreSQL：针对实际生产数据库架构运行测试",
        "rollback_support": "回滚支持：测试运行之间的清洁状态恢复",
        "schema_sync": "架构同步：测试前自动进行架构迁移",
        "title": "数据库设置",
        "transaction_isolation": "事务隔离：每个测试在隔离的数据库事务中运行"
      },
      "description": "复杂的数据库集成，确保测试针对真实的 PostgreSQL 运行，并具有适当的用户生命周期管理。",
      "title": "数据库集成",
      "user_injection": {
        "argon2_hashing": "Argon2 密码哈希：具有可配置盐的生产级密码安全",
        "proper_cleanup": "正确清理：测试完成后自动删除测试用户",
        "title": "🔐 Test User Injection",
        "unique_users": "唯一测试用户：每次测试运行创建隔离的测试用户",
        "yaml_configuration": "YAML 配置：来自 sysmanage.yaml 的盐和数据库凭据"
      }
    },
    "debugging": {
      "common_issues": {
        "browser_not_found": "未找到浏览器：使用 make install-browsers 安装缺少的浏览器",
        "database_connection": "数据库连接：验证 PostgreSQL 是否正在运行且可访问",
        "permission_errors": "权限错误：检查截图目录的文件权限",
        "timeout_errors": "超时错误：增加慢加载元素的等待时间",
        "title": "常见问题和解决方案"
      },
      "description": "全面的调试功能，确保快速解决问题和测试可靠性。",
      "logging": {
        "browser_logs": "浏览器日志：捕获控制台输出和 JavaScript 错误",
        "network_logs": "网络日志：监控 HTTP 请求和响应",
        "timing_info": "时序信息：慢操作的性能指标",
        "title": "日志记录和诊断",
        "verbose_output": "详细输出：详细的测试执行日志"
      },
      "screenshot_capture": {
        "automatic": "自动捕获：测试失败时截图",
        "browser_context": "浏览器上下文：截图包括浏览器和页面状态",
        "storage_location": "存储位置：截图保存到 /tmp/claude/ 以供检查",
        "timestamped": "带时间戳的文件：截图保存时带时间戳以供分析",
        "title": "📸 Screenshot Capture"
      },
      "title": "调试和故障排除"
    },
    "description": "革命性的三重测试框架，采用 Playwright（主要）、Selenium（备用）和全面的 CI/CD 集成，实现卓越的跨平台 UI 测试。",
    "header": {
      "subtitle": "企业级 UI 测试，具有智能浏览器选择和跨平台兼容性",
      "title": "跨平台 UI 测试框架"
    },
    "makefile_integration": {
      "commands": {
        "install_browsers": "make install-browsers：安装所需的浏览器依赖项",
        "test_all": "make test：运行完整的测试套件（后端 + 前端 + UI）",
        "test_playwright": "make test-playwright：强制执行 Playwright（如果可用）",
        "test_selenium": "make test-selenium：强制执行 Selenium",
        "test_ui": "make test-ui：使用智能框架选择运行所有 UI 测试",
        "title": "🔧 Available Commands"
      },
      "description": "与现有构建系统无缝集成，为复杂的测试操作提供简单的命令。",
      "platform_detection": {
        "automatic": "自动检测：Makefile 检测操作系统并选择适当的框架",
        "dependency_check": "依赖项检查：验证所需的浏览器和驱动程序是否可用",
        "error_reporting": "错误报告：缺少依赖项时的清晰消息",
        "graceful_fallback": "优雅备用：如果 Playwright 不可用，则回退到 Selenium",
        "title": "平台检测逻辑"
      },
      "title": "Makefile 集成"
    },
    "navigation": {
      "database_security": "Database Security →",
      "testing": "← Testing Overview",
      "title": "快速导航"
    },
    "overview": {
      "architecture": {
        "cicd_integration": "CI/CD 集成：具有快速失败逻辑和全面错误报告的 GitHub Actions",
        "playwright_primary": "Playwright（主要）：Linux、macOS、Windows - 完全支持 Chrome、Firefox 和 WebKit 跨浏览器",
        "selenium_fallback": "Selenium（备用）：OpenBSD、FreeBSD - 在 Playwright 不可用时提供可靠的 WebDriver 自动化",
        "title": "🏗️ Triple Testing Architecture"
      },
      "benefits": {
        "ci_optimization": "CI/CD 优化：快速失败执行和全面的调试输出",
        "cross_browser": "跨浏览器兼容性：支持 Chrome、Firefox、Safari/WebKit",
        "cross_platform": "跨平台卓越性：无缝测试 5 个操作系统",
        "intelligent_selection": "智能选择：框架自动为每个平台选择最佳测试工具",
        "production_parity": "生产环境一致性：真实数据库集成和适当的用户生命周期管理",
        "title": "主要优势"
      },
      "description": "SysManage 实现了革命性的三重测试框架，可自动适应平台功能，确保在所有支持的环境中进行全面的 UI 测试覆盖。",
      "title": "框架概览"
    },
    "playwright": {
      "browser_support": {
        "chromium": "Chromium：在所有平台上完全支持（Linux、macOS、Windows）",
        "firefox": "Firefox：在所有平台上完全支持",
        "title": "浏览器支持矩阵",
        "webkit": "WebKit（Safari）：仅 macOS - 在其他平台上自动排除"
      },
      "configuration": {
        "authentication": "使用 sysmanage.yaml 中的盐进行 Argon2 密码哈希",
        "cleanup": "测试完成后自动清理测试用户",
        "conftest": "Playwright fixtures 定义在 /tests/ui/conftest.py",
        "database": "真实的 PostgreSQL 数据库集成和适当的用户注入",
        "title": "配置"
      },
      "description": "现代浏览器自动化框架，提供企业级可靠性的跨浏览器测试。",
      "features": {
        "async_native": "异步原生：为现代 JavaScript 构建，原生支持 async/await",
        "auto_wait": "自动等待：智能等待元素，无需显式睡眠",
        "cross_browser": "跨浏览器测试：支持 Chromium、Firefox、WebKit（Safari）",
        "mobile_testing": "移动测试：设备模拟和触摸交互支持",
        "network_interception": "网络拦截：模拟和监控网络请求",
        "screenshots": "自动截图：通过可视化证据进行故障调试",
        "title": "🎭 Playwright Features"
      },
      "title": "Playwright 测试（主要框架）"
    },
    "selenium": {
      "configuration": {
        "browser_detection": "智能浏览器检测和驱动程序选择",
        "screenshot_support": "为调试失败的测试捕获截图",
        "timeout_handling": "强大的超时和错误处理",
        "title": "配置",
        "webdriver_manager": "使用 webdriver-manager 自动管理 WebDriver"
      },
      "description": "可靠的 WebDriver 自动化框架，作为 Playwright 不可用平台的智能备用。",
      "features": {
        "broad_support": "广泛的浏览器支持：兼容 Chrome、Firefox、Edge、Safari",
        "cross_platform": "跨平台：在所有操作系统上行为一致",
        "stable_api": "稳定的 API：成熟且文档完善的自动化接口",
        "title": "Selenium 功能",
        "webdriver": "WebDriver 标准：行业标准的浏览器自动化协议"
      },
      "title": "Selenium 测试（备用框架）",
      "use_cases": {
        "freebsd": "FreeBSD：主要测试框架（Playwright 不可用）",
        "legacy_systems": "传统系统：与旧浏览器更广泛的兼容性",
        "openbsd": "OpenBSD：主要测试框架（Playwright 不可用）",
        "specific_drivers": "特定驱动程序：当需要特定 WebDriver 功能时",
        "title": "🔄 When Selenium is Used"
      }
    },
    "test_structure": {
      "description": "组织良好的测试结构，确保可维护性和全面覆盖。",
      "file_organization": {
        "conftest_playwright": "/tests/ui/conftest.py - Playwright fixtures 和配置",
        "conftest_selenium": "/tests/ui/conftest_selenium.py - Selenium fixtures 和配置",
        "cross_browser": "/tests/ui/test_login_cross_browser.py - 跨浏览器登录测试",
        "test_files": "/tests/ui/test_*.py - 具有特定场景的单独测试文件",
        "title": "📁 File Organization"
      },
      "test_scenarios": {
        "cross_browser": "跨浏览器：在 Chrome、Firefox、WebKit 上进行相同的测试",
        "error_handling": "错误处理：无效凭据和错误消息验证",
        "login_flow": "登录流程：完整的身份验证工作流测试",
        "navigation": "导航：登录后导航和用户界面验证",
        "responsive": "响应式设计：跨不同视口大小的 UI 测试",
        "title": "测试场景"
      },
      "title": "测试结构和组织"
    },
    "title": "跨平台 UI 测试框架 - SysManage"
  }
}